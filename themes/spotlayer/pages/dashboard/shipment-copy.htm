title = "Shipment View"
url = "/dashboard/shipments/:id/copy"
layout = "admin"
is_hidden = 0
role = 0
permission = 0
anonymous_only = 0
logged_only = 1
child_of = "dashboard/shipments"
menu_breadcrumb = "order"
hide_crumb = 0
remove_crumb_trail = 0
crumb_disabled = 0

[viewBag]
==
<?php
function onStart(){
    if(!Auth::getUser()->hasUserPermission(["order"],'r')) {
        \Flash::error($this['theme_lang']['not_allowed']);
        return Redirect::to('dashboard/shipments/');
    }

    $this['order']      =   $order  =   $item   =   \Spot\Shipment\Models\Order::find($this->param('id'));

    switch (Auth::getUser()->role_id) {
        case 6:
            if(!in_array($order->office_id, Auth::getUser()->manage->pluck('id')->toArray())){
                \Flash::error($this['theme_lang']['not_allowed']);
                return Redirect::to('dashboard/shipments/');
            }
            break;
        case 5:
            if($order->sender_id != Auth::getUser()->id && $order->receiver_id != Auth::getUser()->id){
                \Flash::error($this['theme_lang']['not_allowed']);
                return Redirect::to('dashboard/shipments/');
            }
            break;
        case 4:
            if(Auth::getUser()->is_superuser){

                if($order->assigned_id != Auth::getUser()->id){
                    if($order->manifest_id != null){
                        if($order->driver_id != Auth::getUser()->id && $order->employee_id != Auth::getUser()->id){
                            \Flash::error($this['theme_lang']['not_allowed']);
                            return Redirect::to('dashboard/shipments/');
                        }
                    }else{
                        if($order->office_id != Auth::getUser()->office){
                            \Flash::error($this['theme_lang']['not_allowed']);
                            return Redirect::to('dashboard/shipments/');
                        }
                    }
                }else{
                    if($order->office_id != Auth::getUser()->office){
                        \Flash::error($this['theme_lang']['not_allowed']);
                        return Redirect::to('dashboard/shipments/');
                    }
                }

            }else{
                if($order->assigned_id != Auth::getUser()->id){
                    if($order->manifest_id != null){
                        if($order->driver_id != Auth::getUser()->id && $order->employee_id != Auth::getUser()->id){
                            \Flash::error($this['theme_lang']['not_allowed']);
                            return Redirect::to('dashboard/shipments/');
                        }
                    }else{
                        \Flash::error($this['theme_lang']['not_allowed']);
                        return Redirect::to('dashboard/shipments/');
                    }
                }
            }
            break;
        case 3:
            $employees  =   \RainLab\User\Models\User::whereHas('groups',function($q){$q->whereIn('user_group_id', Auth::getUser()->groups->pluck('id')->toArray());})->pluck('id')->toArray();
            if(!in_array($order->assigned_id, $employees)){
                if($order->manifest_id != null){
                    if(!in_array($order->driver_id, $employees) && !in_array($order->employee_id, $employees)){
                        \Flash::error($this['theme_lang']['not_allowed']);
                        return Redirect::to('dashboard/shipments/');
                    }
                }else{
                    \Flash::error($this['theme_lang']['not_allowed']);
                    return Redirect::to('dashboard/shipments/');
                }
            }
            break;
    }

    if(!$order){
        \Flash::error($this['theme_lang']['404']);
        return Redirect::to('dashboard/shipments');
    }
    $this['offices']    =   \Spot\Shipment\Models\Office::where('id', '!=', $order->office_id)->get();
    $this['manifestes'] =   \Spot\Shipment\Models\Manifest::where('id', '!=', $order->manifest_id)->where('status',1)->get();
    $employees          =   \RainLab\User\Models\User::whereNotIn('role_id',[1,5])->where('id', '!=', $order->assigned_id)->select('id','name','places')->get()->toArray();
    $employees_data     =   array();


    if($order->sender_address){
        if($order->sender_address->area){
            $shipping_from_area =   4;
            $shipping_from_area_id =   $order->sender_address->area->id;
        }elseif($order->sender_address->city){
            $shipping_from_area =   3;
            $shipping_from_area_id =   $order->sender_address->thecity->id;
        }elseif($order->sender_address->state){
            $shipping_from_area =   2;
            $shipping_from_area_id =   $order->sender_address->thestate->id;
        }elseif($order->sender_address->country){
            $shipping_from_area =   1;
            $shipping_from_area_id =   $order->sender_address->thecountry->id;
        }
    }
    if($order->receiver_address){
        if($order->receiver_address->area){
            $shipping_to_area =   4;
            $shipping_to_area_id =   $order->receiver_address->area->id;
        }elseif($order->receiver_address->city){
            $shipping_to_area =   3;
            $shipping_to_area_id =   $order->receiver_address->thecity->id;
        }elseif($order->receiver_address->state){
            $shipping_to_area =   2;
            $shipping_to_area_id =   $order->receiver_address->thestate->id;
        }elseif($order->receiver_address->country){
            $shipping_to_area =   1;
            $shipping_to_area_id =   $order->receiver_address->thecountry->id;
        }
    }
    $shipping_area_type     =    (($order->type == 1) ? $shipping_from_area : $shipping_to_area);
    $shipping_area          =    (($order->type == 1) ? $shipping_from_area_id : $shipping_to_area_id);
    $shipping_address       =    (($order->type == 1) ? $order->sender_address : $order->receiver_address);

    foreach($employees as $employee){
        $areas          =   $employee['places'];
        if($areas){
            $covered = false;
            foreach($areas as $area){
                switch($area['type']){
                    case 1:
                        if($shipping_address->country   ==  $area['area']){
                            $covered = true;
                        }
                    break;
                    case 2:
                        if($shipping_address->state   ==  $area['area']){
                            $covered = true;
                        }
                    break;
                    case 3:
                        if($shipping_address->city   ==  $area['area']){
                            $covered = true;
                        }
                    break;
                    case 4:
                        if($shipping_address->county   ==  $area['area']){
                            $covered = true;
                        }
                    break;
                }
            }
            if($covered == true){
                $employees_data[]   =   $employee;
            }
        }
    }
    $this['employees']  =   $employees_data;

    if(empty($employees_data)){
        $this['no_employees']       =   true;
        $this['employees']          =   \RainLab\User\Models\User::whereNotIn('role_id',[1,5])->where('id', '!=', $order->assigned_id)->select('id','name','places')->get()->toArray();
    }

    if(!$order){
        return Redirect::to($this->page->child_of);
    }
    $progress           = 0;
    $progress_status    = 'warning';
    if($order->delivery_date){
        $deliverydate       = \Carbon\Carbon::parse($order->delivery_date);
    }else{
        $shipdate           = \Carbon\Carbon::parse($order->ship_date);
        $deliverydate       = $shipdate->addHours($order->deliverytime->count);
    }
    $today              = \Carbon\Carbon::now();

    $time_diff          = $today->diffInDays($deliverydate, false);

    switch($order->requested){
        case 0:
            $progress           = 0;
            break;
        case 1:
            $progress           = 30;
            break;
        case 2:
            $progress           = 100;
            break;
        case 3:
            $progress           = 60;
            break;
        case 4:
            $progress           = 100;
            break;
        case 9:
            $progress           = 50;
            break;
        default:
            $progress           = 100;
    }

    if($progress == 100){
        $progress_status    = 'success';
    }else{
        if($time_diff < 0){
            if($order->requested < 4 or $order->requested == 9){
                $progress_status    = 'danger';
            }
        }
    }

    $this['progress']               =   $progress;
    $this['progress_status']        =   $progress_status;
    $this['countries']      =   \RainLab\Location\Models\Country::select('id','name')->where('is_enabled', 1)->get();
    $this['states']         =   \RainLab\Location\Models\State::select('id','name')->get();
    $this['cities']         =   \Spot\Shipment\Models\City::select('id','name')->get();
    $this['areas']          =   \Spot\Shipment\Models\Area::select('id','name')->get();



    $sender_fees                =   $receiver_fees  =   0;
    $delivery_cost              =   $item->courier_fee;

    if($item->payment_type  ==  1){
        $receiver_fees          =   $delivery_cost;
    }else{
        $sender_fees            =   $delivery_cost;
    }

    if(isset($item->receiver_address_id) && $item->receiver_address_id   !=   '') {
        if(isset($item->return_defray) && $item->return_defray != '' && $item->return_defray != 2){
            $delivery_cost  +=   $item->return_courier_fee;
            if($item->return_package_fee  ==  2){
                $sender_fees        +=   $item->return_courier_fee;
            }else{
                $receiver_fees      +=   $item->return_courier_fee;
            }
        }

        if(isset($item->package_fee) && $item->package_fee != ''){
            $receiver_fees      +=   $item->package_fee;
        }
    }else{
        if($item->payment_type  ==  1   &&  $item->receiver_address_id  &&  $item->receiver_address_id   !=   ''){
            $receiver_fees          +=   $this['settings']['fees']['delivery_cost'];
        }else{
            $sender_fees            +=   $this['settings']['fees']['delivery_cost'];
        }
    }

    $this['deliver_cost']       =   $item->courier_fee+$item->return_courier_fee;
    $this['sender_fees']        =   $sender_fees;
    $this['receiver_fees']      =   $receiver_fees;

    if($this['settings']['payment']['enable'] == 1){
        if(in_array('paystack', $this['settings']['payment']['gateways'])){
            if(Auth::getUser()->id == $order->sender_id){
                $this['paystack_amount']         =   round($this->currencyConverter($order->currency->currency_code,'GHS', $sender_fees));
            }elseif(Auth::getUser()->id == $order->receiver_id){
                $this['paystack_amount']         =   round($this->currencyConverter($order->currency->currency_code,'GHS', $receiver_fees));
            }
        }
    }

    if($item->requested == 12){
        $this['total_received']     =   $total_received =   \Spot\Shipment\Models\Payment::where('item_id', $item->id)->where(function($q){
            $q->where(function($q){
                $q->where('payment_type', 'package_fee');
                $q->where(function($q){
                    $q->where('payment_with', '!=', null);
                    $q->orWhere('treasury_id', '!=', null);
                });
            });
            $q->orWhere(function($q){
                $q->where('payment_type', '!=', 'package_fee');
            });
        })->where('status', 5)->sum('amount');
    }else{
        $this['total_received']     =   $total_received =   \Spot\Shipment\Models\Payment::where('item_id', $item->id)->where(function($q){
            $q->where(function($q){
                $q->where('payment_type', 'package_fee');
                $q->where(function($q){
                    $q->where('payment_with', '!=', null);
                    $q->orWhere('treasury_id', '!=', null);
                });
            });
            $q->orWhere(function($q){
                $q->where('payment_type', '!=', 'package_fee');
            });
        })->where('for_id', '!=', null)->sum('amount');
    }

    $this['total_remaining']    =   ($sender_fees+$receiver_fees)-$total_received;
}
function currencyConverter($fromCurrency,$toCurrency,$amount) {
    $url = file_get_contents('https://free.currconv.com/api/v7/convert?apiKey=do-not-use-this-key&q='.$fromCurrency.'_'.$toCurrency.'&compact=y');
    $json = json_decode($url, true);
    return $json[$fromCurrency.'_'.$toCurrency]['val']*$amount;
}
function onEnd(){
    $this->page->title = $this['theme_lang']['shipment_view'].' #'.$this['order']->id;
}
function onDelete()
{
    if(!Auth::getUser()->hasUserPermission(["order"],'d')) {
        return Response::json(['error' => $this['theme_lang']['not_allowed']], 401);
    }

    $item = \Spot\Shipment\Models\Order::where('id',$this->param('id'))->first();

    $activity                   = new \Spot\Shipment\Models\Activity;
    $activity->user_id          = Auth::getUser()->id;
    $activity->order_id         = $item->id;
    $activity->description      = 'deleted';
    $activity->created_at       = \Carbon\Carbon::now();
    $activity->updated_at       = \Carbon\Carbon::now();
    $activity->save();

    $item->payments->each->delete();
    $item->activities->each->delete();
    $item->tasks->each->delete();
    $item->items->each->delete();
    $item->delete();
    return Redirect::to($this->page->child_of);
}
function onAccept()
{
    $data = post();
    if(!Auth::getUser()->hasUserPermission(["order"],'u')) {
        return Response::json(['error' => $this['theme_lang']['not_allowed']], 401);
    }
    $status                 = \Spot\Shipment\Models\Status::where('equal', 1)->first();
    $item                   = \Spot\Shipment\Models\Order::find($this->param('id'));
    if($status){
        $item->status           = $status->id;
    }
    $item->requested        = 1;
    $item->updated_at       = \Carbon\Carbon::now();
    $item->update();

    $event_data =   array(
        'sender'            =>  Auth::getUser(),
        'shipping_sender'   =>  $item->sender_id,
        'shipping_receiver'     =>  (($item->receiver_id) ? $item->receiver_id : null),
        'item'              =>  $item,
        'type'              =>  'approved_shipment',
        'thumb'             =>  'icon',
        'icon'              =>  'flaticon-gift',
        'subject'           =>  $this['theme_lang']['approved_shipment'],
        'message'           =>  $this['theme_lang']['approved_shipment'],
        'url'               =>  url('dashboard/shipments/'.$item->id.'/view'),
        'badge'             =>  'success',
    );
    \Event::fire('spot.event', [$this['pusher'],$this['settings'],$event_data]);

    $activity                   = new \Spot\Shipment\Models\Activity;
    $activity->user_id          = Auth::getUser()->id;
    $activity->order_id         = $item->id;
    $activity->description      = 'accepted';
    $activity->created_at       = \Carbon\Carbon::now();
    $activity->updated_at       = \Carbon\Carbon::now();
    $activity->save();

    \Flash::success($this['theme_lang']['updated_successfully']);
    return Redirect::to('dashboard/shipments/'.$item->id.'/view');
}
function onRefuse()
{
    $data = post();
    if(!Auth::getUser()->hasUserPermission(["order"],'u')) {
        return Response::json(['error' => $this['theme_lang']['not_allowed']], 401);
    }
    $status                 = \Spot\Shipment\Models\Status::where('equal', 2)->first();
    $item                   = \Spot\Shipment\Models\Order::find($this->param('id'));
    if($status){
        $item->status           = $status->id;
    }
    $item->requested        = 2;
    $item->updated_at       = \Carbon\Carbon::now();
    $item->update();

    \Spot\Shipment\Models\Payment::where('item_id', $item->id)->update(['status'    =>  2]);

    $event_data =   array(
        'sender'            =>  Auth::getUser(),
        'shipping_sender'   =>  $item->sender_id,
        'shipping_receiver'     =>  (($item->receiver_id) ? $item->receiver_id : null),
        'item'              =>  $item,
        'type'              =>  'refused_shipment',
        'thumb'             =>  'icon',
        'icon'              =>  'flaticon-gift',
        'subject'           =>  $this['theme_lang']['refused_shipment'],
        'message'           =>  ((isset($data['message']) && $data['message'] != '') ? $data['message'] : $this['theme_lang']['refused_shipment']),
        'url'               =>  url('dashboard/shipments/'.$item->id.'/view'),
        'badge'             =>  'success',
    );
    \Event::fire('spot.event', [$this['pusher'],$this['settings'],$event_data]);

    $activity                   = new \Spot\Shipment\Models\Activity;
    $activity->user_id          = Auth::getUser()->id;
    $activity->order_id         = $item->id;
    $activity->description      = 'refused';
    if(isset($data['message']) && $data['message'] != ''){
        $activity->other            = htmlspecialchars($data['message']);
    }
    $activity->created_at       = \Carbon\Carbon::now();
    $activity->updated_at       = \Carbon\Carbon::now();
    $activity->save();

    \Flash::success($this['theme_lang']['updated_successfully']);
    return Redirect::to('dashboard/shipments/'.$item->id.'/view');
}
function onPostpone()
{
    $data = post();
    if(!Auth::getUser()->hasUserPermission(["order"],'u')) {
        return Response::json(['error' => $this['theme_lang']['not_allowed']], 401);
    }
    $item                   = \Spot\Shipment\Models\Order::find($this->param('id'));
    $item->delivery_date    = \Carbon\Carbon::parse(\Carbon\Carbon::createFromFormat($this['settings']['dateformat'], $data['ship_date']));
    $item->postponed        = 1;
    $item->updated_at       = \Carbon\Carbon::now();
    $item->update();

    $event_data =   array(
        'sender'                =>  Auth::getUser(),
        'shipping_sender'       =>  $item->sender_id,
        'shipping_receiver'     =>  (($item->receiver_id) ? $item->receiver_id : null),
        'item'                  =>  $item,
        'type'                  =>  'postponed_shipment',
        'thumb'                 =>  'icon',
        'icon'                  =>  'flaticon-gift',
        'subject'               =>  $this['theme_lang']['postponed_shipment'],
        'message'               =>  ((isset($data['message']) && $data['message'] != '') ? $data['message'] : $this['theme_lang']['postponed_shipment']),
        'url'                   =>  url('dashboard/shipments/'.$item->id.'/view'),
        'badge'                 =>  'success',
    );
    \Event::fire('spot.event', [$this['pusher'],$this['settings'],$event_data]);

    $activity                   = new \Spot\Shipment\Models\Activity;
    $activity->user_id          = Auth::getUser()->id;
    $activity->order_id         = $item->id;
    $activity->description      = 'postponed';
    if(isset($data['message']) && $data['message'] != ''){
        $activity->other            = htmlspecialchars($data['message']);
    }
    $activity->created_at       = \Carbon\Carbon::now();
    $activity->updated_at       = \Carbon\Carbon::now();
    $activity->save();

    \Flash::success($this['theme_lang']['updated_successfully']);
    return Redirect::to('dashboard/shipments/'.$item->id.'/view');
}
function onTransfer()
{
    $data = post();
    if(!Auth::getUser()->hasUserPermission(["order"],'u')) {
        return Response::json(['error' => $this['theme_lang']['not_allowed']], 401);
    }
    $item                       = \Spot\Shipment\Models\Order::find($this->param('id'));
    $item->office_id            = htmlspecialchars($data['office_id']);
    $item->updated_at           = \Carbon\Carbon::now();
    $item->update();

    $office = \Spot\Shipment\Models\Office::find($data['office_id']);
    if($office->responsible_id == null){
        $responsible_id         =   $office->manager_id;
    }else{
        $responsible_id         =   $office->responsible_id;
    }

    $event_data =   array(
        'sender'                =>  Auth::getUser(),
        'shipping_sender'       =>  $item->sender_id,
        'shipping_receiver'     =>  (($item->receiver_id) ? $item->receiver_id : null),
        'shipping_responsible'  =>  $responsible_id,
        'item'                  =>  $item,
        'type'                  =>  'transfered_shipment',
        'thumb'                 =>  'icon',
        'icon'                  =>  'flaticon-gift',
        'subject'               =>  $this['theme_lang']['transfered_shipment'].' '.$this['theme_lang']['to'].' '.$office->name,
        'message'               =>  $this['theme_lang']['transfered_shipment'],
        'url'                   =>  url('dashboard/shipments/'.$item->id.'/view'),
        'badge'                 =>  'success',
    );
    \Event::fire('spot.event', [$this['pusher'],$this['settings'],$event_data]);

    $activity                   = new \Spot\Shipment\Models\Activity;
    $activity->user_id          = Auth::getUser()->id;
    $activity->order_id         = $item->id;
    $activity->description      = 'transfered';
    $activity->created_at       = \Carbon\Carbon::now();
    $activity->updated_at       = \Carbon\Carbon::now();
    $activity->save();

    \Flash::success($this['theme_lang']['updated_successfully']);
    return Redirect::to('dashboard/shipments/'.$item->id.'/view');
}
function onAssign()
{
    $data = post();
    if(!Auth::getUser()->hasUserPermission(["order"],'u')) {
        return Response::json(['error' => $this['theme_lang']['not_allowed']], 401);
    }
    $item                       = \Spot\Shipment\Models\Order::find($this->param('id'));
    $item->assigned_id          = htmlspecialchars($data['assigned_id']);
    $item->updated_at           = \Carbon\Carbon::now();
    $item->update();

    $event_data =   array(
        'sender'                =>  Auth::getUser(),
        'shipping_sender'       =>  $item->sender_id,
        'shipping_receiver'     =>  (($item->receiver_id) ? $item->receiver_id : null),
        'shipping_responsible'  =>  $data['assigned_id'],
        'item'                  =>  $item,
        'type'                  =>  'assign_shipment',
        'thumb'                 =>  'icon',
        'icon'                  =>  'flaticon-gift',
        'subject'               =>  $this['theme_lang']['assign_shipment'],
        'message'               =>  $this['theme_lang']['assign_shipment'],
        'url'                   =>  url('dashboard/shipments/'.$item->id.'/view'),
        'badge'                 =>  'success',
    );
    \Event::fire('spot.event', [$this['pusher'],$this['settings'],$event_data]);

    $activity                   = new \Spot\Shipment\Models\Activity;
    $activity->user_id          = Auth::getUser()->id;
    $activity->order_id         = $item->id;
    $activity->description      = 'assigned';
    $activity->created_at       = \Carbon\Carbon::now();
    $activity->updated_at       = \Carbon\Carbon::now();
    $activity->save();

    \Flash::success($this['theme_lang']['updated_successfully']);
    return Redirect::to('dashboard/shipments/'.$item->id.'/view');
}
function onManifest()
{
    $data = post();
    if(!Auth::getUser()->hasUserPermission(["manifest"],'c')){
        return Response::json(['error' => $this['theme_lang']['not_allowed']], 401);
    }
    $item                       = \Spot\Shipment\Models\Order::find($this->param('id'));
    $item->manifest_id          = htmlspecialchars($data['manifest_id']);
    $item->updated_at           = \Carbon\Carbon::now();
    $item->update();

    $manifest                   = \Spot\Shipment\Models\Manifest::find($data['manifest_id']);

    if($item->assigned_id){
        $shipping_responsible       =   $item->assigned_id;
    }elseif($item->manifest_id){
        if($item->manifest->driver_id){
            $shipping_responsible  =   $item->manifest->driver_id;
        }elseif($item->manifest->employee_id){
            $shipping_responsible  =   $item->manifest->employee_id;
        }
    }

    $event_data =   array(
        'sender'                =>  Auth::getUser(),
        'shipping_sender'       =>  $item->sender_id,
        'shipping_receiver'     =>  (($item->receiver_id) ? $item->receiver_id : null),
        'shipping_responsible'  =>  $item->assigned_id,
        'item'                  =>  $item,
        'type'                  =>  'manifest_assigned',
        'thumb'                 =>  'icon',
        'icon'                  =>  'flaticon-gift',
        'subject'               =>  $this['theme_lang']['manifest_assigned'],
        'message'               =>  $this['theme_lang']['manifest_assigned'],
        'url'                   =>  url('dashboard/shipments/'.$item->id.'/view'),
        'badge'                 =>  'success',
    );
    \Event::fire('spot.event', [$this['pusher'],$this['settings'],$event_data]);

    $activity                   = new \Spot\Shipment\Models\Activity;
    $activity->user_id          = Auth::getUser()->id;
    $activity->order_id         = $item->id;
    $activity->description      = 'manifest_assigned';
    $activity->created_at       = \Carbon\Carbon::now();
    $activity->updated_at       = \Carbon\Carbon::now();
    $activity->save();

    \Flash::success($this['theme_lang']['updated_successfully']);
    return Redirect::to('dashboard/shipments/'.$item->id.'/view');
}
function onStock()
{
    if(!Auth::getUser()->hasUserPermission(["order"],'u')) {
        return Response::json(['error' => $this['theme_lang']['not_allowed']], 401);
    }


    $item                   = \Spot\Shipment\Models\Order::find($this->param('id'));

    $treasury            = \Spot\Shipment\Models\Treasury::where('office_id', $item->office_id)->first();
    if(!$treasury){
        $treasury            = \Spot\Shipment\Models\Treasury::where('default', 1)->first();
    }

    $employeeorder          = \Spot\Shipment\Models\Employeeorder::where('order_id', $item->id)->first();
    $employee_id            = $employeeorder->employee_id;
    $employeeorder->delete();
    if(in_array($item->requested,[9,6])){
        $payments               = \Spot\Shipment\Models\Payment::where('item_id', $item->id)->where('payment_with', $employee_id)->where('status', 1)->get();
        foreach($payments as $old){
            $payment                    = new \Spot\Shipment\Models\Payment;
            $payment->type              = 1;
            $payment->payment_type      = $old->payment_type;
            $payment->item_id           = $old->item_id;
            $payment->payment_with      = $employee_id;
            $payment->movement          = 7; //Deduction from the balance of packages
            $payment->amount            = '-'.$old->amount;
            $payment->status            = 3;
            $payment->date              = \Carbon\Carbon::now();
            $payment->created_at        = \Carbon\Carbon::now();
            $payment->updated_at        = \Carbon\Carbon::now();
            $payment->save();


            $payment                    = new \Spot\Shipment\Models\Payment;
            $payment->type              = 3;
            $payment->payment_type      = $old->payment_type;
            $payment->item_id           = $old->item_id;
            $payment->movement          = 2; //Deduction from the balance of packages
            $payment->amount            = $old->amount;
            $payment->status            = 5;
            $payment->treasury_id       = $treasury->id;
            $payment->date              = \Carbon\Carbon::now();
            $payment->created_at        = \Carbon\Carbon::now();
            $payment->updated_at        = \Carbon\Carbon::now();
            $payment->save();


            $treasury->balance          = $treasury->balance+$old->amount;
            $treasury->updated_at       = \Carbon\Carbon::now();
            $treasury->save();
        }
    }

    $item->requested        = 7;
    $status                 = \Spot\Shipment\Models\Status::where('equal', 7)->first();
    $type                   = 'stock_saved';
    if($status){
        $item->status           = $status->id;
    }
    $item->assigned_id      = null;
    $item->manifest_id      = null;
    $item->updated_at       = \Carbon\Carbon::now();
    $item->update();

    $event_data =   array(
        'sender'                =>  Auth::getUser(),
        'shipping_sender'       =>  $item->sender_id,
        'shipping_receiver'     =>  (($item->receiver_id) ? $item->receiver_id : null),
        'shipping_responsible'  =>  $item->assigned_id,
        'item'                  =>  $item,
        'type'                  =>  'stock_saved',
        'thumb'                 =>  'icon',
        'icon'                  =>  'flaticon-gift',
        'subject'               =>  $this['theme_lang']['stock_saved'],
        'message'               =>  $this['theme_lang']['stock_saved'],
        'url'                   =>  url('dashboard/shipments/'.$item->id.'/view'),
        'badge'                 =>  'success',
    );
    \Event::fire('spot.event', [$this['pusher'],$this['settings'],$event_data]);

    $activity                   = new \Spot\Shipment\Models\Activity;
    $activity->user_id          = Auth::getUser()->id;
    $activity->order_id         = $item->id;
    $activity->description      = 'stock_saved';
    $activity->created_at       = \Carbon\Carbon::now();
    $activity->updated_at       = \Carbon\Carbon::now();
    $activity->save();

    \Flash::success($this['theme_lang']['updated_successfully']);
    return Redirect::to('dashboard/shipments');
}
function onDeliver()
{
    $data = post();
    if(!Auth::getUser()->hasUserPermission(["order"],'u')) {
        return Response::json(['error' => $this['theme_lang']['not_allowed']], 401);
    }
    $item                   = \Spot\Shipment\Models\Order::find($this->param('id'));


    if($item->assigned_id){
        $responsiable   =   $item->assigned_id;
    }elseif($item->manifest_id){
        if($item->manifest->driver_id){
            $responsiable   =   $item->manifest->driver_id;
        }elseif($item->manifest->employee_id){
            $responsiable   =   $item->manifest->employee_id;
        }else{
            $responsiable   =   Auth::getUser()->id;
        }
    }else{
        $responsiable   =   Auth::getUser()->id;
    }

    if($item->requested ==  5){

        $item->requested        = 6;
        $status                 = \Spot\Shipment\Models\Status::where('equal', 6)->first();
        $type                   = 'discards_driver_received';
        if($status){
            $item->status           = $status->id;
        }
        $item->updated_at       = \Carbon\Carbon::now();
        $item->update();

    }elseif($item->requested ==  10){


        if($item->assigned_id != null){
            $employee_id    =   $item->assigned_id;
        }elseif($item->manifest_id != null){
            if($item->manifest->driver_id){
                $employee_id   =   $item->manifest->driver_id;
            }elseif($item->manifest->employee_id){
                $employee_id   =   $item->manifest->employee_id;
            }else{
                $employee_id   =   Auth::getUser()->id;
            }
        }else{
            $employee_id   =   Auth::getUser()->id;
        }

        $payments   =   \Spot\Shipment\Models\Payment::where('item_id', $item->id)->where('payment_type', 'package_fee')->where('treasury_id', '!=', null)->get();
        foreach($payments as $old){

                $payment                    = new \Spot\Shipment\Models\Payment;
                $payment->type              = 1;
                $payment->payment_type      = $old->payment_type;
                $payment->item_id           = $old->item_id;
                $payment->payment_with      = $employee_id;
                $payment->movement          = 8;
                $payment->status            = 3;
                $payment->amount            = $old->amount;
                $payment->date              = \Carbon\Carbon::now();
                $payment->created_at        = \Carbon\Carbon::now();
                $payment->updated_at        = \Carbon\Carbon::now();
                $payment->save();

                $payment                    = new \Spot\Shipment\Models\Payment;
                $payment->type              = 3;
                $payment->payment_type      = $old->payment_type;
                $payment->item_id           = $old->item_id;
                $payment->movement          = 1;
                $payment->status            = 3;
                $payment->amount            = '-'.$old->amount;
                $payment->treasury_id       = $old->treasury_id;
                $payment->date              = \Carbon\Carbon::now();
                $payment->created_at        = \Carbon\Carbon::now();
                $payment->updated_at        = \Carbon\Carbon::now();
                $payment->save();




                $treasury                   = \Spot\Shipment\Models\Treasury::find($old->treasury_id);
                $treasury->balance          = $treasury->balance-$old->amount;
                $treasury->updated_at       = \Carbon\Carbon::now();
                $treasury->save();

                $type   =   'return_discards';
        }

        $item->requested            = 11;
        $item->updated_at           = \Carbon\Carbon::now();
        $item->update();

    }else{
        // //0 = Pending | 1 = Approved | 2 = Refused | 3 = Delivered to driver | 4 = Delivered | 5 = Return request | 6 = Delivery of discards to the driver | 7 = Supply in stock | 8 = Returned | 9 = received | 10 = return discards |


        $sender_fees                =   $receiver_fees  =   0;

        $sender_fees                =   $receiver_fees  =   0;
        $delivery_cost              =   ((isset($data['courier_fee']) && $data['courier_fee'] != '') ? $data['courier_fee'] : $item->courier_fee);

        if($item->payment_type  ==  1){
            $receiver_fees          =   $delivery_cost;
        }else{
            $sender_fees            =   $delivery_cost;
        }

        if(isset($data['receiver_address_id']) && $data['receiver_address_id']   !=   '') {
            $sender_address_id      =   \Spot\Shipment\Models\Address::find($item->sender_address_id);
            $receiver_address_id    =   \Spot\Shipment\Models\Address::find($data['receiver_address_id']);

            $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->county)->where('to',$receiver_address_id->county)->where('type',4)->first();
            if(!$fees){
                $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->city)->where('to',$receiver_address_id->city)->where('type',3)->first();
                if(!$fees){
                    $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->state)->where('to',$receiver_address_id->state)->where('type',2)->first();
                    if(!$fees){
                        $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->country)->where('to',$receiver_address_id->country)->where('type',1)->first();
                    }
                }
            }

            if($fees){
                if($item->type   ==   1 && $item->receiver_address_id == null) {
                    $delivery_cost  +=   $fees->delivery_cost;
                }
                if($fees->packaging == 1 && isset($item->packaging_id) && $item->packaging_id != ''){
                    foreach($fees->packaging_fees as $package_fee   =>  $value){
                        if($package_fee ==  $item->packaging_id){
                            $delivery_cost  +=   $value;
                        }
                    }
                }
            }else{
                if($item->type   ==   1 && $item->receiver_address_id == null) {
                    $delivery_cost  +=   $this['settings']['fees']['delivery_cost'];
                }
            }
            if($item->payment_type  ==  1){
                $receiver_fees          =   $delivery_cost;
            }else{
                $sender_fees            =   $delivery_cost;
            }
            if(isset($data['return_defray']) && $data['return_defray'] != '' && $data['return_defray'] != 2){
                //$delivery_cost  +=   htmlspecialchars($data['return_courier_fee']);
                if($data['return_package_fee']  ==  2){
                    $sender_fees        +=   htmlspecialchars($data['return_courier_fee']);
                }else{
                    $receiver_fees      +=   htmlspecialchars($data['return_courier_fee']);
                }
            }

            if(isset($data['package_fee']) && $data['package_fee'] != ''){
                $receiver_fees      +=   htmlspecialchars($data['package_fee']);
            }

        }


        if($item->type     ==   1){

            $item->requested            = 9;
            $status                     = \Spot\Shipment\Models\Status::where('equal', 9)->first();
            $type                       = 'received';
            if($status){
                $item->status           = $status->id;
            }
            $item->type                 = 2;
            $item->receiver_id          = htmlspecialchars($data['receiver_id']);
            $item->receiver_address_id  = htmlspecialchars($data['receiver_address_id']);
            if(isset($data['return_defray']) && $data['return_defray'] != '' && $data['return_defray'] != 2){
                $item->return_defray    = htmlspecialchars($data['return_defray']);
                $item->package_fee      = htmlspecialchars($data['package_fee']);
                $item->return_package_fee= htmlspecialchars($data['return_package_fee']);
                $item->return_courier_fee= htmlspecialchars($data['return_courier_fee']);
            }
            $item->courier_fee          = $delivery_cost;
            $item->updated_at           = \Carbon\Carbon::now();
            $item->update();




            if($item->assigned_id != null){
                $employee_id    =   $item->assigned_id;
            }elseif($item->manifest_id != null){
                if($item->manifest->driver_id){
                    $employee_id   =   $item->manifest->driver_id;
                }elseif($item->manifest->employee_id){
                    $employee_id   =   $item->manifest->employee_id;
                }else{
                    $employee_id   =   Auth::getUser()->id;
                }
            }else{
                $employee_id   =   Auth::getUser()->id;
            }



            if($item->payment_type  ==  2){
                $total                      = $item->courier_fee+$item->customs_value;
                $total                      = $total+($item->tax*$item->courier_fee/100);
                $total                      = $total+($item->insurance*$item->courier_fee/100);
                if($item->return_package_fee == 1){
                    $total                  += $item->return_courier_fee;
                }
                if($item->return_defray == 1){
                    $total                  += $item->package_fee;
                }
                if($item->customs_value != 0){
                    $payment                    = new \Spot\Shipment\Models\Payment;
                    $payment->type              = 1;
                    $payment->payment_type      = 'customs';
                    $payment->item_id           = $item->id;
                    $payment->for_id            = $item->sender_id;
                    $payment->payment_with      = $employee_id;
                    $payment->movement          = 8; //Add  to the balance of packages
                    $payment->amount            = $item->customs_value;
                    $payment->status            = 3;
                    $payment->date              = \Carbon\Carbon::now();
                    $payment->created_at        = \Carbon\Carbon::now();
                    $payment->updated_at        = \Carbon\Carbon::now();
                    $payment->save();
                }
                if($item->tax != 0){
                    $payment                    = new \Spot\Shipment\Models\Payment;
                    $payment->type              = 1;
                    $payment->payment_type      = 'tax';
                    $payment->item_id           = $item->id;
                    $payment->for_id            = $item->sender_id;
                    $payment->payment_with      = $employee_id;
                    $payment->status            = 3;
                    $payment->movement          = 8; //Add  to the balance of packages
                    $payment->amount            = ($item->tax*$item->courier_fee/100);
                    $payment->date              = \Carbon\Carbon::now();
                    $payment->created_at        = \Carbon\Carbon::now();
                    $payment->updated_at        = \Carbon\Carbon::now();
                    $payment->save();
                }
                if($item->insurance != 0){
                    $payment                    = new \Spot\Shipment\Models\Payment;
                    $payment->type              = 1;
                    $payment->payment_type      = 'insurance';
                    $payment->item_id           = $item->id;
                    $payment->for_id            = $item->sender_id;
                    $payment->payment_with      = $employee_id;
                    $payment->movement          = 8; //Add  to the balance of packages
                    $payment->status            = 3;
                    $payment->amount            = '-'.($item->insurance*$item->courier_fee/100);
                    $payment->date              = \Carbon\Carbon::now();
                    $payment->created_at        = \Carbon\Carbon::now();
                    $payment->updated_at        = \Carbon\Carbon::now();
                    $payment->save();
                }


                $payment                    = new \Spot\Shipment\Models\Payment;
                $payment->type              = 1;
                $payment->item_id           = $item->id;
                $payment->payment_type      = 'courier_fee';
                $payment->for_id            = $item->sender_id;
                $payment->payment_with      = $employee_id;
                $payment->movement          = 8; //Add  to the balance of packages
                $payment->status            = 3;
                $payment->amount            = $item->courier_fee;
                $payment->date              = \Carbon\Carbon::now();
                $payment->created_at        = \Carbon\Carbon::now();
                $payment->updated_at        = \Carbon\Carbon::now();
                $payment->save();

                if($item->return_package_fee == 2 && $item->return_courier_fee){
                    $payment                    = new \Spot\Shipment\Models\Payment;
                    $payment->type              = 1;
                    $payment->item_id           = $item->id;
                    $payment->payment_type      = 'return_package_fee';
                    $payment->for_id            = $item->sender_id;
                    $payment->payment_with      = $employee_id;
                    $payment->movement          = 8; //Add  to the balance of packages
                    $payment->status            = 3;
                    $payment->amount            = $item->return_courier_fee;
                    $payment->date              = \Carbon\Carbon::now();
                    $payment->created_at        = \Carbon\Carbon::now();
                    $payment->updated_at        = \Carbon\Carbon::now();
                    $payment->save();
                }
            }

        }else{



            if($item->assigned_id != null){
                $employee_id    =   $item->assigned_id;
            }elseif($item->manifest_id != null){
                if($item->manifest->driver_id){
                    $employee_id   =   $item->manifest->driver_id;
                }elseif($item->manifest->employee_id){
                    $employee_id   =   $item->manifest->employee_id;
                }else{
                    $employee_id   =   Auth::getUser()->id;
                }
            }else{
                $employee_id   =   Auth::getUser()->id;
            }

            $item->requested        = 3;
            $status                 = \Spot\Shipment\Models\Status::where('equal', 3)->first();
            $type                   = 'driver_received';
            if($status){
                $item->status           = $status->id;
            }
            $item->updated_at       = \Carbon\Carbon::now();
            $item->update();

        }

        Db::table('spot_shipment_employee_order')->insert(
            ['order_id' => $item->id, 'employee_id' => $employee_id]
        );

    }

    $event_data =   array(
        'sender'                =>  Auth::getUser(),
        'shipping_sender'       =>  $item->sender_id,
        'shipping_receiver'     =>  (($item->receiver_id) ? $item->receiver_id : null),
        'shipping_responsible'  =>  $responsiable,
        'item'                  =>  $item,
        'type'                  =>  $type,
        'thumb'                 =>  'icon',
        'icon'                  =>  'flaticon-gift',
        'subject'               =>  $this['theme_lang'][$type],
        'message'               =>  $this['theme_lang'][$type],
        'url'                   =>  url('dashboard/shipments/'.$item->id.'/view'),
        'badge'                 =>  'success',
    );
    \Event::fire('spot.event', [$this['pusher'],$this['settings'],$event_data]);

    $activity                   = new \Spot\Shipment\Models\Activity;
    $activity->user_id          = Auth::getUser()->id;
    $activity->order_id         = $item->id;
    $activity->description      = $type;
    $activity->created_at       = \Carbon\Carbon::now();
    $activity->updated_at       = \Carbon\Carbon::now();
    $activity->save();

    \Flash::success($this['theme_lang']['updated_successfully']);
    return Redirect::to('dashboard/shipments/'.$item->id.'/view');
}
function onCheckpaystack()
{
    $data = post();

    $authUrl =  url('/').'dashboard/shipments/'.$this->param('id').'/view';

    $result = array();
    $url = 'https://api.paystack.co/transaction/verify/'.$data['reference'];
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt(
        $ch, CURLOPT_HTTPHEADER, [
        'Authorization: Bearer '.$this['settings']['payment']['paystack_secret']]
    );
    $request = curl_exec($ch);
    curl_close($ch);


    $item   =   \Spot\Shipment\Models\Order::find($this->param('id'));

    $employee_id    =   null;
    if($item->assigned_id != null){
        $employee_id    =   $item->assigned_id;
    }elseif($item->manifest_id != null){
        if($item->manifest->driver_id){
            $employee_id   =   $item->manifest->driver_id;
        }elseif($item->manifest->employee_id){
            $employee_id   =   $item->manifest->employee_id;
        }
    }


    $treasury            = \Spot\Shipment\Models\Treasury::where('office_id', $item->office_id)->first();
    if(!$treasury){
        $treasury            = \Spot\Shipment\Models\Treasury::where('default', 1)->first();
    }

    $sender_fees                =   $receiver_fees  =   0;
    $delivery_cost              =   $item->courier_fee;

    if($item->payment_type  ==  1){
        $receiver_fees          =   $delivery_cost;
    }else{
        $sender_fees            =   $delivery_cost;
    }

    if(isset($item->receiver_address_id) && $item->receiver_address_id   !=   '') {
        if(isset($item->return_defray) && $item->return_defray != '' && $item->return_defray != 2){
            $delivery_cost  +=   $item->return_courier_fee;
            if($item->return_package_fee  ==  2){
                $sender_fees        +=   $item->return_courier_fee;
            }else{
                $receiver_fees      +=   $item->return_courier_fee;
            }
        }

        if(isset($item->package_fee) && $item->package_fee != ''){
            $receiver_fees      +=   $item->package_fee;
        }
    }else{
        if($item->payment_type  ==  1   &&  $item->receiver_address_id  &&  $item->receiver_address_id   !=   ''){
            $receiver_fees          +=   $this['settings']['fees']['delivery_cost'];
        }else{
            $sender_fees            +=   $this['settings']['fees']['delivery_cost'];
        }
    }


        if(Auth::getUser()->id == $item->sender_id){
            $paystack_amount         =   round($this->currencyConverter($item->currency->currency_code,'GHS', $sender_fees));
        }elseif(Auth::getUser()->id == $item->receiver_id){
            $paystack_amount         =   round($this->currencyConverter($item->currency->currency_code,'GHS', $receiver_fees));
        }


    $amount = $paystack_amount*100;


    if ($request) {
        $result = json_decode($request, true);
        if($result){
            if($result['data']){
                if($result['data']['status'] == 'success'){

                    if(Auth::getUser()->id == $item->sender_id && $item->payment_type  ==  2){
                        if($amount == $result['data']['amount'])
                        {
                            $total                      = $item->courier_fee+$item->customs_value;
                            $total                      = $total+($item->tax*$item->courier_fee/100);
                            $total                      = $total+($item->insurance*$item->courier_fee/100);
                            if($item->return_package_fee == 1){
                                $total                  += $item->return_courier_fee;
                            }
                            if($item->return_defray == 1){
                                $total                  += $item->package_fee;
                            }
                            if($item->customs_value != 0){
                                $payment                    = new \Spot\Shipment\Models\Payment;
                                $payment->type              = 3;
                                $payment->payment_type      = 'customs';
                                $payment->item_id           = $item->id;
                                $payment->for_id            = $item->sender_id;
                                $payment->treasury_id       = $treasury->id;
                                $payment->movement          = 2;
                                $payment->amount            = $item->customs_value;
                                $payment->status            = 3;
                                $payment->payment_method    = 'online';
                                $payment->payment_gateway   = 'paystack';
                                $payment->date              = \Carbon\Carbon::now();
                                $payment->created_at        = \Carbon\Carbon::now();
                                $payment->updated_at        = \Carbon\Carbon::now();
                                $payment->save();
                            }
                            if($item->tax != 0){
                                $payment                    = new \Spot\Shipment\Models\Payment;
                                $payment->type              = 3;
                                $payment->payment_type      = 'tax';
                                $payment->item_id           = $item->id;
                                $payment->for_id            = $item->sender_id;
                                $payment->treasury_id       = $treasury->id;
                                $payment->status            = 3;
                                $payment->movement          = 2;
                                $payment->amount            = ($item->tax*$item->courier_fee/100);
                                $payment->payment_method    = 'online';
                                $payment->payment_gateway   = 'paystack';
                                $payment->date              = \Carbon\Carbon::now();
                                $payment->created_at        = \Carbon\Carbon::now();
                                $payment->updated_at        = \Carbon\Carbon::now();
                                $payment->save();
                            }
                            if($item->insurance != 0){
                                $payment                    = new \Spot\Shipment\Models\Payment;
                                $payment->type              = 3;
                                $payment->payment_type      = 'insurance';
                                $payment->item_id           = $item->id;
                                $payment->for_id            = $item->sender_id;
                                $payment->treasury_id       = $treasury->id;
                                $payment->movement          = 2;
                                $payment->status            = 3;
                                $payment->amount            = ($item->insurance*$item->courier_fee/100);
                                $payment->payment_method    = 'online';
                                $payment->payment_gateway   = 'paystack';
                                $payment->date              = \Carbon\Carbon::now();
                                $payment->created_at        = \Carbon\Carbon::now();
                                $payment->updated_at        = \Carbon\Carbon::now();
                                $payment->save();
                            }


                            $payment                    = new \Spot\Shipment\Models\Payment;
                            $payment->type              = 3;
                            $payment->item_id           = $item->id;
                            $payment->payment_type      = 'courier_fee';
                            $payment->for_id            = $item->sender_id;
                            $payment->treasury_id       = $treasury->id;
                            $payment->movement          = 2;
                            $payment->status            = 3;
                            $payment->amount            = $item->courier_fee;
                            $payment->payment_method    = 'online';
                            $payment->payment_gateway   = 'paystack';
                            $payment->date              = \Carbon\Carbon::now();
                            $payment->created_at        = \Carbon\Carbon::now();
                            $payment->updated_at        = \Carbon\Carbon::now();
                            $payment->save();

                            if($item->return_package_fee == 2 && $item->return_courier_fee){
                                $payment                    = new \Spot\Shipment\Models\Payment;
                                $payment->type              = 3;
                                $payment->item_id           = $item->id;
                                $payment->payment_type      = 'return_package_fee';
                                $payment->for_id            = $item->sender_id;
                                $payment->treasury_id       = $treasury->id;
                                $payment->movement          = 2;
                                $payment->status            = 3;
                                $payment->amount            = $item->return_courier_fee;
                                $payment->payment_method    = 'online';
                                $payment->payment_gateway   = 'paystack';
                                $payment->date              = \Carbon\Carbon::now();
                                $payment->created_at        = \Carbon\Carbon::now();
                                $payment->updated_at        = \Carbon\Carbon::now();
                                $payment->save();
                            }
                        }
                    }

                    if(Auth::getUser()->id == $item->receiver_id && $item->payment_type  ==  1){
                        if($amount == $result['data']['amount'])
                        {
                            if($item->customs_value != 0){
                                $payment                    = new \Spot\Shipment\Models\Payment;
                                $payment->type              = 3;
                                $payment->payment_type      = 'customs';
                                $payment->item_id           = $item->id;
                                $payment->for_id            = $item->receiver_id;
                                $payment->treasury_id       = $treasury->id;
                                $payment->movement          = 2;
                                $payment->amount            = $item->customs_value;
                                $payment->status            = 3;
                                $payment->payment_method    = 'online';
                                $payment->payment_gateway   = 'paystack';
                                $payment->date              = \Carbon\Carbon::now();
                                $payment->created_at        = \Carbon\Carbon::now();
                                $payment->updated_at        = \Carbon\Carbon::now();
                                $payment->save();
                            }
                            if($item->tax != 0){
                                $payment                    = new \Spot\Shipment\Models\Payment;
                                $payment->type              = 3;
                                $payment->payment_type      = 'tax';
                                $payment->item_id           = $item->id;
                                $payment->for_id            = $item->receiver_id;
                                $payment->treasury_id       = $treasury->id;
                                $payment->status            = 3;
                                $payment->movement          = 2;
                                $payment->amount            = ($item->tax*$item->courier_fee/100);
                                $payment->payment_method    = 'online';
                                $payment->payment_gateway   = 'paystack';
                                $payment->date              = \Carbon\Carbon::now();
                                $payment->created_at        = \Carbon\Carbon::now();
                                $payment->updated_at        = \Carbon\Carbon::now();
                                $payment->save();
                            }
                            if($item->insurance != 0){
                                $payment                    = new \Spot\Shipment\Models\Payment;
                                $payment->type              = 3;
                                $payment->payment_type      = 'insurance';
                                $payment->item_id           = $item->id;
                                $payment->for_id            = $item->receiver_id;
                                $payment->treasury_id       = $treasury->id;
                                $payment->movement          = 2;
                                $payment->status            = 3;
                                $payment->amount            = ($item->insurance*$item->courier_fee/100);
                                $payment->payment_method    = 'online';
                                $payment->payment_gateway   = 'paystack';
                                $payment->date              = \Carbon\Carbon::now();
                                $payment->created_at        = \Carbon\Carbon::now();
                                $payment->updated_at        = \Carbon\Carbon::now();
                                $payment->save();
                            }


                            $payment                    = new \Spot\Shipment\Models\Payment;
                            $payment->type              = 3;
                            $payment->item_id           = $item->id;
                            $payment->payment_type      = 'courier_fee';
                            $payment->for_id            = $item->receiver_id;
                            $payment->treasury_id       = $treasury->id;
                            $payment->movement          = 2;
                            $payment->status            = 3;
                            $payment->amount            = $item->courier_fee;
                            $payment->payment_method    = 'online';
                            $payment->payment_gateway   = 'paystack';
                            $payment->date              = \Carbon\Carbon::now();
                            $payment->created_at        = \Carbon\Carbon::now();
                            $payment->updated_at        = \Carbon\Carbon::now();
                            $payment->save();

                            if($item->return_courier_fee){
                                $payment                    = new \Spot\Shipment\Models\Payment;
                                $payment->type              = 3;
                                $payment->item_id           = $item->id;
                                $payment->payment_type      = 'return_package_fee';
                                $payment->for_id            = $item->receiver_id;
                                $payment->treasury_id       = $treasury->id;
                                $payment->movement          = 2;
                                $payment->status            = 3;
                                $payment->amount            = $item->return_courier_fee;
                                $payment->payment_method    = 'online';
                                $payment->payment_gateway   = 'paystack';
                                $payment->date              = \Carbon\Carbon::now();
                                $payment->created_at        = \Carbon\Carbon::now();
                                $payment->updated_at        = \Carbon\Carbon::now();
                                $payment->save();

                                if($item->return_package_fee == 1){
                                    $payment                    = new \Spot\Shipment\Models\Payment;
                                    $payment->type              = 3;
                                    $payment->item_id           = $item->id;
                                    $payment->payment_type      = 'return_package_fee';
                                    $payment->for_id            = $item->receiver_id;
                                    $payment->treasury_id       = $treasury->id;
                                    $payment->movement          = 2;
                                    $payment->status            = 3;
                                    $payment->amount            = $item->return_courier_fee;
                                    $payment->payment_method    = 'online';
                                    $payment->payment_gateway   = 'paystack';
                                    $payment->date              = \Carbon\Carbon::now();
                                    $payment->created_at        = \Carbon\Carbon::now();
                                    $payment->updated_at        = \Carbon\Carbon::now();
                                    $payment->save();
                                }
                            }
                        }
                    }



                    \Flash::success($this['theme_lang']['updated_successfully']);
                }else{
                    throw new ApplicationException('ERROR!');
                }
            }else{
                throw new ApplicationException('ERROR!');
            }
        }else{
            throw new ApplicationException('ERROR!');
        }
    }else{
        throw new ApplicationException('ERROR!');
    }
}
function onConfirmfees()
{
    $data = post();


    $item                       =   \Spot\Shipment\Models\Order::find($this->param('id'));
    $sender_fees                =   $receiver_fees  =   0;
    $delivery_cost              =   $item->courier_fee;

    if($item->payment_type  ==  1){
        $receiver_fees          =   $delivery_cost;
    }else{
        $sender_fees            =   $delivery_cost;
    }

    if(isset($data['receiver_address_id']) && $data['receiver_address_id']   !=   '') {
        $sender_address_id      =   \Spot\Shipment\Models\Address::find($item->sender_address_id);
        $receiver_address_id    =   \Spot\Shipment\Models\Address::find($data['receiver_address_id']);

        $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->county)->where('to',$receiver_address_id->county)->where('type',4)->first();
        if(!$fees){
            $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->city)->where('to',$receiver_address_id->city)->where('type',3)->first();
            if(!$fees){
                $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->state)->where('to',$receiver_address_id->state)->where('type',2)->first();
                if(!$fees){
                    $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->country)->where('to',$receiver_address_id->country)->where('type',1)->first();
                }
            }
        }

        if($fees){
            if($item->type   ==   1 && $item->receiver_address_id == null) {
                $delivery_cost  +=   $fees->delivery_cost;
            }
            if($fees->packaging == 1 && isset($item->packaging_id) && $item->packaging_id != ''){
                foreach($fees->packaging_fees as $package_fee   =>  $value){
                    if($package_fee ==  $item->packaging_id){
                        $delivery_cost  +=   $value;
                    }
                }
            }
        }else{
            if($item->type   ==   1 && $item->receiver_address_id == null) {
                $delivery_cost  +=   $this['settings']['fees']['delivery_cost'];
            }
        }
        if($item->payment_type  ==  1){
            $receiver_fees          =   $delivery_cost;
        }else{
            $sender_fees            =   $delivery_cost;
        }
        if(isset($data['return_defray']) && $data['return_defray'] != '' && $data['return_defray'] != 2){
            $delivery_cost  +=   htmlspecialchars($data['return_courier_fee']);
            if($data['return_package_fee']  ==  2){
                $sender_fees        +=   htmlspecialchars($data['return_courier_fee']);
            }else{
                $receiver_fees      +=   htmlspecialchars($data['return_courier_fee']);
            }
        }

        if(isset($data['package_fee']) && $data['package_fee'] != ''){
            $receiver_fees      +=   htmlspecialchars($data['package_fee']);
        }

    }

    return array("delivery_cost" => Currency::format($delivery_cost), "sender_fees" => Currency::format($sender_fees), "receiver_fees" => Currency::format($receiver_fees));
}
function onDiscards()
{
    $data = post();

    if(!Auth::getUser()->hasUserPermission(["order"],'u')) {
        return Response::json(['error' => $this['theme_lang']['not_allowed']], 401);
    }
    $item                       = \Spot\Shipment\Models\Order::find($this->param('id'));


    if($item->requested ==  4){

            if($item->assigned_id != null){
                $employee_id    =   $item->assigned_id;
            }else{
                if($item->manifest_id != null){
                    if($item->manifest->driver_id){
                        $employee_id   =   $item->manifest->driver_id;
                    }elseif($item->manifest->employee_id){
                        $employee_id   =   $item->manifest->employee_id;
                    }
                }
            }
            $payments   =   \Spot\Shipment\Models\Payment::where('item_id', $item->id)->where('payment_with',  $employee_id)->where('status', 1)->get();

            if(!$payments || empty($payments->toArray())){
                if($item->payment_type  ==  2){
                    if($item->return_defray == 1 && $item->return_package_fee == 1  ){
                        $payments   =   \Spot\Shipment\Models\Payment::where('item_id', $item->id)->where('payment_with', '!=', null)->whereIn('payment_type',['customs','tax','insurance','courier_fee','package_fee','return_package_fee'])->where('treasury_id', null)->get();
                    }else{
                        if($item->return_defray == 1){
                            $payments   =   \Spot\Shipment\Models\Payment::where('item_id', $item->id)->where('payment_with', '!=', null)->whereIn('payment_type',['customs','tax','insurance','courier_fee','package_fee'])->where('treasury_id', null)->get();
                        }else{
                            $payments   =   \Spot\Shipment\Models\Payment::where('item_id', $item->id)->where('payment_with', '!=', null)->whereIn('payment_type',['customs','tax','insurance','courier_fee'])->where('treasury_id', null)->get();
                        }
                    }
                }else{
                    if($item->return_defray == 1 && $item->return_package_fee == 1){
                        $payments   =   \Spot\Shipment\Models\Payment::where('item_id', $item->id)->where('payment_with', '!=', null)->whereIn('payment_type',['package_fee','return_package_fee'])->where('treasury_id', null)->get();
                    }else{
                        $payments   =   \Spot\Shipment\Models\Payment::where('item_id', $item->id)->where('payment_with', '!=', null)->whereIn('payment_type',['package_fee'])->where('treasury_id', null)->get();
                    }
                }
            }

            if(isset($payments) && $payments){
                foreach($payments as $old){
                    $old->status            = 5;
                    $old->updated_at        = \Carbon\Carbon::now();
                    $old->update();

                    $payment                    = new \Spot\Shipment\Models\Payment;
                    $payment->type              = 1;
                    $payment->payment_type      = $old->payment_type;
                    $payment->item_id           = $old->item_id;
                    $payment->payment_with      = $old->payment_with;
                    $payment->movement          = 7; //Deduction from the balance of packages
                    $payment->amount            = '-'.$old->amount;
                    $payment->status            = 5;
                    $payment->date              = \Carbon\Carbon::now();
                    $payment->created_at        = \Carbon\Carbon::now();
                    $payment->updated_at        = \Carbon\Carbon::now();
                    $payment->save();


                    $treasury            = \Spot\Shipment\Models\Treasury::where('office_id', $item->office_id)->first();
                    if(!$treasury){
                        $treasury            = \Spot\Shipment\Models\Treasury::where('default', 1)->first();
                    }


                    $payment                    = new \Spot\Shipment\Models\Payment;
                    $payment->type              = 3;
                    $payment->payment_type      = $old->payment_type;
                    $payment->item_id           = $old->item_id;
                    $payment->movement          = 2; //Deduction from the balance of packages


                    $amount                     = $old->amount;
                    if($item->return_defray == 1 && $item->return_package_fee == 2 && $old->payment_type == 'package_fee'){
                        $amount                 = ($old->amount-$item->return_courier_fee);
                    }
                    $payment->amount            = $amount;
                    $payment->status            = 5;
                    $payment->treasury_id       = $treasury->id;
                    $payment->date              = \Carbon\Carbon::now();
                    $payment->created_at        = \Carbon\Carbon::now();
                    $payment->updated_at        = \Carbon\Carbon::now();
                    $payment->save();

                    $treasury->balance          = $treasury->balance+$old->amount;
                    $treasury->updated_at       = \Carbon\Carbon::now();
                    $treasury->save();
                }


                $amount                     = $item->package_fee;
                if($item->return_defray == 1 && $item->return_package_fee == 2 && $old->payment_type == 'package_fee'){
                    $amount                 = ($item->package_fee-$item->return_courier_fee);

                    $oldpayment = \Spot\Shipment\Models\Payment::where('item_id',$item->id)->where('for_id',$item->sender_id)->where('movement',4)->where('type', 1)->where('amount', $item->package_fee)->first();
                }
                if(isset($oldpayment) && $oldpayment){
                    $oldpayment->amount         = $amount;
                    $oldpayment->updated_at     = \Carbon\Carbon::now();
                    $oldpayment->save();
                }

                if($item->return_defray == 1 && $item->return_package_fee == 2){
                    $payment                    = new \Spot\Shipment\Models\Payment;
                    $payment->type              = 3;
                    $payment->item_id           = $item->id;
                    $payment->payment_type      = 'return_package_fee';
                    $payment->treasury_id       = $treasury->id;
                    $payment->status            = 3;
                    $payment->movement          = 8; //Add  to the balance of packages
                    $payment->amount            = $item->return_courier_fee;
                    $payment->date              = \Carbon\Carbon::now();
                    $payment->created_at        = \Carbon\Carbon::now();
                    $payment->updated_at        = \Carbon\Carbon::now();
                    $payment->save();
                }
            }

            $status                     = \Spot\Shipment\Models\Status::where('equal', 10)->first();
            if($status){
                $item->status           = $status->id;
            }
            $item->assigned_id          = null;
            $item->manifest_id          = null;
            $item->requested            = 10;
            $item->updated_at           = \Carbon\Carbon::now();
            $item->update();


    }elseif($item->requested ==  11){

        if($item->assigned_id != null){
            $employee_id    =   $item->assigned_id;
        }else{
            if($item->manifest_id != null){
                if($item->manifest->driver_id){
                    $employee_id   =   $item->manifest->driver_id;
                }elseif($item->manifest->employee_id){
                    $employee_id   =   $item->manifest->employee_id;
                }
            }
        }

        $payments               = \Spot\Shipment\Models\Payment::where('item_id', $item->id)->where('payment_with', $employee_id)->where('payment_type','package_fee')->get();

        $amount                         =   $item->package_fee;
        if($item->return_defray == 1 && $item->return_package_fee == 2){
            $amount                 =   $amount-$item->return_courier_fee;
        }

        $payment                    = new \Spot\Shipment\Models\Payment;
        $payment->type              = 1;
        $payment->payment_type      = 'package_fee';
        $payment->item_id           = $item->id;
        $payment->payment_with      = $employee_id;
        $payment->movement          = 7; //Deduction from the balance of packages
        $payment->amount            = '-'.str_replace('-','',$amount);
        $payment->date              = \Carbon\Carbon::now();
        $payment->created_at        = \Carbon\Carbon::now();
        $payment->updated_at        = \Carbon\Carbon::now();
        $payment->save();

        $payment                    = new \Spot\Shipment\Models\Payment;
        $payment->type              = 1;
        $payment->payment_type      = 'package_fee';
        $payment->for_id            = $item->sender_id;
        $payment->payment_with      = $item->sender_id;
        $payment->item_id           = $item->id;
        $payment->movement          = 3;
        $payment->amount            = '-'.str_replace('-','',$amount);
        $payment->date              = \Carbon\Carbon::now();
        $payment->created_at        = \Carbon\Carbon::now();
        $payment->updated_at        = \Carbon\Carbon::now();
        $payment->save();



        $status                     = \Spot\Shipment\Models\Status::where('equal', 12)->first();
        if($status){
            $item->status           = $status->id;
        }
        $item->assigned_id          = null;
        $item->manifest_id          = null;
        $item->requested            = 12;
        $item->updated_at           = \Carbon\Carbon::now();
        $item->update();

    }else{

        $status                     = \Spot\Shipment\Models\Status::where('equal', 5)->first();

        $payments                   = \Spot\Shipment\Models\Payment::where('item_id', $item->id)->where(function($q){
                                                $q->where('status', 1)->orWhere('status', 4);
                                        })->get();
        foreach($payments as $payment){
            if(isset($data['payments']) && in_array($payment->id, $data['payments'])){
                $payment->status    = 3;
                if($item->assigned_id){
                    $payment->payment_with      = $item->assigned_id;
                }elseif($item->manifest_id){


                    if($item->manifest->driver_id){
                        $payment->payment_with   =   $item->manifest->driver_id;
                    }elseif($item->manifest->employee_id){
                        $payment->payment_with   =   $item->manifest->employee_id;
                    }
                }
            }else{
                if($payment->payment_type   ==  'package_fee'){
                    $payment->status    = 2;
                }else{
                    $payment->for_id    = $item->sender_id;
                    $payment->payment_with      = $item->sender_id;
                }
            }
            $payment->updated_at    = \Carbon\Carbon::now();
            $payment->update();
        }

        if($item->return_package_fee  ==  1){
            $return_courier_fee  =   $this['settings']['fees']['delivery_cost_back_receiver'];
        }else{
            $return_courier_fee  =   $this['settings']['fees']['delivery_cost_back_sender'];
        }

        if(isset($item->receiver_address_id) && $item->receiver_address_id   !=   '') {
            $sender_address_id      =   \Spot\Shipment\Models\Address::find($item->sender_address_id);
            $receiver_address_id    =   \Spot\Shipment\Models\Address::find($item->receiver_address_id);

            $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->county)->where('to',$receiver_address_id->county)->where('type',4)->first();
            if(!$fees){
                $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->city)->where('to',$receiver_address_id->city)->where('type',3)->first();
                if(!$fees){
                    $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->state)->where('to',$receiver_address_id->state)->where('type',2)->first();
                    if(!$fees){
                        $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->country)->where('to',$receiver_address_id->country)->where('type',1)->first();
                    }
                }
            }

            if($fees){

                if($data['return_package_fee']  ==  1){
                    $return_courier_fee  =   $fees->delivery_cost_back_receiver;
                }else{
                    $return_courier_fee  =   $fees->delivery_cost_back_sender;
                }
            }

        }

        if($status){
            $item->status           = $status->id;
        }
        $item->requested            = 5;
        $item->return_package_fee   = (($data['message'] != 2) ? $data['return_package_fee'] : 2);
        $item->return_courier_fee   = $return_courier_fee;
        $item->updated_at           = \Carbon\Carbon::now();
        $item->update();

        $return_payment             = \Spot\Shipment\Models\Payment::where('item_id', $item->id)->where('payment_type','return_package_fee')->first();
        if(!$return_payment){

            $payment                    = new \Spot\Shipment\Models\Payment;
            $payment->type              = 1;
            $payment->payment_type      = 'return_package_fee';
            $payment->item_id           = $item->id;
            if($data['message'] == 2){
                $payment->for_id            = $item->sender_id;
            }else{
                if($item->receiver_id){
                    if($data['return_package_fee']  ==  1){
                        $payment->for_id            = $item->receiver_id;
                        $payment->status            = 3;
                        if($item->assigned_id){
                            $payment->payment_with      = $item->assigned_id;
                        }elseif($item->manifest_id){
                            if($item->manifest->driver_id){
                                $payment->payment_with   =   $item->manifest->driver_id;
                            }elseif($item->manifest->employee_id){
                                $payment->payment_with   =   $item->manifest->employee_id;
                            }
                        }
                    }else{
                        $payment->for_id            = $item->sender_id;
                        $payment->payment_with      = $item->sender_id;
                    }
                }else{
                    $payment->for_id            = $item->sender_id;
                    $payment->payment_with      = $item->sender_id;
                }
            }
            $payment->movement          = 3; //Deduction from the wallet
            $payment->amount            = '-'.$item->return_courier_fee;
            $payment->date              = \Carbon\Carbon::parse($item->ship_date);
            $payment->created_at        = \Carbon\Carbon::now();
            $payment->updated_at        = \Carbon\Carbon::now();
            $payment->save();
        }

        $event_data =   array(
            'sender'                =>  Auth::getUser(),
            'shipping_sender'       =>  $item->sender_id,
            'shipping_receiver'     =>  (($item->receiver_id) ? $item->receiver_id : null),
            'shipping_responsible'  =>  $item->assigned_id,
            'item'                  =>  $item,
            'type'                  =>  'discards_request',
            'thumb'                 =>  'icon',
            'icon'                  =>  'flaticon-gift',
            'subject'               =>  $this['theme_lang']['discards_request'],
            'message'               =>  $this['theme_lang']['discards_request'],
            'url'                   =>  url('dashboard/shipments/'.$item->id.'/view'),
            'badge'                 =>  'success',
        );
        \Event::fire('spot.event', [$this['pusher'],$this['settings'],$event_data]);

        $activity                   = new \Spot\Shipment\Models\Activity;
        $activity->user_id          = Auth::getUser()->id;
        $activity->order_id         = $item->id;
        $activity->description      = 'discards_request';
        if(isset($data['message']) && $data['message'] != ''){
            switch($data['message']){
                case 1:
                    $activity->other            = $this['theme_lang']['receiver_request'];
                break;
                case 2:
                    $activity->other            = $this['theme_lang']['receiver_evade'];
                break;
                case 3:
                    $activity->other            = $this['theme_lang']['sender_request'];
                break;
                default:
                    $activity->other            = htmlspecialchars($data['message']);
            }
        }
        $activity->created_at       = \Carbon\Carbon::now();
        $activity->updated_at       = \Carbon\Carbon::now();
        $activity->save();

    }

    \Flash::success($this['theme_lang']['updated_successfully']);
    return Redirect::to('dashboard/shipments/'.$item->id.'/view');
}
function onDelivery()
{
    $data = post();

    if(!Auth::getUser()->hasUserPermission(["order"],'u')) {
        return Response::json(['error' => $this['theme_lang']['not_allowed']], 401);
    }
    $item                       = \Spot\Shipment\Models\Order::find($this->param('id'));


    if($item->assigned_id){
        $shipping_responsible       =   $item->assigned_id;
    }elseif($item->manifest_id){
        if($item->manifest->driver_id){
            $shipping_responsible  =   $item->manifest->driver_id;
        }elseif($item->manifest->employee_id){
            $shipping_responsible  =   $item->manifest->employee_id;
        }
    }

    $payments                   = \Spot\Shipment\Models\Payment::where('item_id', $item->id)->where(function($q){
                                            $q->where('status', 1)->orWhere('status', 4);
                                    })->get();

    if($item->requested ==  5 or $item->requested ==  6){
        $item->requested        = 8;
        $status                 = \Spot\Shipment\Models\Status::where('equal', 8)->first();
        $type                   = 'returned';
        if($status){
            $item->status           = $status->id;
        }
        $item->updated_at       = \Carbon\Carbon::now();
        $item->update();

        foreach($payments as $payment){
            if($payment->for_id    ==   $item->sender_id){
                $payment->status    = 3;
                if($item->assigned_id){
                    $payment->payment_with      = $item->assigned_id;
                }elseif($item->manifest_id){
                    if($item->manifest->driver_id){
                        $payment->payment_with   =   $item->manifest->driver_id;
                    }elseif($item->manifest->employee_id){
                        $payment->payment_with   =   $item->manifest->employee_id;
                    }
                }
                $payment->updated_at    = \Carbon\Carbon::now();
                $payment->update();
            }
        }
    }else{
        $item->requested        = 4;
        $item->postponed        = null;
        $status                 = \Spot\Shipment\Models\Status::where('equal', 4)->first();
        $type                   = 'delivered';
        if($status){
            $item->status           = $status->id;
        }


        $employeeorder          = \Spot\Shipment\Models\Employeeorder::where('order_id', $item->id)->first();
        $employee_id            = $employeeorder->employee_id;
        $employeeorder->delete();

        if($item->payment_type  ==  2){

            $total                      = $item->courier_fee+$item->customs_value;
            $total                      = $total+($item->tax*$item->courier_fee/100);
            $total                      = $total+($item->insurance*$item->courier_fee/100);
            if($item->return_package_fee == 1){
                $total                  += $item->return_courier_fee;
            }
            if($item->return_defray == 1){
                $total                  += $item->package_fee;
            }
            if($item->customs_value != 0){
                $payment                    = new \Spot\Shipment\Models\Payment;
                $payment->type              = 1;
                $payment->payment_type      = 'customs';
                $payment->item_id           = $item->id;
                $payment->for_id            = $item->sender_id;
                $payment->payment_with      = $employee_id;
                $payment->movement          = 8; //Add  to the balance of packages
                $payment->amount            = $item->customs_value;
                $payment->date              = \Carbon\Carbon::now();
                $payment->created_at        = \Carbon\Carbon::now();
                $payment->updated_at        = \Carbon\Carbon::now();
                $payment->save();
            }
            if($item->tax != 0){
                $payment                    = new \Spot\Shipment\Models\Payment;
                $payment->type              = 1;
                $payment->payment_type      = 'tax';
                $payment->item_id           = $item->id;
                $payment->for_id            = $item->sender_id;
                $payment->payment_with      = $employee_id;
                $payment->movement          = 8; //Add  to the balance of packages
                $payment->amount            = ($item->tax*$item->courier_fee/100);
                $payment->date              = \Carbon\Carbon::now();
                $payment->created_at        = \Carbon\Carbon::now();
                $payment->updated_at        = \Carbon\Carbon::now();
                $payment->save();
            }
            if($item->insurance != 0){
                $payment                    = new \Spot\Shipment\Models\Payment;
                $payment->type              = 1;
                $payment->payment_type      = 'insurance';
                $payment->item_id           = $item->id;
                $payment->for_id            = $item->sender_id;
                $payment->payment_with      = $employee_id;
                $payment->movement          = 8; //Add  to the balance of packages
                $payment->amount            = '-'.($item->insurance*$item->courier_fee/100);
                $payment->date              = \Carbon\Carbon::now();
                $payment->created_at        = \Carbon\Carbon::now();
                $payment->updated_at        = \Carbon\Carbon::now();
                $payment->save();
            }


            $payment                    = new \Spot\Shipment\Models\Payment;
            $payment->type              = 1;
            $payment->item_id           = $item->id;
            $payment->payment_type      = 'courier_fee';
            $payment->for_id            = $item->sender_id;
            $payment->payment_with      = $employee_id;
            $payment->movement          = 8; //Add  to the balance of packages
            $payment->amount            = $item->courier_fee;
            $payment->date              = \Carbon\Carbon::now();
            $payment->created_at        = \Carbon\Carbon::now();
            $payment->updated_at        = \Carbon\Carbon::now();
            $payment->save();


            if($item->return_defray == 1){
                $payment                    = new \Spot\Shipment\Models\Payment;
                $payment->type              = 1;
                $payment->item_id           = $item->id;
                $payment->payment_type      = 'package_fee';
                $payment->for_id            = $item->sender_id;
                $payment->payment_with      = $employee_id;
                $payment->movement          = 8; //Add  to the balance of packages
                $payment->amount            = $item->package_fee;
                $payment->date              = \Carbon\Carbon::now();
                $payment->created_at        = \Carbon\Carbon::now();
                $payment->updated_at        = \Carbon\Carbon::now();
                $payment->save();

                if($item->return_package_fee == 1){
                    $payment                    = new \Spot\Shipment\Models\Payment;
                    $payment->type              = 1;
                    $payment->item_id           = $item->id;
                    $payment->payment_type      = 'return_package_fee';
                    $payment->for_id            = $item->sender_id;
                    $payment->payment_with      = $employee_id;
                    $payment->movement          = 8; //Add  to the balance of packages
                    $payment->amount            = $item->return_courier_fee;
                    $payment->date              = \Carbon\Carbon::now();
                    $payment->created_at        = \Carbon\Carbon::now();
                    $payment->updated_at        = \Carbon\Carbon::now();
                    $payment->save();
                }
            }

        }else{

            if($item->return_defray == 1){
                $payment                    = new \Spot\Shipment\Models\Payment;
                $payment->type              = 1;
                $payment->item_id           = $item->id;
                $payment->payment_type      = 'package_fee';
                $payment->for_id            = $item->sender_id;
                $payment->payment_with      = $employee_id;
                $payment->movement          = 8; //Add  to the balance of packages
                $payment->amount            = $item->package_fee;
                $payment->date              = \Carbon\Carbon::now();
                $payment->created_at        = \Carbon\Carbon::now();
                $payment->updated_at        = \Carbon\Carbon::now();
                $payment->save();

                $payment                    = new \Spot\Shipment\Models\Payment;
                $payment->type              = 1;
                $payment->item_id           = $item->id;
                $payment->payment_type      = 'package_fee';
                $payment->for_id            = $item->sender_id;
                $payment->movement          = 4;
                $payment->amount            = $item->package_fee;
                $payment->date              = \Carbon\Carbon::now();
                $payment->created_at        = \Carbon\Carbon::now();
                $payment->updated_at        = \Carbon\Carbon::now();
                $payment->save();

                if($item->return_package_fee == 1){
                    $payment                    = new \Spot\Shipment\Models\Payment;
                    $payment->type              = 1;
                    $payment->item_id           = $item->id;
                    $payment->payment_type      = 'return_package_fee';
                    $payment->for_id            = $item->sender_id;
                    $payment->payment_with      = $employee_id;
                    $payment->movement          = 8; //Add  to the balance of packages
                    $payment->amount            = $item->return_courier_fee;
                    $payment->date              = \Carbon\Carbon::now();
                    $payment->created_at        = \Carbon\Carbon::now();
                    $payment->updated_at        = \Carbon\Carbon::now();
                    $payment->save();
                }
            }
        }

        $item->updated_at       = \Carbon\Carbon::now();
        $item->update();
    }

    $event_data =   array(
        'sender'                =>  Auth::getUser(),
        'shipping_sender'       =>  $item->sender_id,
        'shipping_receiver'     =>  (($item->receiver_id) ? $item->receiver_id : null),
        'shipping_responsible'  =>  $shipping_responsible,
        'item'                  =>  $item,
        'type'                  =>  $type,
        'thumb'                 =>  'icon',
        'icon'                  =>  'flaticon-gift',
        'subject'               =>  $this['theme_lang'][$type],
        'message'               =>  $this['theme_lang'][$type],
        'url'                   =>  url('dashboard/shipments/'.$item->id.'/view'),
        'badge'                 =>  'success',
    );
    \Event::fire('spot.event', [$this['pusher'],$this['settings'],$event_data]);

    $activity                   = new \Spot\Shipment\Models\Activity;
    $activity->user_id          = Auth::getUser()->id;
    $activity->order_id         = $item->id;
    $activity->description      = $type;
    $activity->created_at       = \Carbon\Carbon::now();
    $activity->updated_at       = \Carbon\Carbon::now();
    $activity->save();

    \Flash::success($this['theme_lang']['updated_successfully']);
    return Redirect::to('dashboard/shipments/'.$item->id.'/view');
}
function onGetclients()
{
    $data = post();
    $item = '';
    $array = array();
    if(isset($data['term']) && $data['term'] != ''){
        $item = $data['term'];
        $order  =   \Spot\Shipment\Models\Order::find($this->param('id'));

        $items = \RainLab\User\Models\User::where('role_id', 5)
                    ->where('id', '!=', $order->sender_id)
                    ->where(function($q) use($item){
                        $q->where('id', 'like', "%$item%");
                        $q->orWhere('name', 'like', "%$item%");
                        $q->orWhere('username', 'like', "%$item%");
                        $q->orWhere('email', 'like', "%$item%");
                        $q->orWhere('phone', 'like', "%$item%");
                        $q->orWhere('mobile', 'like', "%$item%");
                    })
                    ->get();

        $array = array();
        foreach($items as $item){
            $array[] = array("id"=>$item->id, "text"=>$item->name, "mobile"=>$item->mobile);
        }
    }
    if(Auth::getUser()->hasUserPermission(["client"],'c')) {
        $array[] = array("id"=>'new', "text"=>'<i class="flaticon2-add"></i>&nbsp;'.$this['theme_lang']['add_new']);
    }
    return $array;
}
function onNewclient(){
    $data = post();
    if(isset($data['connect'])){
        \RainLab\User\Models\User::extend(function($model){
            $myrules['email'] = 'required|between:6,255|email|unique:users';
            $myrules['mobile'] = 'required|unique:users';
            $myrules['username'] = 'required|between:2,255|unique:users';
            $myrules['password'] = 'required';
            $model->rules = $myrules;
            $model->customMessages['mobile.unique'] = $this['theme_lang']['mobile_already_registered'];
            $model->customMessages['email.unique'] = $this['theme_lang']['email_already_registered'];
            $model->customMessages['username.unique'] = $this['theme_lang']['username_already_registered'];
        });
    }else{
        \RainLab\User\Models\User::extend(function($model){
            $myrules['mobile'] = 'required|unique:users';
            $myrules['password'] = 'required';
            $model->rules = $myrules;
            $model->customMessages['mobile.mobile'] = $this['theme_lang']['mobile_already_registered'];
        });
    }

    $item                   = new \RainLab\User\Models\User;
    $item->name             = htmlspecialchars($data['name']);
    if(isset($data['connect'])){
        $item->username         = htmlspecialchars($data['username']);
        $item->email            = htmlspecialchars($data['email']);
        if(isset($data['password']) && $data['password'] != null && !empty($data['password']) && $data['password'] != ''){
            $password                       = \Hash::make($data['password']);
            $item->password                 = $password;
            $item->password_confirmation    = $password;
        }
    }else{
        $password                       = \Hash::make(123);
        $item->password                 = $password;
        $item->password_confirmation    = $password;
    }
    $item->mobile           = htmlspecialchars($data['mobile']);
    $item->gender           = (isset($data['gender']) ? $data['gender'] : null);
    $item->role_id          = 5;
    $item->created_at       = \Carbon\Carbon::now();
    $item->updated_at       = \Carbon\Carbon::now();
    $item->save();

    $subitem                    = new \Spot\Shipment\Models\Address;
    $subitem->user_id           = $item->id;
    $subitem->name              = htmlspecialchars($data['street_addr']);
    $subitem->street            = htmlspecialchars($data['street_addr']);
    $subitem->lat               = htmlspecialchars($data['lat']);
    $subitem->lng               = htmlspecialchars($data['lng']);
    $subitem->url               = htmlspecialchars($data['url']);
    $subitem->county            = htmlspecialchars($data['area_id']);
    $subitem->city              = htmlspecialchars($data['city_id']);
    $subitem->zipcode           = htmlspecialchars($data['postal_code']);
    $subitem->state             = htmlspecialchars($data['state_id']);
    $subitem->country           = htmlspecialchars($data['country_id']);
    $subitem->default           = 1;
    $subitem->created_at        = \Carbon\Carbon::now();
    $subitem->updated_at        = \Carbon\Carbon::now();
    $subitem->save();

    if(isset($data['connect'])){
        $event_data =   array(
            'persons'   =>  [$item->id],
            'sender'    =>  Auth::getUser(),
            'item'      =>  $item,
            'type'      =>  'new_account',
            'thumb'     =>  'icon',
            'icon'      =>  'flaticon-gift',
            'subject'   =>  $this['theme_lang']['new_account'],
            'message'   =>  $this['theme_lang']['new_account'],
            'url'       =>  url('dashboard/shipments/'.$item->id.'/view'),
            'badge'     =>  'success',
        );
        \Event::fire('spot.event', [$this['pusher'],$this['settings'],$event_data]);
    }
    return array("id"=>$item->id, "name"=>$item->name, 'address_id' => $subitem->id, 'address_name' => $subitem->name);
}
function onNewclientaddress(){
    $data = post();

    \Spot\Shipment\Models\Address::where('user_id', $data['client_id'])->update(['default' => 0]);

    $subitem                    = new \Spot\Shipment\Models\Address;
    $subitem->user_id           = htmlspecialchars($data['client_id']);
    $subitem->name              = htmlspecialchars($data['street_addr']);
    $subitem->street            = htmlspecialchars($data['street_addr']);
    $subitem->lat               = htmlspecialchars($data['lat']);
    $subitem->lng               = htmlspecialchars($data['lng']);
    $subitem->url               = htmlspecialchars($data['url']);
    $subitem->county            = htmlspecialchars($data['area_id']);
    $subitem->city              = htmlspecialchars($data['city_id']);
    $subitem->zipcode           = htmlspecialchars($data['postal_code']);
    $subitem->state             = htmlspecialchars($data['state_id']);
    $subitem->country           = htmlspecialchars($data['country_id']);
    $subitem->default           = 1;
    $subitem->created_at        = \Carbon\Carbon::now();
    $subitem->updated_at        = \Carbon\Carbon::now();
    $subitem->save();

    $addresses = \Spot\Shipment\Models\Address::where('user_id', $data['client_id'])->get();
    $html = '<option data-hidden="true"></option>';
    $default = 'new';
    if($addresses){
        foreach($addresses as $address){
            if($address->default == 1){
                $default = $address->id;
            }
            $html .= '<option value="'.$address->id.'">'.$address->name.'</option>';
        }
    }
    if(Auth::getUser()->hasUserPermission(["client"],'c')) {
        $html .= '<option value="new" data-icon="flaticon2-add">'.$this['theme_lang']['add_new'].'</option>';
    }
    return array("html" => $html, "default" => $default);
}
function onClientaddresses(){
    $data = post();

    $addresses = \Spot\Shipment\Models\Address::where('user_id', $data['id'])->get();
    $html = '<option data-hidden="true"></option>';
    $default = 'new';
    if($addresses){
        foreach($addresses as $address){
            if($address->default == 1){
                $default = $address->id;
            }
            $html .= '<option value="'.$address->id.'">'.$address->name.'</option>';
        }
    }
    if(Auth::getUser()->hasUserPermission(["client"],'c')) {
        $html .= '<option value="new" data-icon="flaticon2-add">'.$this['theme_lang']['add_new'].'</option>';
    }
    return array("html" => $html, "default" => $default);
}
function onListstates(){
    $data = post();

    $items = \RainLab\Location\Models\State::where('country_id', $data['id'])->get();
    $html = '<option data-hidden="true"></option>';
    if($items){
        foreach($items as $item){
            $html .= '<option value="'.$item->id.'">'.$item->name.'</option>';
        }
    }
    return array("html" => $html);
}
function onListcities(){
    $data = post();

    $items = \Spot\Shipment\Models\City::where('state_id', $data['id'])->get();
    $html = '<option data-hidden="true"></option>';
    if($items){
        foreach($items as $item){
            $html .= '<option value="'.$item->id.'">'.$item->name.'</option>';
        }
    }
    return array("html" => $html);
}
function onListareas(){
    $data = post();

    $items = \Spot\Shipment\Models\Area::where('city_id', $data['id'])->get();
    $html = '<option data-hidden="true"></option>';
    if($items){
        foreach($items as $item){
            $html .= '<option value="'.$item->id.'">'.$item->name.'</option>';
        }
    }
    return array("html" => $html);
}
function onChangefees(){
    $data = post();

    $item                       = \Spot\Shipment\Models\Order::find($this->param('id'));
    if($item->type   ==   1) {
        $delivery_cost  =   $this['settings']['fees']['pickup_cost'];
    }else{
        $delivery_cost  =   $this['settings']['fees']['delivery_cost'];
    }
    if($data['return_package_fee']  ==  1){
        $return_courier_fee  =   $this['settings']['fees']['delivery_cost_back_receiver'];
    }else{
        $return_courier_fee  =   $this['settings']['fees']['delivery_cost_back_sender'];
    }

    if(isset($data['receiver_address_id']) && $data['receiver_address_id']   !=   '') {
        $sender_address_id      =   \Spot\Shipment\Models\Address::find($item->sender_address_id);
        $receiver_address_id    =   \Spot\Shipment\Models\Address::find($data['receiver_address_id']);

        $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->county)->where('to',$receiver_address_id->county)->where('type',4)->first();
        if(!$fees){
            $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->city)->where('to',$receiver_address_id->city)->where('type',3)->first();
            if(!$fees){
                $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->state)->where('to',$receiver_address_id->state)->where('type',2)->first();
                if(!$fees){
                    $fees   =   \Spot\Shipment\Models\Fees::where('from',$sender_address_id->country)->where('to',$receiver_address_id->country)->where('type',1)->first();
                }
            }
        }

        if($fees){
            if($item->type   ==   1) {
                $delivery_cost  =   $fees->pickup_cost;
            }else{
                $delivery_cost  =   $fees->delivery_cost;
            }
            if($fees->packaging == 1 && isset($item->packaging_id) && $item->packaging_id != ''){
                foreach($fees->packaging_fees as $package_fee   =>  $value){
                    if($package_fee ==  $item->packaging_id){
                        $delivery_cost  +=   $value;
                    }
                }
            }
            if(isset($data['return_defray']) && $data['return_defray'] != ''){
                if($data['return_package_fee']  ==  1){
                    $return_courier_fee  =   $fees->delivery_cost_back_receiver;
                }else{
                    $return_courier_fee  =   $fees->delivery_cost_back_sender;
                }
            }
        }

    }

    return array("delivery_cost" => $delivery_cost,"return_courier_fee" => $return_courier_fee);
}
function onNote()
{
    $data = post();

    $note                               = new \Spot\Shipment\Models\Notes;
    $note->user_id                      = Auth::getUser()->id;
    $note->item_id                      = $this->param('id');
    $note->item_type                    = 1;
    $note->content                      = $data['note'];
    $note->created_at                   = \Carbon\Carbon::now();
    $note->updated_at                   = \Carbon\Carbon::now();
    $note->save();


    $item                               = \Spot\Shipment\Models\Order::find($this->param('id'));

    $event_data =   array(
        'sender'                =>  Auth::getUser(),
        'shipping_sender'       =>  $item->sender_id,
        'shipping_receiver'     =>  (($item->receiver_id) ? $item->receiver_id : null),
        'shipping_responsible'  =>  $item->assigned_id,
        'item'                  =>  $item,
        'type'                  =>  'new_note',
        'thumb'                 =>  'icon',
        'icon'                  =>  'flaticon-gift',
        'subject'               =>  $this['theme_lang']['new_note'],
        'message'               =>  $this['theme_lang']['new_note'],
        'url'                   =>  url('dashboard/shipments/'.$item->id.'/view'),
        'badge'                 =>  'success',
    );
    \Event::fire('spot.event', [$this['pusher'],$this['settings'],$event_data]);

    $activity                   = new \Spot\Shipment\Models\Activity;
    $activity->user_id          = Auth::getUser()->id;
    $activity->order_id         = $item->id;
    $activity->description      = 'new_note';
    $activity->other            = $data['note'];
    $activity->created_at       = \Carbon\Carbon::now();
    $activity->updated_at       = \Carbon\Carbon::now();
    $activity->save();

    return array('type' => 'success', 'message' => $this['theme_lang']['created_successfully'], '#notes' => $this->renderPartial('notes',['item'=> $item]));
}
?>
==

<div class="kt-portlet ">
    <div class="kt-portlet__body">
        <div class="kt-widget kt-widget--user-profile-3">
            <div class="kt-widget__top">
                <div class="kt-widget__content">
                    <div class="kt-widget__head">
                        <a href="javascript:;" class="kt-widget__username">
                            {{settings.tracking.prefix_order}}{{order.number}}
                        </a>
                        <div class="kt-widget__action">
                			<a href="javascript:;" class="btn btn-label-brand btn-bold btn-sm dropdown-toggle" data-toggle="dropdown">
                				{{'Order Actions'|__}}
                			</a>
                			<div class="dropdown-menu dropdown-menu-right dropdown-menu-fit dropdown-menu-md">
                                <!--begin::Nav-->
                                <ul class="kt-nav">
                                    {% if order.requested != 4 and order.requested != 8 %}
                                        {% if order.requested == 0 or order.requested == 1 or data.requested == 100 %}
                                            {% if order.requested == 1 and user.role_id == 5 %}
                                            {% else %}
                                                {% if user.hasUserPermission('order', 'u') %}
                                                    <li class="kt-nav__item">
                                                        <a href="{{'dashboard/order-edit'|page({ id: order.id })}}" class="kt-nav__link">
                                                            <i class="kt-nav__link-icon flaticon-edit-1"></i>
                                                            <span class="kt-nav__link-text">{{'Edit'|__}}</span>
                                                        </a>
                                                    </li>
                                                {% endif %}
                                                {% if user.hasUserPermission('order', 'd') %}
                                                    <li class="kt-nav__item">
                                                        <a href="javascript:;" id="delete" class="kt-nav__link">
                                                            <i class="kt-nav__link-icon flaticon-cancel"></i>
                                                            <span class="kt-nav__link-text">{{'Delete'|__}}</span>
                                                        </a>
                                                    </li>
                                                {% endif %}
                                            {% endif %}
                                        {% endif %}


                                        {% if user.role_id != 5 %}
                                            {% if order.requested == 0 %}
                                                <li class="kt-nav__item">
                                                    <a href="javascript:;" id="accept" class="kt-nav__link">
                                                        <i class="kt-nav__link-icon flaticon2-check-mark"></i>
                                                        <span class="kt-nav__link-text">{{'Accept'|__}}</span>
                                                    </a>
                                                </li>
                                                <li class="kt-nav__item">
                                                    <a href="javascript:;" data-toggle="modal" data-target="#refuse" class="kt-nav__link">
                                                        <i class="kt-nav__link-icon flaticon-signs-2"></i>
                                                        <span class="kt-nav__link-text">{{'Refuse'|__}}</span>
                                                    </a>
                                                </li>
                                            {% elseif order.requested != 2 %}
                                                {% if order.requested == 1 or order.requested == 5 or order.requested == 7 or order.requested == 10 %}
                                                    {% if order.manifest_id is empty %}
                                                        {% if order.assigned_id %}
                                                            <li class="kt-nav__item">
                                                                <a href="javascript:;" data-toggle="modal" data-target="#assign_employee" class="kt-nav__link">
                                                                    <i class="kt-nav__link-icon flaticon-users"></i>
                                                                    <span class="kt-nav__link-text">{{'Change Assigned Employee'|__}}</span>
                                                                </a>
                                                            </li>
                                                        {% else %}
                                                            <li class="kt-nav__item">
                                                                <a href="javascript:;" data-toggle="modal" data-target="#assign_employee" class="kt-nav__link">
                                                                    <i class="kt-nav__link-icon flaticon-users"></i>
                                                                    <span class="kt-nav__link-text">{{'Assign Employee'|__}}</span>
                                                                </a>
                                                            </li>
                                                        {% endif %}
                                                    {% endif %}
                                                    {% if order.assigned_id is empty %}
                                                        {% if user.hasUserPermission('manifest', 'c') %}
                                                            {% if order.manifest_id is empty %}
                                                                <li class="kt-nav__item">
                                                                    <a href="javascript:;" data-toggle="modal" data-target="#assign_manifest" class="kt-nav__link">
                                                                        <i class="kt-nav__link-icon flaticon-truck"></i>
                                                                        <span class="kt-nav__link-text">{{'Assign Manifest'|__}}</span>
                                                                    </a>
                                                                </li>
                                                            {% else %}
                                                                {% if order.manifest.status == 1 %}
                                                                    <li class="kt-nav__item">
                                                                        <a href="javascript:;" data-toggle="modal" data-target="#assign_manifest" class="kt-nav__link">
                                                                            <i class="kt-nav__link-icon flaticon-truck"></i>
                                                                            <span class="kt-nav__link-text">{{'Change Manifest'|__}}</span>
                                                                        </a>
                                                                    </li>
                                                                {% endif %}
                                                            {% endif %}
                                                        {% endif %}
                                                    {% endif %}
                                                    {% if order.assigned_id is not empty or order.manifest_id is not empty %}
                                                        <li class="kt-nav__item">
                                                            {% if order.type == 1 %}
                                                                <a href="javascript:;" data-toggle="modal" data-target="#received" class="kt-nav__link">
                                                                    <i class="kt-nav__link-icon flaticon2-check-mark"></i>
                                                                    <span class="kt-nav__link-text">{{'Received'|__}}</span>
                                                                </a>
                                                            {% else %}
                                                                <a href="javascript:;" id="delivered_driver" class="kt-nav__link">
                                                                    <i class="kt-nav__link-icon flaticon2-check-mark"></i>
                                                                    <span class="kt-nav__link-text">{{'Delivered to driver'|__}}</span>
                                                                </a>
                                                            {% endif %}
                                                        </li>
                                                    {% endif %}
                                                    {% if order.requested != 10 %}
                                                        <li class="kt-nav__item">
                                                            <a href="javascript:;" data-toggle="modal" data-target="#transfer_office" class="kt-nav__link">
                                                                <i class="kt-nav__link-icon flaticon-logout"></i>
                                                                <span class="kt-nav__link-text">{{'Transfer To Branch'|__}}</span>
                                                            </a>
                                                        </li>
                                                    {% endif %}
                                                {% endif %}
                                                {% if order.requested != 7 and order.requested != 10 and order.requested != 11  and order.requested != 12 %}
                                                    <li class="kt-nav__item">
                                                        <a href="javascript:;" id="stock" class="kt-nav__link">
                                                            <i class="kt-nav__link-icon flaticon-user-ok"></i>
                                                            <span class="kt-nav__link-text">{{'Save in stock'|__}}</span>
                                                        </a>
                                                    </li>
                                                {% endif %}
                                                {% if order.requested != 7 and order.requested != 9 and order.requested != 10 and order.requested != 11 and order.requested != 12 %}
                                                    <li class="kt-nav__item">
                                                        <a href="javascript:;" data-toggle="modal" data-target="#postpone" class="kt-nav__link">
                                                            <i class="kt-nav__link-icon flaticon-refresh"></i>
                                                            <span class="kt-nav__link-text">{{'Postpone'|__}}</span>
                                                        </a>
                                                    </li>
                                                {% endif %}
                                                {% if order.requested == 3 or order.requested == 9 %}
                                                    <li class="kt-nav__item">
                                                        <a href="javascript:;" data-toggle="modal" data-target="#discards" class="kt-nav__link">
                                                            <i class="kt-nav__link-icon flaticon-refresh"></i>
                                                            <span class="kt-nav__link-text">{{'Transfer as discards'|__}}</span>
                                                        </a>
                                                    </li>
                                                {% endif %}
                                                {% if order.requested == 3 or order.requested == 5 or order.requested == 6 or order.requested == 7 or order.requested == 9 %}
                                                    <li class="kt-nav__item">
                                                        <a href="{{'dashboard/order-deliver'|page({id:this.param.id})}}" id="deliveried_bak" class="kt-nav__link">
                                                            <i class="kt-nav__link-icon flaticon-user-ok"></i>
                                                            <span class="kt-nav__link-text">{{'Delieveried'|__}}</span>
                                                        </a>
                                                    </li>
                                                {% endif %}
                                            {% endif %}
                                        {% endif %}
                                    {% endif %}


                                    {% if user.role_id != 5 %}
                                        {% if order.return_defray == 1 and order.requested == 4 %}
                                            <li class="kt-nav__item">
                                                <a href="javascript:;" id="return_discards" class="kt-nav__link">
                                                    <i class="kt-nav__link-icon flaticon-refresh"></i>
                                                    <span class="kt-nav__link-text">{{'Return discards'|__}}</span>
                                                </a>
                                            </li>
                                        {% endif %}
                                        {% if order.requested == 11 %}
                                            <li class="kt-nav__item">
                                                <a href="javascript:;" id="return_discards" class="kt-nav__link">
                                                    <i class="kt-nav__link-icon flaticon2-check-mark"></i>
                                                    <span class="kt-nav__link-text">{{'Deliver returned discards'|__}}</span>
                                                </a>
                                            </li>
                                        {% endif %}
                                        {% if order.type == 2 and order.requested != 0 %}
                                            <li class="kt-nav__item">
                                                <a href="{{'dashboard/order-print'|page({ id: order.id, type: 'shipment' })}}" target="_blank" class="kt-nav__link">
                                                    <i class="kt-nav__link-icon flaticon2-print"></i>
                                                    <span class="kt-nav__link-text">{{'Print Shipment'|__}}</span>
                                                </a>
                                            </li>
                                        {% endif %}
                                        {% if order.requested != 0 and order.requested != 10  and order.requested != 11 and order.requested != 12 %}
                                            <li class="kt-nav__item">
                                                <a href="{{'dashboard/order-print'|page({ id: order.id, type: 'label' })}}" target="_blank" class="kt-nav__link">
                                                    <i class="kt-nav__link-icon flaticon2-print"></i>
                                                    <span class="kt-nav__link-text">{{'Print Label'|__}}</span>
                                                </a>
                                            </li>
                                        {% endif %}
                                    {% endif %}
                                </ul>
                                <!--end::Nav-->
                            </div>
                        </div>
                    </div>

                    <div class="kt-widget__subhead">
                        {{ barcodeHTML({data: order.barcode, type: 'CODABAR'}) }}
                    </div>

                    <div class="kt-widget__info">

                        <div class="kt-widget__stats d-flex align-items-center flex-fill">
                            <div class="kt-widget__item">
                                <span class="kt-widget__date">
                                    {{'Notes'|__}}
                                </span>
                                <div class="kt-widget__label notes_scroll">
                                    <span class="btn btn-label-brand btn-sm btn-bold btn-upper">{{order.notes.count}}</span>
                                </div>
                            </div>
                            <div class="kt-widget__item">
                                <span class="kt-widget__date">
                                    {{'Package Receive Date'|__}}
                                </span>
                                <div class="kt-widget__label">
                                    <span class="btn btn-label-brand btn-sm btn-bold btn-upper">{{order.ship_date|date(settings.dateformat)}}</span>
                                </div>
                            </div>
                            {% if order.receive_date %}
                                <div class="kt-widget__item">
                                    <span class="kt-widget__date">
                                        {{'Received Date'|__}}
                                    </span>
                                    <div class="kt-widget__label">
                                        <span class="btn btn-label-{{progress_status}} btn-sm btn-bold btn-upper">{{order.receive_date|date(settings.dateformat)}}</span>
                                    </div>
                                </div>
                            {% else %}
                                <div class="kt-widget__item">
                                    <span class="kt-widget__date">
                                        {{'Package Expected Delievery Date'|__}}
                                    </span>
                                    <div class="kt-widget__label">
                                        {% if order.delivery_date %}
                                            <span class="btn btn-label-brand btn-sm btn-bold btn-upper">{{order.delivery_date|date(settings.dateformat)}}</span>{% if order.postponed == 1 and order.requested in [1,3,5,6,7,10,11] %} | <span class="btn btn-label-info btn-sm btn-bold btn-upper">{{'POSTPONED'|__}}</span>{% endif %}
                                        {% else %}
                                            <span class="btn btn-label-brand btn-sm btn-bold btn-upper">{{order.ship_date|date_modify("+"~order.deliverytime.count~" hours")|date(settings.dateformat)}}</span>
                                        {% endif %}
                                    </div>
                                </div>
                            {% endif %}

                            <div class="kt-widget__item flex-fill">
                                <span class="kt-widget__subtitel">{{'Progress'|__}}</span>
                                <div class="kt-widget__progress d-flex  align-items-center">
                                    <div class="progress" style="height: 5px;width: 100%;">
                                        <div class="progress-bar kt-bg-{{progress_status}}" role="progressbar" style="width: {{progress}}%;" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
                                    </div>
                                    <span class="kt-widget__stat">
                                        {{progress}}%
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--end:: Portlet-->


<div class="row">
    <div class="col-xl-6">
        <!--begin:: Widgets/Order Statistics-->
        <div class="kt-portlet kt-portlet--height-fluid">
        	<div class="kt-portlet__head">
        		<div class="kt-portlet__head-label">
        			<h3 class="kt-portlet__head-title">
        				{{'Order Details'|__}}
        			</h3>
        		</div>
        	</div>
        	<div class="kt-portlet__body kt-portlet__body--fluid">
        		<div class="kt-widget12">
        			<div class="kt-widget12__content">
                        <div class="kt-widget12__item">
                            <div class="kt-widget12__info">
                                <span class="kt-widget12__desc">{{'Shipment Type'|__}}</span>
                                <span class="kt-widget12__value">
                                    {% if order.type == 1 %}
                                        {{'Receive'|__}}
                                    {% else %}
                                        {{'Send'|__}}
                                    {% endif %}
                                </span>
                            </div>
                            <div class="kt-widget12__info">
                                <span class="kt-widget12__desc">{{'Package Type'|__}}</span>
                                <span class="kt-widget12__value">{{order.packaging.name}}</span>
                            </div>
                        </div>
                        <div class="kt-widget12__item">
                            <div class="kt-widget12__info">
                                <span class="kt-widget12__desc">{{'Status'|__}}</span>
                                <span class="kt-widget12__value">
                                    <span class="btn btn-label-{{order.status.color}} btn-sm btn-bold btn-upper">{{order.status.name}}</span>
                                    {% if progress_status == 'danger' %} | <span class="btn btn-label-{{progress_status}} btn-sm btn-bold btn-upper">{{'Delayed'|__}}</span>{% endif %}{% if order.requested == 10 or order.requested == 11 %} | <span class="btn btn-label-warning btn-sm btn-bold btn-upper">{{'RETURNING DISCARDS'|__}}</span>{% endif %}{% if order.postponed == 1 %} | <span class="btn btn-label-info btn-sm btn-bold btn-upper">{{'POSTPONED'|__}}</span>{% endif %}{% if order.requested == 12 and row.status.equal != 12 %} | <span class="btn btn-label-success btn-sm btn-bold btn-upper">{{'Supplied'|__}}</span>{% endif %}
                                </span>
                            </div>
                            <div class="kt-widget12__info">
                                <span class="kt-widget12__desc">{{'Channel'|__}}</span>
                                <span class="kt-widget12__value">{{order.channel|__}}</span>
                            </div>
                        </div>
                        <div class="kt-widget12__item">
                            <div class="kt-widget12__info">
                                <span class="kt-widget12__desc">{{'Payment Type'|__}}</span>
                                <span class="kt-widget12__value">{% if order.payment_type == 1 %}{{'Postpaid'|__}}{% elseif order.payment_type == 2 %}{{'Prepaid'|__}}{% endif %}</span>
                            </div>
                            <div class="kt-widget12__info">
                                <span class="kt-widget12__desc">{{'Currency'|__}}</span>
                                <span class="kt-widget12__value">{{order.currency.name}}</span>
                            </div>
                        </div>
                        <div class="kt-widget12__item">
                            <div class="kt-widget12__info">
                                <span class="kt-widget12__desc">{{'Office'|__}}</span>
                                <span class="kt-widget12__value">{{order.office.name}}</span>
                            </div>
                            <div class="kt-widget12__info">
                                <span class="kt-widget12__desc">{{'Delivery Time'|__}}</span>
                                <span class="kt-widget12__value">{{order.deliverytime.name}}</span>
                            </div>
                        </div>
                        {% if order.assigned_id or order.manifest_id %}
                            <div class="kt-widget12__item">
                                {% if order.manifest_id %}
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'Manifest'|__}}</span>
                                        <span class="kt-widget12__value">#{{order.currency.id}}</span>
                                        {% if order.manifest.driver %}
                                            <span class="kt-widget12__value kt-font-sm">{{order.manifest.driver.name}}</span>
                                        {% endif %}
                                    </div>
                                {% endif %}
                                {% if order.assigned_id %}
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'Assigned To'|__}}</span>
                                        <span class="kt-widget12__value">{{order.responsiable.name}}</span>
                                        {% if order.responsiable.mobile %}
                                            <span class="kt-widget12__value kt-font-sm">{{order.responsiable.mobile}}</span>
                                        {% endif %}
                                    </div>
                                {% endif %}
                            </div>
                        {% endif %}
                        {% if order.courier_id or order.mode_id %}
                            <div class="kt-widget12__item">
                                {% if order.courier_id %}
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'Courier Company'|__}}</span>
                                        <span class="kt-widget12__value">{{order.courier.name}}</span>
                                    </div>
                                {% endif %}
                                {% if order.mode_id %}
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'Shipping Mode'|__}}</span>
                                        <span class="kt-widget12__value">{{order.mode.name}}</span>
                                    </div>
                                {% endif %}
                            </div>
                        {% endif %}

                        {% if order.requested in [4,5,6,10,11,12] %}
                            {% if order.delivered_by != order.delivered_responsiable %}
                                <div class="kt-widget12__item">
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'Delivered Responsiabality'|__}}</span>
                                        <span class="kt-widget12__value">{{order.delivered_responsiabality.name}}</span>
                                    </div>
                                </div>
                            {% endif %}
                            <div class="kt-widget12__item">
                                <div class="kt-widget12__info">
                                    <span class="kt-widget12__desc">{{'Delivered By'|__}}</span>
                                    <span class="kt-widget12__value">{{order.delivered_employee.name}}</span>
                                </div>
                                <div class="kt-widget12__info">
                                    <span class="kt-widget12__desc">{{'Received By'|__}}</span>
                                    <span class="kt-widget12__value">{{order.received_by}}</span>
                                </div>
                            </div>
                            <div class="kt-widget12__item">
                                <div class="kt-widget12__info">
                                    <span class="kt-widget12__desc">{{'Receiver ID Copy'|__}}</span>
                                    <span class="kt-widget12__value">
                                        <img src="{{order.id_copy.path}}" style="max-height:350px;" alt="" />
                                    </span>
                                </div>
                            </div>
                            <div class="kt-widget12__item">
                                <div class="kt-widget12__info">
                                    <span class="kt-widget12__desc">{{'Receiver Signature'|__}}</span>
                                    <span class="kt-widget12__value">
                                        <img src="{{order.esign}}" style="max-height:350px;" alt="" />
                                    </span>
                                </div>
                            </div>
                        {% endif %}
        			</div>
        		</div>
        	</div>
        </div>
        <!--end:: Widgets/Order Statistics-->
    </div>
    <div class="col-xl-6">
        <!--begin:: Widgets/Order Statistics-->
        <div class="kt-portlet kt-portlet--height-fluid">
        	<div class="kt-portlet__head">
        		<div class="kt-portlet__head-label">
        			<h3 class="kt-portlet__head-title">
        				{{'Payment&Items Details'|__}}
        			</h3>
        		</div>
        	</div>
        	<div class="kt-portlet__body kt-portlet__body--fluid">
        		<div class="kt-widget12">
        			<div class="kt-widget12__content">
                        {% if order.items is not empty %}
                            <div class="kt-widget12__item">
                                <div class="kt-widget12__info">
                            		<div class="table-responsive">
                                        <table class="table table-dark">
                    					  	<thead>
                    					    	<tr>
                    					      		<th>{{"Category"|__}}</th>
                    					      		<th>{{"Info"|__}}</th>
                    					      		<th>{{"Weight"|__}}</th>
                    					    	</tr>
                    					  	</thead>
                    					  	<tbody>
                                                {% for item in order.items %}
                        					    	<tr>
                        						      	<th scope="row">{{item.category.name}}</th>
                        						      	<td>
                                                            {% if item.description %}
                                                                {{item.description}}<br />
                                                            {% endif %}
                                                            <b>{{'Quantity'|__}}:</b> {{item.quantity}}<br />
                                                            <b>{{'Dimensions'|__}}:</b> {{item.length}} {{'cm'|__}} x {{item.width}} {{'cm'|__}} x {{item.height}} {{'cm'|__}}
                                                        </td>
                        						      	<td>{{item.weight}} {{'Kg'|__}}</td>
                        					    	</tr>
                                                {% endfor %}
                    					  	</tbody>
                    					</table>
                                    </div>
                                </div>
                            </div>
                        {% endif %}
                        {% if order.payments.where('item_id', this.param.id).where('for_id', order.receiver_id).first.status == 3 and order.receiver_id == user.id %}

                        {% elseif order.payments.where('item_id', this.param.id).where('for_id', order.sender_id).first.status == 3 and order.sender_id == user.id %}

                        {% else %}

                            {% if settings.payment.enable == 1 and order.receiver_id and order.requested != 0 and order.requested != 2 %}
                                {% if 'paystack' in settings.payment.gateways %}
                                    {% if user.id in [order.sender_id,order.receiver_id]%}
                                        <div class="kt-widget12__item">
                                            <div class="kt-widget12__info">
                                                <form class="kt-widget12__desc">
                                                    <script src="https://js.paystack.co/v1/inline.js"></script>
                                                    <button type="button" class="btn btn-wide btn-success btn-bold btn-upper btn-elevate btn-elevate-air" onclick="payWithPaystack()"> <i class="fa fa-dollar-sign"></i> {{'PAY ONLINE'|__}} </button>
                                                </form>
                                                <span class="kt-widget12__value">
                                                    <span class="btn btn-label-danger btn-sm btn-bold btn-upper" data-toggle="kt-tooltip" data-placement="top" title="{{'Paystack only uses GHS currency so that is why we change the money for it'|__}}" data-original-title="{{'Paystack only uses GHS currency so that is why we change the money for it'|__}}" data-skin="dark">{{"The amount will be changed for Ghanaian cedi for using the paystack payment gateway, the changed price will equal the same as you should pay"|__}}</span>
                                                    <span class="btn btn-label-warning btn-sm btn-bold btn-upper" data-toggle="kt-tooltip" data-placement="top" title="{{'If you are sender or receiver you will have to pay the amount if its prepaid or postpaid just if you are the resposnsiable of this payment'|__}}" data-original-title="{{'If you are sender or receiver you will have to pay the amount if its prepaid or postpaid just if you are the resposnsiable of this payment'|__}}" data-skin="dark">{{"The amount you will pay online is what is requested from you only"|__}}</span>
                                                </span>
                                            </div>
                                        </div>
                                    {% else %}
                                        <div class="alert alert-info" role="alert">
                                            <div class="alert-icon"><i class="flaticon-info"></i></div>
                                            <div class="alert-text">
                                                {{'Sender and receiver can see the online payment option if they have to pay something they can pay it online'|__}}.
                                            </div>
                                            <div class="alert-close">
                                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                    <span aria-hidden="true"><i class="la la-close"></i></span>
                                                </button>
                                            </div>
                                        </div>
                                    {% endif %}
                                {% endif %}
                            {% endif %}

                        {% endif %}
                        {% if order.tax != 0 or order.insurance != 0 or order.customs_value != 0 %}
                            <div class="kt-widget12__item">
                                {% if order.tax != 0 %}
                                <div class="kt-widget12__info">
                                    <span class="kt-widget12__desc">{{'Tax'|__}}</span>
                                    <span class="kt-widget12__value">{{order.tax}}%</span>
                                </div>
                                {% endif %}
                                {% if order.insurance != 0 %}
                                <div class="kt-widget12__info">
                                    <span class="kt-widget12__desc">{{'Insurance'|__}}</span>
                                    <span class="kt-widget12__value">{{order.insurance}}%</span>
                                </div>
                                {% endif %}
                                {% if order.customs_value != 0 %}
                                <div class="kt-widget12__info">
                                    <span class="kt-widget12__desc">{{'Customs Value'|__}}</span>
                                    <span class="kt-widget12__value">{{order.customs_value}}</span>
                                </div>
                                {% endif %}
                            </div>
                        {% endif %}
                        {% if user.role_id in [1,2,3,6] or user.is_superuser %}
                            <div class="kt-widget12__item">
                                {% if order.type == 1 and order.receiver_id is null %}
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'Pickup Cost'|__}}</span>
                                        <span class="kt-widget12__value">
                                            {{order.courier_fee|currency}}
                                            {% if order.payments.where('payment_type', 'courier_fee').first.status == 3 %}
                                                <span class="btn btn-label-success btn-sm btn-bold btn-upper">{{'Paid'|__}}</span>
                                            {% endif %}
                                        </span>
                                    </div>
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'Shipping Cost'|__}}</span>
                                        <span class="kt-widget12__value">
                                            {{settings.fees.delivery_cost|currency}} <!--{% if order.requested in [100,0,1] %}<span class="btn btn-label-danger btn-sm btn-bold btn-upper" data-toggle="kt-tooltip" data-placement="top" title="{{'The actual cost will be calculated when we receive the package'|__}}" data-original-title="{{'The actual cost will be calculated when we receive the package'|__}}" data-skin="dark">{{"Not confirmed yet"|__}}</span>{% endif %}-->
                                        </span>
                                    </div>
                                {% else %}
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'Shipping Cost'|__}}</span>
                                        <span class="kt-widget12__value">
                                            {{order.courier_fee|currency}} <!--{% if order.requested in [100,0,1] %}<span class="btn btn-label-danger btn-sm btn-bold btn-upper" data-toggle="kt-tooltip" data-placement="top" title="{{'The actual cost will be calculated when we receive the package'|__}}" data-original-title="{{'The actual cost will be calculated when we receive the package'|__}}" data-skin="dark">{{"Not confirmed yet"|__}}</span>{% endif %}-->
                                        </span>
                                    </div>
                                {% endif %}
                                {% if order.return_defray == 1 %}
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'Package Cost'|__}}</span>
                                        <span class="kt-widget12__value">
                                            {{order.package_fee|currency}}
                                            {% if order.payments.where('payment_type', 'package_fee').first.status == 2 %}
                                                <span class="btn btn-label-danger btn-sm btn-bold btn-upper">{{'Canceled'|__}}</span>
                                            {% elseif order.requested == 12 %}
                                                <span class="btn btn-label-success btn-sm btn-bold btn-upper">{{'Paid'|__}}</span>
                                            {% endif %}
                                        </span>
                                    </div>
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'Return Courier Cost'|__}}</span>
                                        <span class="kt-widget12__value">{{order.return_courier_fee|currency}}</span> <!--{% if order.requested in [100,0,1] %}<span class="btn btn-label-danger btn-sm btn-bold btn-upper" data-toggle="kt-tooltip" data-placement="top" title="{{'The actual cost will be calculated when we receive the package'|__}}" data-original-title="{{'The actual cost will be calculated when we receive the package'|__}}" data-skin="dark">{{"Not confirmed yet"|__}}</span>{% endif %}-->
                                    </div>
                                {% else %}
                                    {% if order.payments.where('payment_type', 'return_package_fee').first %}
                                        <div class="kt-widget12__info">
                                            <span class="kt-widget12__desc">{{'Return Courier Cost'|__}}</span>
                                            <span class="kt-widget12__value">
                                                {{order.return_courier_fee|currency}}
                                                {% if order.payments.where('payment_type', 'return_package_fee').first.status == 2 %}
                                                    <span class="btn btn-label-danger btn-sm btn-bold btn-upper">{{'Canceled'|__}}</span>
                                                {% elseif order.payments.where('payment_type', 'return_package_fee').first.status == 3 %}
                                                    <span class="btn btn-label-success btn-sm btn-bold btn-upper">{{'Paid'|__}}</span>
                                                {% endif %}
                                            </span>
                                        </div>
                                    {% endif %}
                                {% endif %}
                            </div>
                        {% endif %}
                        <div class="kt-widget12__item">
                            <div class="kt-widget12__info">
                                {% if user.id == order.receiver_id %}
                                    <span class="kt-widget12__desc">{{'Total Requested From You'|__}}</span>
                                {% else %}
                                    <span class="kt-widget12__desc">{{'Total Requested From The Receiver'|__}}</span>
                                {% endif %}
                                <span class="kt-widget12__value">
                                    {{receiver_fees|currency}}<!--{% if order.requested in [100,0,1] %} <span class="btn btn-label-danger btn-sm btn-bold btn-upper" data-toggle="kt-tooltip" data-placement="top" title="{{'The actual cost will be calculated when we receive the package'|__}}" data-original-title="{{'The actual cost will be calculated when we receive the package'|__}}" data-skin="dark">{{"Not confirmed yet"|__}}</span>{% endif %}-->
                                    {% if order.payments.where('item_id', this.param.id).where('for_id', order.receiver_id).first.status == 3 %}
                                        <span class="btn btn-label-success btn-sm btn-bold btn-upper">{{'Paid'|__}}</span>
                                    {% endif %}
                                </span>
                                <!--
                                    {% if order.type == 1 and order.receiver_id is null %}
                                        <span class="muted-text kt-font-danger">{{'The correct fees will be applied after selecting the receiver address'|__}}</span>
                                    {% endif %}</span>
                                -->
                            </div>
                        </div>
                        <div class="kt-widget12__item">
                            <div class="kt-widget12__info">
                                {% if user.id == order.sender_id %}
                                    <span class="kt-widget12__desc">{{'Total Requested From You'|__}}</span>
                                {% else %}
                                    <span class="kt-widget12__desc">{{'Total Requested From The Sender'|__}}</span>
                                {% endif %}
                                <span class="kt-widget12__value">
                                    {{sender_fees|currency}}<!--{% if order.requested in [100,0,1] %} <span class="btn btn-label-danger btn-sm btn-bold btn-upper" data-toggle="kt-tooltip" data-placement="top" title="{{'The actual cost will be calculated when we receive the package'|__}}" data-original-title="{{'The actual cost will be calculated when we receive the package'|__}}" data-skin="dark">{{"Not confirmed yet"|__}}</span>{% endif %}-->
                                    {% if order.payments.where('item_id', this.param.id).where('for_id', order.sender_id).first.status == 3 %}
                                        <span class="btn btn-label-success btn-sm btn-bold btn-upper">{{'Paid'|__}}</span>
                                    {% endif %}
                                </span>
                                <!--
                                    {% if order.type == 1 and order.receiver_id is null %}
                                        <span class="muted-text kt-font-danger">{{'The correct fees will be applied after selecting the receiver address'|__}}</span>
                                    {% endif %}
                                -->
                            </div>
                        </div>
                        <div class="kt-widget12__item">
                            <div class="kt-widget12__info">
                                <span class="kt-widget12__desc">{{'Total received'|__}}</span>
                                <span class="kt-widget12__value">{{total_received|currency}}</span>
                            </div>
                            <div class="kt-widget12__info">
                                <span class="kt-widget12__desc">{{'Total remaining'|__}}</span>
                                <span class="kt-widget12__value">
                                    {% if order.return_defray == 1 and order.return_package_fee == 2 and order.requested in [4,5,6,8,9,10,11,12]%}
                                        {{total_remaining|currency}} <span class="btn btn-label-danger btn-sm btn-bold btn-upper">{{"The requested amount of the sender was deducted from the return"|__}}</span>
                                    {% else %}
                                        {{total_remaining|currency}}
                                    {% endif %} <!--{% if order.requested in [100,0,1] %}<span class="btn btn-label-danger btn-sm btn-bold btn-upper" data-toggle="kt-tooltip" data-placement="top" title="{{'The actual cost will be calculated when we receive the package'|__}}" data-original-title="{{'The actual cost will be calculated when we receive the package'|__}}" data-skin="dark">{{"Not confirmed yet"|__}}</span>{% endif %}-->
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
        	</div>
        </div>
        <!--end:: Widgets/Order Statistics-->
    </div>
</div>
<div class="row">
    <div class="col-xl-{% if order.type == 1 and order.receiver_id == null %}12{% else %}6{% endif %}">
        <!--begin:: Widgets/Order Statistics-->
        <div class="kt-portlet kt-portlet--height-fluid">
        	<div class="kt-portlet__head">
        		<div class="kt-portlet__head-label">
        			<h3 class="kt-portlet__head-title">
        				{{'Sender Details'|__}}
        			</h3>
        		</div>
        	</div>
        	<div class="kt-portlet__body kt-portlet__body--fluid">
        		<div class="kt-widget12">
        			<div class="kt-widget12__content">
                        <div class="kt-widget12__item">
                            <div class="kt-widget12__info">
                                <span class="kt-widget12__desc">{{'Name'|__}}</span>
                                <span class="kt-widget12__value">
                                    {{order.sender.name|capitalize}}
                                    {% if order.sender.userverify_dateverified %}
                                        <i class="flaticon2-correct kt-font-info"></i>
                                    {% endif %}
                                </span>
                            </div>
                            <div class="kt-widget12__info">
                                <span class="kt-widget12__desc">{{'Mobile'|__}}</span>
                                <span class="kt-widget12__value">{{order.sender.mobile}}</span>
                            </div>
                        </div>
                        {% if order.sender.email or order.sender.gender %}
                            <div class="kt-widget12__item">
                                {% if order.sender.email %}
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'Email'|__}}</span>
                                        <span class="kt-widget12__value">{{ order.sender.email }}</span>
                                    </div>
                                {% endif %}
                                {% if order.sender.gender %}
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'Gender'|__}}</span>
                                        <span class="kt-widget12__value">{{order.sender.gender}}</span>
                                    </div>
                                {% endif %}
                            </div>
                        {% endif %}
                        <div class="kt-widget12__item">
                            <div class="kt-widget12__info">
                                <span class="kt-widget12__desc">{{'Sender Address'|__}}</span>
                                <span class="kt-widget12__value">
                                    {{order.sender_address.name|capitalize}}
                                </span>
                            </div>
                        </div>
                        <div class="kt-widget12__item">
                            <div class="kt-widget12__info">
                                <span class="kt-widget12__desc">{{'Street'|__}}</span>
                                <span class="kt-widget12__value">
                                    {{order.sender_address.street}}
                                </span>
                            </div>
                        </div>
                        {% if order.sender_address.area or order.sender_address.thecity %}
                            <div class="kt-widget12__item">
                                {% if order.sender_address.area %}
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'County'|__}}</span>
                                        <span class="kt-widget12__value">
                                            {{order.sender_address.area.name}}
                                        </span>
                                    </div>
                                {% endif %}
                                {% if order.sender_address.thecity %}
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'City'|__}}</span>
                                        <span class="kt-widget12__value">
                                            {{order.sender_address.thecity.name}}
                                        </span>
                                    </div>
                                {% endif %}
                            </div>
                        {% endif %}
                        {% if order.sender_address.thestate or order.sender_address.thecountry %}
                            <div class="kt-widget12__item">
                                {% if order.sender_address.thestate %}
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'State'|__}}</span>
                                        <span class="kt-widget12__value">
                                            {{order.sender_address.thestate.name}}
                                        </span>
                                    </div>
                                {% endif %}
                                {% if order.sender_address.thecountry %}
                                    <div class="kt-widget12__info">
                                        <span class="kt-widget12__desc">{{'Country'|__}}</span>
                                        <span class="kt-widget12__value">
                                            {{order.sender_address.thecountry.name}}
                                        </span>
                                    </div>
                                {% endif %}
                            </div>
                        {% endif %}
                        <div class="kt-widget12__item">
                            <div class="kt-widget12__info">
                        		<div class="kt-widget15">
                        			<div class="kt-widget15__map">
                        				<div id="kt_map_sender" style="height:320px;"></div>
                        			</div>
                                </div>
                            </div>
                        </div>
        			</div>
        		</div>
        	</div>
        </div>
        <!--end:: Widgets/Order Statistics-->
    </div>
    {% if order.type == 2 or order.receiver_id != null %}
        <div class="col-xl-6">
            <!--begin:: Widgets/Order Statistics-->
            <div class="kt-portlet kt-portlet--height-fluid">
            	<div class="kt-portlet__head">
            		<div class="kt-portlet__head-label">
            			<h3 class="kt-portlet__head-title">
            				{{'Receiver Details'|__}}
            			</h3>
            		</div>
            	</div>
            	<div class="kt-portlet__body kt-portlet__body--fluid">
            		<div class="kt-widget12">
            			<div class="kt-widget12__content">
                            <div class="kt-widget12__item">
                                <div class="kt-widget12__info">
                                    <span class="kt-widget12__desc">{{'Name'|__}}</span>
                                    <span class="kt-widget12__value">
                                        {{order.receiver.name|capitalize}}
                                        {% if order.receiver.userverify_dateverified %}
                                            <i class="flaticon2-correct kt-font-info"></i>
                                        {% endif %}
                                    </span>
                                </div>
                                <div class="kt-widget12__info">
                                    <span class="kt-widget12__desc">{{'Mobile'|__}}</span>
                                    <span class="kt-widget12__value">{{order.receiver.mobile}}</span>
                                </div>
                            </div>
                            {% if order.receiver.email or order.receiver.gender %}
                                <div class="kt-widget12__item">
                                    {% if order.receiver.email %}
                                        <div class="kt-widget12__info">
                                            <span class="kt-widget12__desc">{{'Email'|__}}</span>
                                            <span class="kt-widget12__value">{{ order.receiver.email }}</span>
                                        </div>
                                    {% endif %}
                                    {% if order.receiver.gender %}
                                        <div class="kt-widget12__info">
                                            <span class="kt-widget12__desc">{{'Gender'|__}}</span>
                                            <span class="kt-widget12__value">{{order.receiver.gender}}</span>
                                        </div>
                                    {% endif %}
                                </div>
                            {% endif %}
                            <div class="kt-widget12__item">
                                <div class="kt-widget12__info">
                                    <span class="kt-widget12__desc">{{'Receiver Address'|__}}</span>
                                    <span class="kt-widget12__value">
                                        {{order.receiver_address.name|capitalize}}
                                    </span>
                                </div>
                            </div>
                            <div class="kt-widget12__item">
                                <div class="kt-widget12__info">
                                    <span class="kt-widget12__desc">{{'Street'|__}}</span>
                                    <span class="kt-widget12__value">
                                        {{order.receiver_address.street}}
                                    </span>
                                </div>
                            </div>
                            {% if order.receiver_address.area or order.receiver_address.thecity %}
                                <div class="kt-widget12__item">
                                    {% if order.receiver_address.area %}
                                        <div class="kt-widget12__info">
                                            <span class="kt-widget12__desc">{{'County'|__}}</span>
                                            <span class="kt-widget12__value">
                                                {{order.receiver_address.area.name}}
                                            </span>
                                        </div>
                                    {% endif %}
                                    {% if order.receiver_address.thecity %}
                                        <div class="kt-widget12__info">
                                            <span class="kt-widget12__desc">{{'City'|__}}</span>
                                            <span class="kt-widget12__value">
                                                {{order.receiver_address.thecity.name}}
                                            </span>
                                        </div>
                                    {% endif %}
                                </div>
                            {% endif %}
                            {% if order.receiver_address.thestate or order.receiver_address.thecountry %}
                                <div class="kt-widget12__item">
                                    {% if order.receiver_address.thestate %}
                                        <div class="kt-widget12__info">
                                            <span class="kt-widget12__desc">{{'State'|__}}</span>
                                            <span class="kt-widget12__value">
                                                {{order.receiver_address.thestate.name}}
                                            </span>
                                        </div>
                                    {% endif %}
                                    {% if order.receiver_address.thecountry %}
                                        <div class="kt-widget12__info">
                                            <span class="kt-widget12__desc">{{'Country'|__}}</span>
                                            <span class="kt-widget12__value">
                                                {{order.receiver_address.thecountry.name}}
                                            </span>
                                        </div>
                                    {% endif %}
                                </div>
                            {% endif %}
                            <div class="kt-widget12__item">
                                <div class="kt-widget12__info">
                            		<div class="kt-widget15">
                            			<div class="kt-widget15__map">
                            				<div id="kt_map_receiver" style="height:320px;"></div>
                            			</div>
                                    </div>
                                </div>
                            </div>
            			</div>
            		</div>
            	</div>
            </div>
            <!--end:: Widgets/Order Statistics-->
        </div>
    {% endif %}
</div>
<div class="row">
    <div class="col-xl-6">
        <!--begin:: Widgets/Last Updates-->
        <div class="kt-portlet kt-portlet--height-fluid">
            <div class="kt-portlet__head">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title">{{'Latest Updates'|__}}</h3>
                </div>
            </div>
            <div class="kt-portlet__body">
                <div class="kt-scroll" data-scroll="true" style="height: 300px">
                    {% for activity in order.activities %}
                        <!--begin::widget 12-->
                        <div class="kt-widget4">
                            <div class="kt-widget4__item">
                                <span class="kt-widget4__icon"><i class="flaticon-pie-chart-1 kt-font-info"></i></span>
                                <div class="kt-widget4__info">
        							<a href="javascript:;" class="kt-widget4__username">
                                        {% if activity.other %}
                                            {% set text = 'activity_'~activity.description %}
                                            {{text|__}}: {{activity.other}}
                                        {% else %}
                                            {% set text = 'activity_'~activity.description %}
            								{{text|__}}
                                        {% endif %}
        							</a>
        							<p class="kt-widget4__text">
        								{{activity.created_at|date(settings.dateformat)}} {{activity.created_at|date('h:i')}} {{activity.created_at|date('a')|__}}
        							</p>
        						</div>
                                <span class="kt-widget4__number kt-font-info">{{activity.user.name}}</span>
                            </div>
                        </div>
                        <!--end::Widget 12-->
                    {% else %}
                        <div class="kt-notification">
                            <div class="kt-notification__item">
                                <div class="kt-notification__item-icon">
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" class="kt-svg-icon kt-svg-icon--brand">
                                        <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                            <rect x="0" y="0" width="24" height="24"/>
                                            <path d="M5,3 L6,3 C6.55228475,3 7,3.44771525 7,4 L7,20 C7,20.5522847 6.55228475,21 6,21 L5,21 C4.44771525,21 4,20.5522847 4,20 L4,4 C4,3.44771525 4.44771525,3 5,3 Z M10,3 L11,3 C11.5522847,3 12,3.44771525 12,4 L12,20 C12,20.5522847 11.5522847,21 11,21 L10,21 C9.44771525,21 9,20.5522847 9,20 L9,4 C9,3.44771525 9.44771525,3 10,3 Z" fill="#000000"/>
                                            <rect fill="#000000" opacity="0.3" transform="translate(17.825568, 11.945519) rotate(-19.000000) translate(-17.825568, -11.945519) " x="16.3255682" y="2.94551858" width="3" height="18" rx="1"/>
                                        </g>
                                    </svg>
                                </div>
                                <div class="kt-notification__item-details">
                                    <div class="kt-notification__item-title">
                                        {{'No activities found'|__}}.
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
        <!--end:: Widgets/Last Updates-->
    </div>
    <div class="col-xl-6" id="notes_continer">

        <div class="kt-portlet kt-portlet--height-fluid">
            <div class="kt-portlet__head">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title">{{'Notes'|__}}</h3>
                </div>
            </div>
            <div class="kt-portlet__body">
                {{ form_ajax('onNote', {success:"flashRequest(data.type,data.message);$('#note_message').val('');", class:'kt_form notes' }) }}
                    <div class="form-group form-group-last kt-hide">
                        <div class="alert alert-danger kt_form_msg_notes" role="alert">
                            <div class="alert-icon"><i class="flaticon-warning"></i></div>
                            <div class="alert-text">
                                {{'Oh snap! Change a few things up and try submitting again'|__}}.
                            </div>
                            <div class="alert-close">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true"><i class="la la-close"></i></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <textarea class="form-control" id="note_message" rows="3" name="note" placeholder="{{'Write your notes'|__}}" required></textarea>
                    </div>
                    <div class="row">
                        <div class="col">
                            <button type="submit" class="btn btn-label-brand btn-bold">{{'Add note'|__}}</button>
                            <button type="reset" class="btn btn-clean btn-bold">{{'Cancel'|__}}</button>
                        </div>
                    </div>
                {{ form_close() }}

                <div class="kt-separator kt-separator--space-lg kt-separator--border-dashed"></div>
                <div id="notes">
                    {% partial 'notes' item=order %}
                </div>
            </div>
        </div>
    </div>
    <!--
        <div class="col-xl-6 kt-todo">
            <div class="kt-grid__item kt-grid__item--fluid  kt-portlet kt-portlet--height-fluid kt-todo__list" id="kt_todo_list">
                <div class="kt-portlet__body kt-portlet__body--fit-x">
                    <div class="kt-todo__head">
                        <div class="kt-todo__toolbar">
                            <div class="kt-todo__info">
                                <span class="kt-todo__name">
                                    {{'Order Tasks'|__}}
                                </span>
                            </div>
                            <div class="kt-todo__details">
                                <a href="javascript:;" class="btn btn-label-success btn-upper btn-sm btn-bold">{{'New Task'|__}}</a>
                            </div>
                        </div>
                    </div>

                    <div class="kt-todo__body">
                        {% for task in tasks %}
                            <div class="kt-todo__items" data-type="task">
                                <div class="kt-todo__item kt-todo__item--unread" data-id="1" data-type="task">
                                    <div class="kt-todo__info">
                                        <div class="kt-todo__actions">
                                            <label class="kt-checkbox kt-checkbox--single kt-checkbox--tick kt-checkbox--brand">
                                                <input type="checkbox">
                                                <span></span>
                                            </label>
                                        </div>
                                    </div>
                                    <div class="kt-todo__details" data-toggle="view">
                                        <div class="kt-todo__message">
                                            <span class="kt-todo__subject">{{task.title}}</span>
                                        </div>
                                        <div class="kt-todo__labels">
                                            <span class="kt-todo__label kt-badge kt-badge--unified-brand kt-badge--bold kt-badge--inline">{{task.comment}}</span>
                                        </div>
                                    </div>
                                    <div class="kt-todo__datetime" data-toggle="view">
                                        8:30 PM
                                    </div>
                                    <div class="kt-todo__sender" data-toggle="kt-tooltip" data-placement="top" title="" data-original-title="{{task.user.name}}">
                                        {% if task.user.avatar %}
                                             <span class="kt-media kt-media--sm kt-media--danger kt-hidden" style="background-image: url('{{task.user.avatar.thumb(100, 100,'crop')}}')">
                                                 <span></span>
                                             </span>
                                        {% else %}
                                            <div class="kt-todo__sender" data-toggle="kt-tooltip" data-placement="top" title="" data-original-title="{{task.user.name}}">
                                                <span class="kt-media kt-media--sm kt-media--brand">
                                                    <span>{{task.user.name|capitalize|slice(0,2)}}</span>
                                                </span>
                                            </div>
                                       {% endif %}
                                    </div>
                                </div>
                            </div>
                        {% else %}
                            <div class="kt-todo__items" data-type="task">
                                <div class="kt-todo__item kt-todo__item--unread" data-type="task">
                                    <div class="kt-todo__details" data-toggle="view">
                                        <div class="kt-todo__message">
                                            <span class="kt-todo__subject">{{'No tasks found'|__}}.</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                    {% if tasks %}
                        <div class="kt-todo__foot">
                            <div class="kt-todo__toolbar">
                                <div class="kt-todo__controls">
                                     {{ tasks.render|raw }}
                                     <button class="kt-todo__icon" data-toggle="kt-tooltip" title="Previose page">
                                         <i class="flaticon2-left-arrow"></i>
                                     </button>

                                     <button class="kt-todo__icon" data-toggle="kt-tooltip" title="Next page">
                                         <i class="flaticon2-right-arrow"></i>
                                     </button>
                                </div>
                            </div>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    -->
</div>

<div class="modal fade" id="assign_employee" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" >{{'Assign Employee'|__}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                </button>
            </div>
            {{ form_ajax('onAssign', { success: 'created successfully!', flash: true, class: 'kt_form' }) }}
                <div class="modal-body">
                    {% if no_employees %}
                        <div class="alert alert-warning" role="alert">
                            <div class="alert-icon"><i class="flaticon-warning"></i></div>
                            <div class="alert-text">
                                {{'No employees cover that shipment area, so here are all the employees to choose from'|__}}.
                            </div>
                            <div class="alert-close">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true"><i class="la la-close"></i></span>
                                </button>
                            </div>
                        </div>
                    {% endif %}
                    <div class="row">
                        <div class="form-group col-lg-12">
                            <label>{{'To who?'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                            <select class="form-control " name="assigned_id" data-live-search="true">
                                <option data-hidden="true"></option>
                                {% for employee in employees %}
                                    <option value="{{employee.id}}">{{employee.name}}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">{{'Close'|__}}</button>
                    <button type="submit" class="btn btn-primary">{{'Assign'|__}}</button>
                </div>
            {{ form_close() }}
        </div>
    </div>
</div>
<div class="modal fade" id="assign_manifest" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" >{{'Assign Manifest'|__}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                </button>
            </div>
            {{ form_ajax('onManifest', { success: 'created successfully!', flash: true, class: 'kt_form' }) }}
                <div class="modal-body">
                    <div class="row">
                        <div class="form-group col-lg-12">
                            <label>{{'To which manifest?'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                            <select class="form-control " name="manifest_id" data-live-search="true">
                                <option data-hidden="true"></option>
                                {% for manifest in manifestes %}
                                    <option value="{{manifest.id}}">#{{manifest.id}} {{manifest.driver.name}}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">{{'Close'|__}}</button>
                    <button type="submit" class="btn btn-primary">{{'Assign'|__}}</button>
                </div>
            {{ form_close() }}
        </div>
    </div>
</div>
<div class="modal fade" id="transfer_office" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" >{{'Transfer to office'|__}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                </button>
            </div>
            {{ form_ajax('onTransfer', { success: 'created successfully!', flash: true, class: 'kt_form' }) }}
                <div class="modal-body">
                    <div class="row">
                        <div class="form-group col-lg-12">
                            <label>{{'To which office?'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                            <select class="form-control " name="office_id" data-live-search="true">
                                <option data-hidden="true"></option>
                                {% for office in offices %}
                                    <option value="{{office.id}}">{{office.name}}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">{{'Close'|__}}</button>
                    <button type="submit" class="btn btn-primary">{{'Transfer'|__}}</button>
                </div>
            {{ form_close() }}
        </div>
    </div>
</div>
<div class="modal fade" id="postpone" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" >{{'Postpone'|__}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                </button>
            </div>
            {{ form_ajax('onPostpone', { success: 'created successfully!', flash: true, class: 'kt_form' }) }}
            <div class="modal-body">
                <div class="row">
                    <div class="form-group col-lg-12">
                        <label>{{'To Date'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                        <div class="input-group date">
                            <input type="text" class="form-control date" readonly="" name="ship_date" value="{{now|date_modify("+1 day")|date(settings.dateformat)}}" required>
                            <div class="input-group-append">
                                <span class="input-group-text">
                                    <i class="la la-calendar"></i>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-lg-12">
                        <label>{{'Reason'|__}}</label>
                        <textarea class="form-control" name="message"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">{{'Close'|__}}</button>
                <button type="submit" class="btn btn-primary">{{'Postpone'|__}}</button>
            </div>
            {{ form_close() }}
        </div>
    </div>
</div>
<div class="modal fade" id="refuse" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" >{{'Refuse'|__}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                </button>
            </div>

            {{ form_ajax('onRefuse', { success: 'created successfully!', flash: true, class: 'kt_form' }) }}
            <div class="modal-body">
                <div class="row">
                    <div class="form-group col-lg-12">
                        <label>{{'Reason'|__}}</label>
                        <textarea class="form-control" name="message"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">{{'Close'|__}}</button>
                <button type="submit" class="btn btn-primary">{{'Refuse'|__}}</button>
            </div>
            {{ form_close() }}
        </div>
    </div>
</div>
<div class="modal fade" id="discards" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" >{{'Transfer as discards'|__}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                </button>
            </div>

            {{ form_ajax('onDiscards', { success: 'created successfully!', flash: true, class: 'kt_form' }) }}
            <div class="modal-body">
                <div class="row">
                    <div class="form-group col-lg-12">
                        <label>{{'Reason'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                        <select class="form-control " id="discard_reason" name="message" data-live-search="true" required>
                            <option data-hidden="true"></option>
                            <option value="1">{{'Receiver request'|__}}</option>
                            <option value="2">{{'Receiver evade'|__}}</option>
                            <option value="3">{{'Sender request'|__}}</option>
                        </select>
                    </div>
                </div>
                <div class="discard_reason_receiver kt-hidden">
                    <div class="row">
                        <div class="form-group form-group-last kt-hide">
                            <div class="alert alert-danger kt_form_msg" role="alert">
                                <div class="alert-icon"><i class="flaticon-warning"></i></div>
                                <div class="alert-text">
                                    {{'Oh snap! Change a few things up and try submitting again'|__}}.
                                </div>
                                <div class="alert-close">
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true"><i class="la la-close"></i></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-lg-12">
                            <label>{{'Return package fees responsiable'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                            <div class="col-lg-9 col-xl-6">
                                <div class="kt-radio-inline">
                                    <label class="kt-radio">
                                        <input type="radio" name="return_package_fee" class="return_package_fee" value="1" {% if order.return_package_fee == 1 %}checked{% endif %} required> {{'Receiver'|__}}
                                        <span></span>
                                    </label>
                                    <label class="kt-radio">
                                        <input type="radio" name="return_package_fee" class="return_package_fee" value="2" {% if order.return_package_fee == 2 %}checked{% endif %} required> {{'Sender'|__}}
                                        <span></span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group row">
                        {% for payment in order.payments.where('for_id', order.receiver_id) %}
                            <label class="col-lg-9 col-form-label kt-align-left" for="payment_{{payment.id}}">
                                {% if payment.payment_type %}{{payment.payment_type|__}}: {% endif %}{{'Is it paid ?'|__}}
                            </label>
                            <div class="col-lg-3">
                                <div class="kt-checkbox-single">
                                    <label class="kt-checkbox">
                                        <input type="checkbox" name="payments[]" id="payment_{{payment.id}}" value="{{payment.id}}">
                                        <span></span>
                                    </label>
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">{{'Close'|__}}</button>
                <button type="submit" class="btn btn-primary">{{'Discard'|__}}</button>
            </div>
            {{ form_close() }}
        </div>
    </div>
</div>
<div class="modal fade" id="received" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" >{{'Receiver information'|__}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                </button>
            </div>

            {{ form_ajax('onDeliver', { success: 'created successfully!', flash: true, class: 'kt_form', novalidate: true }) }}
                <div class="modal-body">
                    <div class="row">

                        <div class="form-group col-lg-12">
                            <label>{{'Receiver'|__}}/{{'Client'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                            <select class="form-control clients col-lg-12" name="receiver_id" id="receiver_id" required>
                                <option data-hidden="true"></option>
                                {% if order.receiver %}
                                    <option value="{{order.receiver.id}}" selected>{{order.receiver.name}}</option>
                                {% endif %}
                                {% if user.hasUserPermission('client', 'c') %}
                                    <option value="new" data-icon="flaticon2-add">{{'Add New'|__}}</option>
                                {% endif %}
                            </select>
                        </div>
                        <div class="form-group col-lg-12">
                            <label>{{'Receiver Address'|__}}/{{'Client Address'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                            <select class="form-control receiver_address_id" name="receiver_address_id" id="receiver_address_id" data-live-search="true" title="{{'Please select receiver first'|__}}" required>
                                <option data-hidden="true"></option>
                                {% if order.receiver %}
                                    <option value="{{order.receiver_address.id}}" selected>{{order.receiver_address.name}}</option>
                                {% endif %}
                            </select>
                        </div>
                        <div class="col-lg-12 kt-hidden" id="addnewreceiver">
                            <div class="kt-portlet kt-portlet--bordered kt-portlet--head--noborder kt-margin-b-0">
                                <div class="kt-portlet__head">
                                    <div class="kt-portlet__head-label">
                                        <h3 class="kt-portlet__head-title">
                                            {{'Add a new client'|__}}
                                        </h3>
                                    </div>
                                </div>
                                <div class="kt-portlet__body">
                                    <div class="row">
                                        <div class="form-group col-lg-12">
                                            <label>{{'Client Name'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                                            <input type="text" class="form-control name" name="receiver[name]" required />
                                        </div>
                                        <div class="form-group col-lg-6">
                                            <label>{{'Mobile'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                                            <input type="text" class="form-control mobile" name="receiver[mobile]" required />
                                        </div>
                                        <div class="form-group col-lg-6">
                                            <label>{{'Gender'|__}}</label>
                                            <div class="kt-radio-inline">
                                                <label class="kt-radio">
                                                    <input type="radio" name="receiver[gender]" class="gender" value="male"> {{'Male'|__}}
                                                    <span></span>
                                                </label>
                                                <label class="kt-radio">
                                                    <input type="radio" name="receiver[gender]" class="gender" value="female"> {{'Female'|__}}
                                                    <span></span>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="location-receiver">
                                        <div class="row">
                                            <div class="form-group col-lg-12">
                                                <label>{{'Address'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                                                <input type="text" class="form-control address street_addr" data-receiver="route" name="receiver[street_address]"  rel="receiver" required/>
                                                <input type="hidden" class="form-control lat" data-receiver="lat" name="receiver[lat]" />
                                                <input type="hidden" class="form-control lng" data-receiver="lng" name="receiver[lng]" />
                                                <input type="hidden" class="form-control url" data-receiver="url" name="receiver[url]" />
                                            </div>
                                            <div class="form-group col-lg-6">
                                                <label>{{'Country'|__}}</label>
                                                <select class="form-control country_id" data-receiver="country" data-live-search="true" name="receiver[country]">
                                                    <option data-hidden="true"></option>
                                                    {% for country in countries %}
                                                        <option value="{{country.id}}" {% if currentLang != 'en' %}data-subtext="{{country.lang(currentLang).name}}"{% endif %}>{{country.lang('en').name}}</option>
                                                    {% endfor %}
                                                </select>
                                            </div>
                                            <div class="form-group col-lg-6">
                                                <label>{{'Postal Code'|__}}</label>
                                                <input class="form-control postal_code" type="text" data-receiver="postal_code" name="receiver[postal_code]" >
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label>{{'State / Region'|__}}</label>
                                                <select class="form-control state_id" data-receiver="administrative_area_level_1" title="{{'Please select country first'|__}}" name="receiver[state]" data-live-search="true">
                                                    <option data-hidden="true"></option>
                                                    {% for state in states %}
                                                        <option value="{{state.id}}" {% if currentLang != 'en' %}data-subtext="{{state.lang(currentLang).name}}"{% endif %}>{{state.lang('en').name}}</option>
                                                    {% endfor %}
                                                </select>
                                            </div>
                                            <div class="form-group col-lg-6">
                                                <label>{{'City'|__}}</label>
                                                <select class="form-control city_id" data-receiver="locality" name="receiver[city]" title="{{'Please select state first'|__}}" data-live-search="true">
                                                    <option data-hidden="true"></option>
                                                    {% for city in cities %}
                                                        <option value="{{city.id}}">{{city.name}}</option>
                                                    {% endfor %}
                                                </select>
                                            </div>
                                            <div class="form-group col-lg-12">
                                                <label>{{'County'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                                                <select class="form-control area_id" data-receiver="sublocality" name="receiver[county]" title="{{'Please select city first'|__}}" data-live-search="true" required>
                                                    <option data-hidden="true"></option>
                                                    {% for county in areas %}
                                                        <option value="{{county.id}}">{{county.name}}</option>
                                                    {% endfor %}
                                                </select>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-lg-12">
                                                <label>{{'Google Map'|__}}</label>
                                                <div class="col-sm-12 map_canvas map_receiver"></div>
                                                <span class="form-text text-muted">{{'Change the pin to select the right location'|__}}</span>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-lg-12">
                                                <div class="kt-checkbox-single">
                                                    <label class="kt-checkbox">
                                                        <input type="checkbox" name="connect" class="connect" value="receiver"> {{'Connect client'|__}}: {{'create an account for the client'|__}}
                                                        <span></span>
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row align-items-center kt-hidden" id="connect_receiver">
                                            <div class="col-md-12">
                                                <div class="form-group kt-form__group--inline">
                                                    <div class="kt-form__label">
                                                        <label class="col-form-label">{{'Email'|__}}:&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                                                    </div>
                                                    <div class="kt-form__control">
                                                        <input type="text" class="form-control email" name="receiver[email]" required/>
                                                    </div>
                                                </div>
                                                <div class="d-md-none kt-margin-b-10"></div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group kt-form__group--inline">
                                                    <div class="kt-form__label">
                                                        <label class="col-form-label">{{'Username'|__}}:&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                                                    </div>
                                                    <div class="kt-form__control">
                                                        <input type="text" class="form-control username" name="receiver[username]" required>
                                                    </div>
                                                </div>
                                                <div class="d-md-none kt-margin-b-10"></div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group kt-form__group--inline">
                                                    <div class="kt-form__label">
                                                        <label class="col-form-label">{{'Password'|__}}:&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                                                    </div>
                                                    <div class="kt-form__control">
                                                        <input type="password" class="form-control password" name="receiver[password]" required>
                                                    </div>
                                                </div>
                                                <div class="d-md-none kt-margin-b-10"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="kt-portlet__foot">
                                    <div class="row align-items-center">
                                        <div class="col-lg-12">
                                            <button type="button" class="btn btn-success save">{{'Save'|__}}</button>
                                            <button type="button" class="btn btn-secondary cancel">{{'Cancel'|__}}</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 kt-hidden" id="addnewreceiveraddress">
                            <div class="kt-portlet kt-portlet--bordered kt-portlet--head--noborder kt-margin-b-0">
                                <div class="kt-portlet__head">
                                    <div class="kt-portlet__head-label">
                                        <h3 class="kt-portlet__head-title">
                                            {{'Add a new client address'|__}}
                                        </h3>
                                    </div>
                                </div>
                                <div class="kt-portlet__body">
                                    <div class="location-receiveraddress">
                                        <div class="row">
                                            <div class="form-group col-lg-12">
                                                <label>{{'Address'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                                                <input type="text" class="form-control address street_addr" data-receiveraddress="route" name="receiveraddress[street_address]"  rel="receiveraddress" required/>
                                                <input type="hidden" class="form-control lat" data-receiveraddress="lat" name="receiveraddress[lat]" />
                                                <input type="hidden" class="form-control lng" data-receiveraddress="lng" name="receiveraddress[lng]" />
                                                <input type="hidden" class="form-control url" data-receiveraddress="url" name="receiveraddress[url]" />
                                            </div>
                                            <div class="form-group col-lg-6">
                                                <label>{{'Country'|__}}</label>
                                                <select class="form-control country_id" data-receiveraddress="country" data-live-search="true" name="receiveraddress[country]">
                                                    <option data-hidden="true"></option>
                                                    {% for country in countries %}
                                                        <option value="{{country.id}}" {% if currentLang != 'en' %}data-subtext="{{country.lang(currentLang).name}}"{% endif %}>{{country.lang('en').name}}</option>
                                                    {% endfor %}
                                                </select>
                                            </div>
                                            <div class="form-group col-lg-6">
                                                <label>{{'Postal Code'|__}}</label>
                                                <input class="form-control postal_code" type="text" data-sendreceiveraddresser="postal_code" name="receiveraddress[postal_code]" >
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label>{{'State / Region'|__}}</label>
                                                <select class="form-control state_id" data-receiveraddress="administrative_area_level_1" title="{{'Please select country first'|__}}" name="receiveraddress[state]" data-live-search="true">
                                                    <option data-hidden="true"></option>
                                                    {% for state in states %}
                                                        <option value="{{state.id}}" {% if currentLang != 'en' %}data-subtext="{{state.lang(currentLang).name}}"{% endif %}>{{state.lang('en').name}}</option>
                                                    {% endfor %}
                                                </select>
                                            </div>
                                            <div class="form-group col-lg-6">
                                                <label>{{'City'|__}}</label>
                                                <select class="form-control city_id" data-receiveraddress="locality" name="receiveraddress[city]" title="{{'Please select state first'|__}}" data-live-search="true">
                                                    <option data-hidden="true"></option>
                                                    {% for city in cities %}
                                                        <option value="{{city.id}}">{{city.name}}</option>
                                                    {% endfor %}
                                                </select>
                                            </div>
                                            <div class="form-group col-lg-12">
                                                <label>{{'County'|__}}</label>
                                                <select class="form-control area_id" data-receiveraddress="sublocality" name="receiveraddress[county]" title="{{'Please select city first'|__}}" data-live-search="true">
                                                    <option data-hidden="true"></option>
                                                    {% for county in areas %}
                                                        <option value="{{county.id}}" {% if currentLang != 'en' %}data-subtext="{{county.lang(currentLang).name}}"{% endif %}>{{county.lang('en').name}}</option>
                                                    {% endfor %}
                                                </select>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-lg-12">
                                                <label>{{'Google Map'|__}}</label>
                                                <div class="col-sm-12 map_canvas map_receiveraddress"></div>
                                                <span class="form-text text-muted">{{'Change the pin to select the right location'|__}}</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="kt-portlet__foot">
                                    <div class="row align-items-center">
                                        <div class="col-lg-12">
                                            <button type="button" class="btn btn-success save">{{'Save'|__}}</button>
                                            <button type="button" class="btn btn-secondary cancel">{{'Cancel'|__}}</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="kt-separator kt-separator--border-dashed kt-separator--space-lg kt-separator--portlet-fit"></div>
                        <div class="form-group col-lg-12 {% if order.return_defray != 1 %}kt-hidden{% endif %} package_fee">
                            <label>{{'Courier Cost'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                            <div class="input-group">
                                {% if primary_currency.place_symbol_before == 1 %}
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            {{primary_currency.currency_symbol}}
                                        </span>
                                    </div>
                                {% endif %}
                                    <input type="text" class="form-control decimal" data-type='currency' id="courier_fee" name="courier_fee" value="{{order.courier_fee}}" required />
                                {% if primary_currency.place_symbol_before == 0 %}
                                    <div class="input-group-append">
                                        <span class="input-group-text">
                                            {{primary_currency.currency_symbol}}
                                        </span>
                                    </div>
                                {% endif %}
                            </div>
                        </div>
                        <div class="form-group col-lg-12">
                            <label>{{'Return package cost'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                            <div class="kt-radio-inline">
                                <label class="kt-radio">
                                    <input type="radio" name="return_defray" class="return_defray" value="1" {% if order.return_defray == 1 %}checked{% endif %} required> {{'Yes'|__}}
                                    <span></span>
                                </label>
                                <label class="kt-radio">
                                    <input type="radio" name="return_defray" class="return_defray" value="2" {% if order.return_defray == 2 %}checked{% endif %}  required> {{'No'|__}}
                                    <span></span>
                                </label>
                            </div>
                        </div>
                        <div class="form-group col-lg-12 {% if order.return_defray != 1 %}kt-hidden{% endif %} package_fee">
                            <label>{{'Package Cost'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                            <div class="input-group">
                                {% if primary_currency.place_symbol_before == 1 %}
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            {{primary_currency.currency_symbol}}
                                        </span>
                                    </div>
                                {% endif %}
                                    <input type="text" class="form-control decimal" data-type='currency' id="package_fee" name="package_fee" value="{{order.package_fee}}" required />
                                {% if primary_currency.place_symbol_before == 0 %}
                                    <div class="input-group-append">
                                        <span class="input-group-text">
                                            {{primary_currency.currency_symbol}}
                                        </span>
                                    </div>
                                {% endif %}
                            </div>
                        </div>
                        <div class="form-group col-lg-12 {% if order.return_defray != 1 %}kt-hidden{% endif %} package_fee">
                            <label>{{'Return Shipment Cost'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                            <div class="input-group">
                                {% if primary_currency.place_symbol_before == 1 %}
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            {{primary_currency.currency_symbol}}
                                        </span>
                                    </div>
                                {% endif %}
                                    <input type="text" class="form-control decimal" data-type='currency' name="return_courier_fee" id="return_courier_fee" value="{% if order.package_fee %}{{order.return_courier_fee}}{% else %}{{settings.fees.delivery_cost_back_receiver}}{% endif %}" required />
                                {% if primary_currency.place_symbol_before == 0 %}
                                    <div class="input-group-append">
                                        <span class="input-group-text">
                                            {{primary_currency.currency_symbol}}
                                        </span>
                                    </div>
                                {% endif %}
                            </div>
                        </div>
                        <div class="form-group col-lg-12 {% if order.return_defray != 1 %}kt-hidden{% endif %} package_fee">
                            <label>{{'Return package fees responsiable'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                            <div class="kt-radio-inline">
                                <label class="kt-radio">
                                    <input type="radio" name="return_package_fee" class="return_package_fee" value="1" {% if order.return_package_fee != 2 %}checked{% endif %} required> {{'Receiver'|__}}
                                    <span></span>
                                </label>
                                <label class="kt-radio">
                                    <input type="radio" name="return_package_fee" class="return_package_fee" value="2" required {% if order.return_package_fee == 2 %}checked{% endif %}> {{'Sender'|__}}
                                    <span></span>
                                </label>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">{{'Close'|__}}</button>
                    <button type="button" class="btn btn-info save">{{'Confirm'|__}}</button>
                    <button type="submit" class="btn btn-primary kt-hidden">{{'Deliver'|__}}</button>
                </div>
            {{ form_close() }}
        </div>
    </div>
</div>
<!--
{% put styles %}
    <style>
        .kt-todo .kt-todo__content {
          width: 100%; }

        .kt-todo .kt-todo__aside {
          padding: 20px;
          width: 275px; }
          @media (min-width: 1025px) {
            .kt-todo .kt-todo__aside {
              margin-right: 25px; } }
          .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item {
            margin-bottom: 0.5rem; }
            .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item .kt-nav__link-title {
              padding-left: 1.9rem;
              font-weight: 600;
              color: #48465b;
              font-size: 1.1rem;
              padding-left: 1.9rem;
              font-weight: 600;
              color: #48465b;
              font-size: 1.1rem; }
            .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item .kt-nav__link {
              padding: 0.6rem 20px;
              border-radius: 4px; }
              .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item .kt-nav__link i {
                color: #8e96b8; }
              .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item .kt-nav__link g [fill] {
                -webkit-transition: fill 0.3s ease;
                transition: fill 0.3s ease;
                fill: #8e96b8; }
              .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item .kt-nav__link:hover g [fill] {
                -webkit-transition: fill 0.3s ease;
                transition: fill 0.3s ease; }
              .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item .kt-nav__link .kt-nav__link-icon {
                text-align: center;
                margin: 0 0.7rem 0 -0.23rem; }
                .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item .kt-nav__link .kt-nav__link-icon.kt-nav__link-icon--size {
                  font-size: 0.9rem;
                  color: #93a2dd; }
                .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item .kt-nav__link .kt-nav__link-icon svg {
                  width: 20px;
                  height: 20px; }
                .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item .kt-nav__link .kt-nav__link-icon g [fill] {
                  fill: #93a2dd; }
              .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item .kt-nav__link .kt-nav__link-text {
                font-weight: 500;
                color: #595d6e; }
            .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item:last-child {
              margin-bottom: 0; }
              .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item:last-child .kt-nav__link .kt-nav__link-icon {
                font-size: 0.9rem; }
            .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.hover .kt-nav__link, .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.kt-nav__item--selected .kt-nav__link, .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.kt-nav__item--active .kt-nav__link {
              background-color: #f7f8fa;
              border-radius: 4px; }
              .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.hover .kt-nav__link i, .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.kt-nav__item--selected .kt-nav__link i, .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.kt-nav__item--active .kt-nav__link i {
                color: #5d78ff; }
              .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.hover .kt-nav__link g [fill], .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.kt-nav__item--selected .kt-nav__link g [fill], .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.kt-nav__item--active .kt-nav__link g [fill] {
                -webkit-transition: fill 0.3s ease;
                transition: fill 0.3s ease;
                fill: #5d78ff; }
              .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.hover .kt-nav__link:hover g [fill], .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.kt-nav__item--selected .kt-nav__link:hover g [fill], .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.kt-nav__item--active .kt-nav__link:hover g [fill] {
                -webkit-transition: fill 0.3s ease;
                transition: fill 0.3s ease; }
              .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.hover .kt-nav__link .kt-nav__link-text, .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.kt-nav__item--selected .kt-nav__link .kt-nav__link-text, .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item.kt-nav__item--active .kt-nav__link .kt-nav__link-text {
                color: #5d78ff; }

        .kt-todo .kt-todo__header {
          padding: 13px 25px;
          display: -webkit-box;
          display: -ms-flexbox;
          display: flex;
          -ms-flex-wrap: wrap;
          flex-wrap: wrap;
          -webkit-box-align: center;
          -ms-flex-align: center;
          align-items: center;
          width: 100%; }
          .kt-todo .kt-todo__header .kt-todo__title {
            margin: 0;
            font-size: 1.4rem;
            padding-right: 2rem;
            font-weight: 600;
            color: #595d6e; }
          .kt-todo .kt-todo__header .kt-todo__nav {
            padding: 0;
            -webkit-box-flex: 1;
            -ms-flex-positive: 1;
            flex-grow: 1;
            margin-top: 0.2rem; }
            .kt-todo .kt-todo__header .kt-todo__nav .btn {
              margin-right: 1rem; }
            .kt-todo .kt-todo__header .kt-todo__nav .kt-todo__link {
              padding: 0.5rem 1.2rem;
              font-weight: 500;
              color: #74788d;
              border-radius: 4px; }
              .kt-todo .kt-todo__header .kt-todo__nav .kt-todo__link:not(:first-child):not(:last-child) {
                margin: 0 0.2rem; }
              .kt-todo .kt-todo__header .kt-todo__nav .kt-todo__link:hover, .kt-todo .kt-todo__header .kt-todo__nav .kt-todo__link.kt-todo__link--selected, .kt-todo .kt-todo__header .kt-todo__nav .kt-todo__link.kt-todo__link--active {
                background-color: #f7f8fa;
                color: #5d78ff;
                border-radius: 4px; }
          .kt-todo .kt-todo__header .kt-todo__users {
            line-height: 0;
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -webkit-box-align: center;
            -ms-flex-align: center;
            align-items: center; }
            .kt-todo .kt-todo__header .kt-todo__users .kt-media {
              position: relative;
              z-index: 0; }
              .kt-todo .kt-todo__header .kt-todo__users .kt-media:not(:first-child):not(:last-child) {
                margin-left: -0.1rem; }
          @media (max-width: 1024px) {
            .kt-todo .kt-todo__header {
              padding: 10px 15px; } }

        .kt-todo .kt-todo__icon {
          border: 0;
          background: none;
          outline: none !important;
          -webkit-box-shadow: none;
          box-shadow: none;
          outline: none !important;
          display: -webkit-box;
          display: -ms-flexbox;
          display: flex;
          -webkit-box-pack: center;
          -ms-flex-pack: center;
          justify-content: center;
          -webkit-box-align: center;
          -ms-flex-align: center;
          align-items: center;
          height: 35px;
          width: 35px;
          background-color: #f7f8fa;
          -webkit-transition: all 0.3s ease;
          transition: all 0.3s ease;
          cursor: pointer;
          margin: 0;
          border-radius: 0;
          border-radius: 4px; }
          .kt-todo .kt-todo__icon i {
            font-size: 1.1rem; }
          .kt-todo .kt-todo__icon.kt-todo__icon--sm {
            height: 26px;
            width: 26px; }
            .kt-todo .kt-todo__icon.kt-todo__icon--sm i {
              font-size: 0.8rem; }
          .kt-todo .kt-todo__icon.kt-todo__icon--md {
            height: 30px;
            width: 30px; }
            .kt-todo .kt-todo__icon.kt-todo__icon--md i {
              font-size: 1rem; }
          .kt-todo .kt-todo__icon.kt-todo__icon--light {
            background-color: transparent; }
          .kt-todo .kt-todo__icon i {
            color: #8e96b8; }
          .kt-todo .kt-todo__icon g [fill] {
            -webkit-transition: fill 0.3s ease;
            transition: fill 0.3s ease;
            fill: #8e96b8; }
          .kt-todo .kt-todo__icon:hover g [fill] {
            -webkit-transition: fill 0.3s ease;
            transition: fill 0.3s ease; }
          .kt-todo .kt-todo__icon.kt-todo__icon--active, .kt-todo .kt-todo__icon:hover {
            -webkit-transition: all 0.3s ease;
            transition: all 0.3s ease;
            background-color: #ebedf2; }
            .kt-todo .kt-todo__icon.kt-todo__icon--active.kt-todo__icon--light, .kt-todo .kt-todo__icon:hover.kt-todo__icon--light {
              background-color: transparent; }
            .kt-todo .kt-todo__icon.kt-todo__icon--active i, .kt-todo .kt-todo__icon:hover i {
              color: #5d78ff; }
            .kt-todo .kt-todo__icon.kt-todo__icon--active g [fill], .kt-todo .kt-todo__icon:hover g [fill] {
              -webkit-transition: fill 0.3s ease;
              transition: fill 0.3s ease;
              fill: #5d78ff; }
            .kt-todo .kt-todo__icon.kt-todo__icon--active:hover g [fill], .kt-todo .kt-todo__icon:hover:hover g [fill] {
              -webkit-transition: fill 0.3s ease;
              transition: fill 0.3s ease; }
          .kt-todo .kt-todo__icon.kt-todo__icon--back {
            background-color: transparent; }
            .kt-todo .kt-todo__icon.kt-todo__icon--back i {
              color: #8e96b8;
              font-size: 1.5rem; }
            .kt-todo .kt-todo__icon.kt-todo__icon--back g [fill] {
              -webkit-transition: fill 0.3s ease;
              transition: fill 0.3s ease;
              fill: #8e96b8; }
            .kt-todo .kt-todo__icon.kt-todo__icon--back:hover g [fill] {
              -webkit-transition: fill 0.3s ease;
              transition: fill 0.3s ease; }
            .kt-todo .kt-todo__icon.kt-todo__icon--back svg {
              height: 32px;
              width: 32px; }
            .kt-todo .kt-todo__icon.kt-todo__icon--back:hover {
              background-color: transparent; }
              .kt-todo .kt-todo__icon.kt-todo__icon--back:hover i {
                color: #5d78ff; }
              .kt-todo .kt-todo__icon.kt-todo__icon--back:hover g [fill] {
                -webkit-transition: fill 0.3s ease;
                transition: fill 0.3s ease;
                fill: #5d78ff; }
              .kt-todo .kt-todo__icon.kt-todo__icon--back:hover:hover g [fill] {
                -webkit-transition: fill 0.3s ease;
                transition: fill 0.3s ease; }

        .kt-todo .kt-todo__list {
          display: -webkit-box !important;
          display: -ms-flexbox !important;
          display: flex !important;
          padding: 0; }
          .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar {
            position: relative;
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -webkit-box-flex: 1;
            -ms-flex-positive: 1;
            flex-grow: 1;
            -webkit-box-align: center;
            -ms-flex-align: center;
            align-items: center;
            -webkit-box-pack: justify;
            -ms-flex-pack: justify;
            justify-content: space-between;
            -ms-flex-wrap: wrap;
            flex-wrap: wrap;
            padding: 0 25px; }
            .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__actions {
              display: -webkit-box;
              display: -ms-flexbox;
              display: flex;
              -webkit-box-align: center;
              -ms-flex-align: center;
              align-items: center;
              margin-right: 1rem; }
              .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__actions .kt-todo__check {
                display: -webkit-box;
                display: -ms-flexbox;
                display: flex;
                -webkit-box-align: center;
                -ms-flex-align: center;
                align-items: center; }
                .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__actions .kt-todo__check .kt-checkbox {
                  margin: 0;
                  padding-left: 0; }
                .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__actions .kt-todo__check .kt-todo__icon {
                  margin-left: 0; }
              .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__actions .kt-todo__panel {
                display: none;
                -ms-flex-wrap: wrap;
                flex-wrap: wrap; }
              .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__actions .btn {
                padding: 0.6rem 1rem; }
              .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__actions.kt-todo__actions--expanded .kt-todo__panel {
                display: -webkit-box;
                display: -ms-flexbox;
                display: flex; }
              .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__actions .kt-todo__icon {
                margin-right: 0.5rem; }
                .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__actions .kt-todo__icon.kt-todo__icon--back {
                  margin-right: 2.5rem; }
            .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__controls {
              display: -webkit-box;
              display: -ms-flexbox;
              display: flex;
              -webkit-box-align: center;
              -ms-flex-align: center;
              align-items: center;
              margin: 0.4rem 0; }
              .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__controls .kt-todo__icon {
                margin-left: 0.5rem; }
              .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__controls .kt-todo__sort {
                margin-left: 0.5rem; }
              .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__controls .kt-todo__pages .kt-todo__perpage {
                color: #74788d;
                font-size: 1rem;
                font-weight: 500;
                margin-right: 1rem;
                cursor: pointer;
                -webkit-transition: all 0.3s ease;
                transition: all 0.3s ease;
                padding: 0.5rem 0; }
                .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__controls .kt-todo__pages .kt-todo__perpage:hover {
                  -webkit-transition: all 0.3s ease;
                  transition: all 0.3s ease;
                  color: #5d78ff; }
            .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar .kt-todo__sep {
              display: -webkit-box;
              display: -ms-flexbox;
              display: flex;
              height: 1rem;
              width: 1rem; }
          .kt-todo .kt-todo__list .kt-todo__body {
            padding: 20px 0 0 0; }
            .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items {
              padding: 0;
              margin-bottom: 15px; }
              .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item {
                display: -webkit-box;
                display: -ms-flexbox;
                display: flex;
                -webkit-box-align: start;
                -ms-flex-align: start;
                align-items: flex-start;
                padding: 12px 25px;
                -webkit-transition: all 0.3s ease;
                transition: all 0.3s ease;
                cursor: pointer; }
                .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info {
                  display: -webkit-box;
                  display: -ms-flexbox;
                  display: flex; }
                  @media screen\0 {
                    .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info {
                      padding: 8px 0; } }
                  @media screen\0 {
                    .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info {
                      min-width: 210px; } }
                  .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__actions {
                    display: -webkit-box;
                    display: -ms-flexbox;
                    display: flex;
                    margin: 0.3rem 10px 0 0;
                    -webkit-box-align: center;
                    -ms-flex-align: center;
                    align-items: center; }
                    @media screen\0 {
                      .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__actions {
                        min-width: 70px; } }
                    .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__actions .kt-checkbox {
                      margin: 0;
                      padding: 0;
                      margin-right: 10px; }
                    .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__actions .kt-todo__icon {
                      height: 22px;
                      width: 22px; }
                      .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__actions .kt-todo__icon i {
                        font-size: 1rem;
                        color: #ebedf2; }
                      .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__actions .kt-todo__icon:hover i {
                        color: rgba(255, 184, 34, 0.5) !important; }
                      .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__actions .kt-todo__icon.kt-todo__icon--on i {
                        color: #ffb822 !important; }
                  .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__sender {
                    display: -webkit-box;
                    display: -ms-flexbox;
                    display: flex;
                    -webkit-box-align: center;
                    -ms-flex-align: center;
                    align-items: center;
                    margin-right: 30px;
                    width: 175px; }
                    @media screen\0 {
                      .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__sender {
                        min-width: 175px; } }
                    .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__sender .kt-media {
                      margin-right: 10px;
                      min-width: 30px !important; }
                      .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__sender .kt-media span {
                        min-width: 30px !important; }
                    .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__sender .kt-todo__author {
                      font-size: 1rem;
                      color: #595d6e;
                      font-weight: 500; }
                    @media (max-width: 1400px) {
                      .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__sender {
                        display: block;
                        width: 70px;
                        margin-right: 10px; }
                        .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__sender .kt-todo__author {
                          display: block; }
                        .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__info .kt-todo__sender .kt-media {
                          margin-bottom: 5px; } }
                .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__details {
                  -webkit-box-flex: 1;
                  -ms-flex-positive: 1;
                  flex-grow: 1;
                  margin-top: 5px; }
                  @media screen\0 {
                    .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__details {
                      width: 0;
                      height: 0; } }
                  .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__details .kt-todo__message .kt-todo__subject {
                    font-size: 1rem;
                    color: #595d6e;
                    font-weight: 500; }
                  .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__details .kt-todo__message .kt-todo__summary {
                    font-size: 1rem;
                    color: #a2a5b9;
                    font-weight: 400;
                    text-overflow: ellipsis; }
                  .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__details .kt-todo__labels {
                    display: -webkit-box;
                    display: -ms-flexbox;
                    display: flex;
                    margin-top: 5px; }
                    .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__details .kt-todo__labels .kt-todo__label {
                      margin-right: 5px; }
                .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__datetime {
                  font-size: 1rem;
                  color: #a2a5b9;
                  font-weight: 400;
                  margin-right: 1rem;
                  margin-top: 5px;
                  width: 85px;
                  text-align: right; }
                  @media (max-width: 1400px) {
                    .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item .kt-todo__datetime {
                      width: 70px; } }
                .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item:hover, .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item.kt-todo__item--selected {
                  -webkit-transition: all 0.3s ease;
                  transition: all 0.3s ease;
                  background-color: #f7f8fa; }
                  .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item:hover .kt-todo__info .kt-todo__actions .kt-todo__icon i, .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item.kt-todo__item--selected .kt-todo__info .kt-todo__actions .kt-todo__icon i {
                    font-size: 1rem;
                    color: #e2e5ec; }
                .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item.kt-todo__item--unread .kt-todo__sender .kt-todo__author {
                  color: #48465b;
                  font-weight: 600; }
                .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item.kt-todo__item--unread .kt-todo__details .kt-todo__message .kt-todo__subject {
                  color: #595d6e;
                  font-weight: 600; }
                .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item.kt-todo__item--unread .kt-todo__datetime {
                  color: #48465b;
                  font-weight: 600; }
          .kt-todo .kt-todo__list .kt-todo__foot {
            margin-top: 10px;
            padding: 0 25px; }
            .kt-todo .kt-todo__list .kt-todo__foot .kt-todo__toolbar {
              float: right; }
              .kt-todo .kt-todo__list .kt-todo__foot .kt-todo__toolbar .kt-todo__controls {
                display: -webkit-box;
                display: -ms-flexbox;
                display: flex;
                -webkit-box-align: center;
                -ms-flex-align: center;
                align-items: center;
                margin-left: 1rem; }
                .kt-todo .kt-todo__list .kt-todo__foot .kt-todo__toolbar .kt-todo__controls .kt-todo__icon {
                  margin-left: 0.5rem; }
                .kt-todo .kt-todo__list .kt-todo__foot .kt-todo__toolbar .kt-todo__controls .kt-todo__sort {
                  margin-left: 0.5rem; }
                .kt-todo .kt-todo__list .kt-todo__foot .kt-todo__toolbar .kt-todo__controls .kt-todo__pages {
                  margin-left: 0.5rem; }
                  .kt-todo .kt-todo__list .kt-todo__foot .kt-todo__toolbar .kt-todo__controls .kt-todo__pages .kt-todo__perpage {
                    color: #74788d;
                    font-size: 1rem;
                    font-weight: 500;
                    margin-right: 1rem;
                    cursor: pointer;
                    -webkit-transition: all 0.3s ease;
                    transition: all 0.3s ease;
                    padding: 0.5rem 0; }
                    .kt-todo .kt-todo__list .kt-todo__foot .kt-todo__toolbar .kt-todo__controls .kt-todo__pages .kt-todo__perpage:hover {
                      -webkit-transition: all 0.3s ease;
                      transition: all 0.3s ease;
                      color: #5d78ff; }

        .kt-todo .kt-todo__view {
          padding: 0;
          display: -webkit-box !important;
          display: -ms-flexbox !important;
          display: flex !important; }
          .kt-todo  {
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -webkit-box-pack: justify;
            -ms-flex-pack: justify;
            justify-content: space-between;
            -webkit-box-orient: vertical;
            -webkit-box-direction: normal;
            -ms-flex-direction: column;
            flex-direction: column;
            height: 100%;
            padding-bottom: 25px; }
            @media (max-width: 1024px) {
              .kt-todo  {
                padding-bottom: 15px; } }
            .kt-todo  .kt-todo__head {
              width: 100%; }
              .kt-todo  .kt-todo__head .kt-todo__toolbar {
                cursor: pointer;
                padding-top: 0.9rem;
                width: 100%;
                display: -webkit-box;
                display: -ms-flexbox;
                display: flex;
                -ms-flex-wrap: wrap;
                flex-wrap: wrap; }
                .kt-todo  .kt-todo__head .kt-todo__toolbar .kt-todo__icon.kt-todo__icon--back {
                  display: none; }
                .kt-todo  .kt-todo__head .kt-todo__toolbar .kt-todo__info {
                  display: -webkit-box;
                  display: -ms-flexbox;
                  display: flex;
                  -webkit-box-align: center;
                  -ms-flex-align: center;
                  align-items: center;
                  -webkit-box-flex: 1;
                  -ms-flex-positive: 1;
                  flex-grow: 1; }
                  .kt-todo  .kt-todo__head .kt-todo__toolbar .kt-todo__info .kt-media {
                    margin-right: 0.7rem; }
                  .kt-todo  .kt-todo__head .kt-todo__toolbar .kt-todo__info .kt-todo__name {
                    color: #48465b;
                    font-weight: 600;
                    font-size: 1.1rem;
                    padding-right: 0.5rem; }
                    .kt-todo  .kt-todo__head .kt-todo__toolbar .kt-todo__info .kt-todo__name:hover {
                      color: #5d78ff;
                      -webkit-transition: all 0.3s ease;
                      transition: all 0.3s ease; }
                .kt-todo  .kt-todo__head .kt-todo__toolbar .kt-todo__details {
                  display: -webkit-box;
                  display: -ms-flexbox;
                  display: flex;
                  -webkit-box-align: center;
                  -ms-flex-align: center;
                  align-items: center;
                  -ms-flex-wrap: wrap;
                  flex-wrap: wrap;
                  padding: 0.5rem 0; }
                  .kt-todo  .kt-todo__head .kt-todo__toolbar .kt-todo__details .kt-todo__icon {
                    margin: 0.4rem 0.5rem 0.4rem 0;
                    font-size: 0.7rem;
                    color: #5d78ff; }
                  .kt-todo  .kt-todo__head .kt-todo__toolbar .kt-todo__details .kt-todo__desc {
                    color: #74788d;
                    font-weight: 400;
                    font-size: 1rem; }
                  .kt-todo  .kt-todo__head .kt-todo__toolbar .kt-todo__details .btn {
                    padding: 8px 1rem; }
                    .kt-todo  .kt-todo__head .kt-todo__toolbar .kt-todo__details .btn:last-child {
                      margin-left: 0.5rem; }
                .kt-todo  .kt-todo__head .kt-todo__toolbar .kt-todo__actions {
                  display: -webkit-box;
                  display: -ms-flexbox;
                  display: flex;
                  -webkit-box-align: center;
                  -ms-flex-align: center;
                  align-items: center; }
                  .kt-todo  .kt-todo__head .kt-todo__toolbar .kt-todo__actions .kt-todo__datetime {
                    color: #a2a5b9;
                    font-weight: 500;
                    font-size: 1rem;
                    margin-right: 1.5rem; }
            .kt-todo  .kt-todo__body {
              padding-bottom: 25px;
              -webkit-box-flex: 1;
              -ms-flex-positive: 1;
              flex-grow: 1; }
              .kt-todo  .kt-todo__body .kt-todo__title {
                padding-top: 1rem; }
                .kt-todo  .kt-todo__body .kt-todo__title .kt-todo__text {
                  color: #48465b;
                  font-size: 1.5rem;
                  font-weight: 600;
                  margin-top: 1rem;
                  display: block; }
                .kt-todo  .kt-todo__body .kt-todo__title .kt-todo__labels {
                  display: -webkit-box;
                  display: -ms-flexbox;
                  display: flex;
                  -webkit-box-align: center;
                  -ms-flex-align: center;
                  align-items: center;
                  padding: 0.8rem 0 2rem 0; }
                  .kt-todo  .kt-todo__body .kt-todo__title .kt-todo__labels .kt-todo__label {
                    display: -webkit-box;
                    display: -ms-flexbox;
                    display: flex;
                    -webkit-box-align: center;
                    -ms-flex-align: center;
                    align-items: center; }
                    .kt-todo  .kt-todo__body .kt-todo__title .kt-todo__labels .kt-todo__label .kt-todo__dot {
                      padding-right: 0.5rem;
                      font-size: 1.2rem; }
                    .kt-todo  .kt-todo__body .kt-todo__title .kt-todo__labels .kt-todo__label .kt-todo__text {
                      color: #a2a5b9;
                      font-weight: 500;
                      font-size: 1rem;
                      margin: 0; }
                    .kt-todo  .kt-todo__body .kt-todo__title .kt-todo__labels .kt-todo__label:last-child {
                      padding-left: 1.5rem; }
                .kt-todo  .kt-todo__body .kt-todo__title:hover {
                  color: #5d78ff;
                  -webkit-transition: all 0.3s ease;
                  transition: all 0.3s ease; }
              .kt-todo  .kt-todo__body .kt-todo__desc {
                padding-bottom: 10px;
                display: block;
                color: #a2a5b9;
                font-weight: 500; }
              .kt-todo  .kt-todo__body .kt-todo__files {
                padding-top: 10px; }
                .kt-todo  .kt-todo__body .kt-todo__files .kt-todo__file {
                  display: block;
                  padding-top: 0.7rem; }
                  .kt-todo  .kt-todo__body .kt-todo__files .kt-todo__file i {
                    padding-right: 0.5rem; }
                  .kt-todo  .kt-todo__body .kt-todo__files .kt-todo__file a {
                    color: #74788d;
                    font-weight: 500; }
                    .kt-todo  .kt-todo__body .kt-todo__files .kt-todo__file a:hover {
                      color: #5d78ff;
                      -webkit-transition: all 0.3s ease;
                      transition: all 0.3s ease; }
              .kt-todo  .kt-todo__body .kt-todo__comments {
                padding-bottom: 20px; }
                .kt-todo  .kt-todo__body .kt-todo__comments .kt-todo__comment {
                  padding-top: 3rem; }
                  .kt-todo  .kt-todo__body .kt-todo__comments .kt-todo__comment:last-child {
                    padding-top: 2rem; }
                  .kt-todo  .kt-todo__body .kt-todo__comments .kt-todo__comment .kt-todo__box {
                    display: -webkit-box;
                    display: -ms-flexbox;
                    display: flex;
                    -webkit-box-align: center;
                    -ms-flex-align: center;
                    align-items: center; }
                    .kt-todo  .kt-todo__body .kt-todo__comments .kt-todo__comment .kt-todo__box .kt-media {
                      margin-right: 1rem; }
                    .kt-todo  .kt-todo__body .kt-todo__comments .kt-todo__comment .kt-todo__box .kt-todo__username {
                      -webkit-box-flex: 1;
                      -ms-flex-positive: 1;
                      flex-grow: 1;
                      color: #595d6e;
                      font-weight: 500; }
                      .kt-todo  .kt-todo__body .kt-todo__comments .kt-todo__comment .kt-todo__box .kt-todo__username:hover {
                        color: #5d78ff;
                        -webkit-transition: all 0.3s ease;
                        transition: all 0.3s ease; }
                    .kt-todo  .kt-todo__body .kt-todo__comments .kt-todo__comment .kt-todo__box .kt-todo__date {
                      color: #a2a5b9;
                      font-weight: 500; }
                  .kt-todo  .kt-todo__body .kt-todo__comments .kt-todo__comment .kt-todo__text {
                    padding-left: 3.3rem;
                    display: block;
                    color: #a2a5b9;
                    font-weight: 500; }
            .kt-todo  .kt-todo__foot .kt-todo__form {
              margin-top: 20px;
              display: -webkit-box;
              display: -ms-flexbox;
              display: flex;
              -webkit-box-orient: vertical;
              -webkit-box-direction: normal;
              -ms-flex-direction: column;
              flex-direction: column;
              border: 1px solid #ebedf2;
              border-radius: 4px; }
              .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__head {
                display: -webkit-box;
                display: -ms-flexbox;
                display: flex;
                -ms-flex-wrap: wrap;
                flex-wrap: wrap;
                -webkit-box-align: center;
                -ms-flex-align: center;
                align-items: center;
                -webkit-box-pack: justify;
                -ms-flex-pack: justify;
                justify-content: space-between;
                padding: 20px 15px 20px 25px;
                border-bottom: 1px solid #ebedf2; }
                .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__head .kt-todo__title {
                  margin-right: 10px;
                  font-size: 1.2rem;
                  font-weight: 500;
                  color: #595d6e; }
                .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__head .kt-todo__actions {
                  display: -webkit-box;
                  display: -ms-flexbox;
                  display: flex; }
                  .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__head .kt-todo__actions .kt-todo__icon {
                    margin-left: 5px; }
              .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__body {
                padding: 0 0 10px 0; }
                .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__body .ql-container.ql-snow {
                  border: 0;
                  padding: 0;
                  border-radius: 0; }
                  .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__body .ql-container.ql-snow .ql-editor {
                    font-weight: 400;
                    font-size: 1rem;
                    color: #74788d;
                    padding: 15px 25px;
                    font-family: Poppins, Helvetica, sans-serif; }
                    .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__body .ql-container.ql-snow .ql-editor.ql-blank:before {
                      left: 25px;
                      color: #a2a5b9;
                      font-weight: 400;
                      font-style: normal; }
                .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__body .ql-toolbar.ql-snow {
                  display: -webkit-box;
                  display: -ms-flexbox;
                  display: flex;
                  height: 50px;
                  -webkit-box-align: center;
                  -ms-flex-align: center;
                  align-items: center;
                  border-radius: 0;
                  border: 0;
                  border-top: 0;
                  border-bottom: 1px solid #ebedf2;
                  padding-left: 18px; }
                  .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__body .ql-toolbar.ql-snow .ql-picker-label, .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__body .ql-toolbar.ql-snow .ql-picker-label:before {
                    font-weight: 400;
                    font-size: 1rem;
                    color: #74788d;
                    font-family: Poppins, Helvetica, sans-serif; }
                .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__body .kt-todo__attachments {
                  display: inline-block;
                  padding: 0 25px; }
                  @media (max-width: 1024px) {
                    .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__body .kt-todo__attachments {
                      width: 100%; } }
              .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__foot {
                display: -webkit-box;
                display: -ms-flexbox;
                display: flex;
                -ms-flex-wrap: wrap;
                flex-wrap: wrap;
                -webkit-box-align: center;
                -ms-flex-align: center;
                align-items: center;
                width: 100%;
                padding: 20px 15px 20px 25px; }
                .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__foot .kt-todo__primary {
                  display: -webkit-box;
                  display: -ms-flexbox;
                  display: flex;
                  -webkit-box-flex: 1;
                  -ms-flex-positive: 1;
                  flex-grow: 1;
                  -webkit-box-align: center;
                  -ms-flex-align: center;
                  align-items: center; }
                  .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__foot .kt-todo__primary .btn-group .btn:nth-child(1) {
                    padding-left: 20px;
                    padding-right: 20px; }
                  .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__foot .kt-todo__primary .btn-group .btn:nth-child(2) {
                    padding-left: 6px;
                    padding-right: 9px; }
                  .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__foot .kt-todo__primary .kt-todo__panel {
                    display: -webkit-box;
                    display: -ms-flexbox;
                    display: flex;
                    -webkit-box-align: center;
                    -ms-flex-align: center;
                    align-items: center;
                    margin-left: 1rem; }
                .kt-todo  .kt-todo__foot .kt-todo__form .kt-todo__foot .kt-todo__secondary {
                  display: -webkit-box;
                  display: -ms-flexbox;
                  display: flex;
                  -webkit-box-align: center;
                  -ms-flex-align: center;
                  align-items: center;
                  margin: 0; }

        .kt-todo .kt-portlet__head {
          min-height: 80px !important;
          padding: 10px 25px; }

        @media (max-width: 1024px) {
          .kt-todo {
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -ms-flex-wrap: wrap;
            flex-wrap: wrap;
            padding: 0; }
            .kt-todo .kt-todo__aside {
              background: #fff;
              margin: 0; }
              .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item .kt-nav__link-title {
                padding-left: 1.2rem; }
              .kt-todo .kt-todo__aside .kt-todo__nav .kt-nav .kt-nav__item .kt-nav__link {
                padding: 0.75rem 10px; }
            .kt-todo .kt-todo__list {
              display: -webkit-box;
              display: -ms-flexbox;
              display: flex; }
              .kt-todo .kt-todo__list.kt-todo__list--hidden {
                display: none; }
              .kt-todo .kt-todo__list .kt-portlet__head {
                min-height: 60px !important;
                padding: 10px 15px; }
              .kt-todo .kt-todo__list .kt-todo__head {
                padding: 0; }
                .kt-todo .kt-todo__list .kt-todo__head .kt-todo__toolbar {
                  padding: 10px 15px; }
              .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items {
                overflow: auto;
                margin-bottom: 15px; }
                .kt-todo .kt-todo__list .kt-todo__body .kt-todo__items .kt-todo__item {
                  min-width: 500px;
                  padding: 10px 15px; }
              .kt-todo .kt-todo__list .kt-todo__foot {
                padding: 0 15px; }
            .kt-todo .kt-todo__view {
              display: none; }
              .kt-todo .kt-todo__view .kt-todo__head .kt-todo__toolbar .kt-todo__icon.kt-todo__icon--back {
                display: -webkit-box;
                display: -ms-flexbox;
                display: flex; }
              .kt-todo .kt-todo__view.kt-todo__view--shown {
                display: -webkit-box;
                display: -ms-flexbox;
                display: flex; }
            .kt-todo .kt-portlet__head {
              min-height: 60px !important;
              padding: 10px 15px; } }

        @media (max-width: 768px) {
          .kt-todo .kt-todo__head .kt-todo__nav .btn {
            margin-right: 0.2rem; } }

        .kt-todo__aside-close {
          display: none; }

        @media (max-width: 1024px) {
          .kt-todo__aside {
            z-index: 1001;
            position: fixed;
            -webkit-overflow-scrolling: touch;
            top: 0;
            bottom: 0;
            overflow-y: auto;
            -webkit-transform: translate3d(0, 0, 0);
            backface-visibility: hidden;
            -webkit-backface-visibility: hidden;
            width: 300px !important;
            -webkit-transition: left 0.3s ease, right 0.3s ease;
            transition: left 0.3s ease, right 0.3s ease;
            left: -320px; }
            .kt-todo__aside.kt-todo__aside--on {
              -webkit-transition: left 0.3s ease, right 0.3s ease;
              transition: left 0.3s ease, right 0.3s ease;
              left: 0; } }
          @media screen\0  and (max-width: 1024px) {
            .kt-todo__aside {
              -webkit-transition: none !important;
              transition: none !important; } }

        @media (max-width: 1024px) {
          .kt-todo__aside--right .kt-todo__aside {
            right: -320px;
            left: auto; }
            .kt-todo__aside--right .kt-todo__aside.kt-todo__aside--on {
              -webkit-transition: left 0.3s ease, right 0.3s ease;
              transition: left 0.3s ease, right 0.3s ease;
              right: 0;
              left: auto; }
          .kt-todo__aside-close {
            width: 25px;
            height: 25px;
            top: 1px;
            z-index: 1002;
            -webkit-transition: left 0.3s ease, right 0.3s ease;
            transition: left 0.3s ease, right 0.3s ease;
            position: fixed;
            border: 0;
            -webkit-box-shadow: none;
            box-shadow: none;
            border-radius: 3px;
            cursor: pointer;
            outline: none !important;
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -webkit-box-pack: center;
            -ms-flex-pack: center;
            justify-content: center;
            -webkit-box-align: center;
            -ms-flex-align: center;
            align-items: center;
            left: -25px; } }
          @media screen\0  and (max-width: 1024px) {
            .kt-todo__aside-close {
              -webkit-transition: none !important;
              transition: none !important; } }

        @media (max-width: 1024px) {
            .kt-todo__aside-close > i {
              line-height: 0;
              font-size: 1.4rem; }
            .kt-todo__aside-close:hover {
              text-decoration: none; }
            .kt-todo__aside--right .kt-todo__aside-close {
              left: auto;
              right: -25px; }
            .kt-todo__aside--on .kt-todo__aside-close {
              -webkit-transition: left 0.3s ease, right 0.3s ease;
              transition: left 0.3s ease, right 0.3s ease;
              left: 274px; }
            .kt-todo__aside--on.kt-todo__aside--right .kt-todo__aside-close {
              left: auto;
              right: 274px; }
          .kt-todo__aside-overlay {
            position: fixed;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            overflow: hidden;
            z-index: 1000;
            background: rgba(0, 0, 0, 0.1);
            -webkit-animation: kt-animate-fade-in .3s linear 1;
            animation: kt-animate-fade-in .3s linear 1; }
          .kt-todo__aside-overlay {
            background: rgba(0, 0, 0, 0.05); }
          .kt-todo__aside-close {
            background-color: #f7f8fa; }
            .kt-todo__aside-close > i {
              color: #74788d; }
            .kt-todo__aside-close:hover {
              background-color: transparent; }
              .kt-todo__aside-close:hover > i {
                color: #5d78ff; } }

        @media (max-width: 350px) {
          .kt-todo__aside {
            width: 90% !important; } }
    </style>
{% endput %}
-->
{% put styles %}
    <style>
        .table-bordered tr td:first-child {
            width: 200px;
            font-weight: bold;
        }
        .map_canvas {
          height: 350px;
        }
        .filter-option-inner br {
            display: none;
        }
        .select2 {
            width: 100% !important;
        }
		.select2-selection {
			min-height: 36px !important;
		}
        .pac-container {
            z-index: 9999;
        }
        @media (max-width: 576px) {
            .kt-widget.kt-widget--user-profile-3 .kt-widget__top .kt-widget__content .kt-widget__info .kt-widget__stats .kt-widget__item {
                width: 100%;
                margin: auto 0 !important;
            }
        }
        .notes_scroll,.notes_scroll .btn {
            cursor: pointer;
        }
    </style>
{% endput %}
{% put scripts %}
<script src="{{ 'assets/admin/vendors/custom/geocomplete/jquery.geocomplete.js'|theme }}" type="text/javascript"></script>
<script src="https://maps.googleapis.com/maps/api/js?libraries=places&key={{settings.google.map.key}}"></script>
<script src="./admin/vendors/custom/gmaps/gmaps.js" type="text/javascript"></script>
<script type="text/javascript">
"use strict";
{% if settings.payment.enable == 1 %}
    {% if 'paystack' in settings.payment.gateways %}
        function payWithPaystack(){
            {% if paystack_amount %}
                var handler = PaystackPop.setup({
                    key: '{{settings.payment.paystack_key}}',
                    email: '{{user.email}}',
                    amount: {{paystack_amount*100}},
                    //amount: "{{sender_fees}}",
                    //currency: "{{primary_currency.currency_code}}",
                    currency: "GHS",
                    ref: '{{ 'now'|date('U') }}_{{order.number}}_{{order.id}}', // generates a pseudo-unique reference. Please replace with a reference you generated. Or remove the line entirely so our API will generate one for you
                    metadata: {
                        custom_fields: [
                            {
                                display_name: "Tracking Number",
                                variable_name: "number",
                                value: "{{order.number}}"
                            }
                        ]
                    },
                    callback: function(response){

                         $.request('onCheckpaystack', {
                              data: {reference: response.reference},
                              success: function(response, status, xhr, $form) {

                                  swal.fire({
                                      title: '{{"Thank you!"|__}}',
                                      text: '{{"Your payment is successfully paid! You will be redirect rightnow, please wait"|__}}',
                                      type: 'success',
                                      buttonsStyling: false,
                                      confirmButtonText: '{{"OK"|__}}',
                                      confirmButtonClass: "btn btn-sm btn-bold btn-brand",
                                  });
                                  //window.location.reload();
                              }
                         });
                    },
                    onClose: function(){
                        swal.fire({
                            title: '{{"Closed!"|__}}',
                            text: '{{"You did not pay the requested payment! :("|__}}',
                            type: 'warning',
                            buttonsStyling: false,
                            confirmButtonText: '{{"OK"|__}}',
                            confirmButtonClass: "btn btn-sm btn-bold btn-brand",
                        });
                    }
                });
                handler.openIframe();
            {% endif %}
        }
    {% endif %}
{% endif %}
var KTDashboard = function () {

    // Order Statistics.
    // Based on Chartjs plugin - http://www.chartjs.org/
    var orderStatistics = function() {
        var container = KTUtil.getByID('kt_chart_order_statistics');

        if (!container) {
            return;
        }

        var MONTHS = ['1 Jan', '2 Jan', '3 Jan', '4 Jan', '5 Jan', '6 Jan', '7 Jan'];

        var color = Chart.helpers.color;
        var barChartData = {
            labels: ['1 Jan', '2 Jan', '3 Jan', '4 Jan', '5 Jan', '6 Jan', '7 Jan'],
            datasets : [
				{
                    fill: true,
                    //borderWidth: 0,
                    backgroundColor: color(KTApp.getStateColor('brand')).alpha(0.6).rgbString(),
                    borderColor : color(KTApp.getStateColor('brand')).alpha(0).rgbString(),

                    pointHoverRadius: 4,
                    pointHoverBorderWidth: 12,
                    pointBackgroundColor: Chart.helpers.color('#000000').alpha(0).rgbString(),
                    pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),
                    pointHoverBackgroundColor: KTApp.getStateColor('brand'),
                    pointHoverBorderColor: Chart.helpers.color('#000000').alpha(0.1).rgbString(),

					data: [20, 30, 20, 40, 30, 60, 30]
				},
				{
                    fill: true,
                    //borderWidth: 0,
					backgroundColor : color(KTApp.getStateColor('brand')).alpha(0.2).rgbString(),
                    borderColor : color(KTApp.getStateColor('brand')).alpha(0).rgbString(),

                    pointHoverRadius: 4,
                    pointHoverBorderWidth: 12,
                    pointBackgroundColor: Chart.helpers.color('#000000').alpha(0).rgbString(),
                    pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),
                    pointHoverBackgroundColor: KTApp.getStateColor('brand'),
                    pointHoverBorderColor: Chart.helpers.color('#000000').alpha(0.1).rgbString(),

					data: [15, 40, 15, 30, 40, 30, 50]
				}
            ]
        };

        var ctx = container.getContext('2d');
        var chart = new Chart(ctx, {
            type: 'line',
            data: barChartData,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: false,
                scales: {
                    xAxes: [{
                        categoryPercentage: 0.35,
                        barPercentage: 0.70,
                        display: true,
                        scaleLabel: {
                            display: false,
                            labelString: 'Month'
                        },
                        gridLines: false,
                        ticks: {
                            display: true,
                            beginAtZero: true,
                            fontColor: KTApp.getBaseColor('shape', 3),
                            fontSize: 13,
                            padding: 10
                        }
                    }],
                    yAxes: [{
                        categoryPercentage: 0.35,
                        barPercentage: 0.70,
                        display: true,
                        scaleLabel: {
                            display: false,
                            labelString: 'Value'
                        },
                        gridLines: {
                            color: KTApp.getBaseColor('shape', 2),
                            drawBorder: false,
                            offsetGridLines: false,
                            drawTicks: false,
                            borderDash: [3, 4],
                            zeroLineWidth: 1,
                            zeroLineColor: KTApp.getBaseColor('shape', 2),
                            zeroLineBorderDash: [3, 4]
                        },
                        ticks: {
                            max: 70,
                            stepSize: 10,
                            display: true,
                            beginAtZero: true,
                            fontColor: KTApp.getBaseColor('shape', 3),
                            fontSize: 13,
                            padding: 10
                        }
                    }]
                },
                title: {
                    display: false
                },
                hover: {
                    mode: 'index'
                },
                tooltips: {
                    enabled: true,
                    intersect: false,
                    mode: 'nearest',
                    bodySpacing: 5,
                    yPadding: 10,
                    xPadding: 10,
                    caretPadding: 0,
                    displayColors: false,
                    backgroundColor: KTApp.getStateColor('brand'),
                    titleFontColor: '#ffffff',
                    cornerRadius: 4,
                    footerSpacing: 0,
                    titleSpacing: 0
                },
                layout: {
                    padding: {
                        left: 0,
                        right: 0,
                        top: 5,
                        bottom: 5
                    }
                }
            }
        });
    };
    var latestTrendsMap = function() {
        if ($('#kt_map_sender').length == 0) {
            return;
        }
        {% if order.sender_address.lat %}
        try {
            var map = new GMaps({
                div: '#kt_map_sender',
                lat: {{order.sender_address.lat}},
                lng: {{order.sender_address.lng}}
            });
            map.addMarker({
                lat: {{order.sender_address.lat}},
                lng: {{order.sender_address.lng}},
                title: '{{order.sender_address.name}}',
                infoWindow: {
                    content: '<p>{{"Go to"|__}} <a href="{{order.sender_address.url}}" target="_blank">{{order.sender_address.name}}</a></p>'
                }
            });
        } catch (e) {
            console.log(e);
        }

        {% endif %}
        if ($('#kt_map_receiver').length == 0) {
            return;
        }
        {% if order.receiver_address.lat %}
            try {
                var map = new GMaps({
                    div: '#kt_map_receiver',
                    lat: {{order.receiver_address.lat}},
                    lng: {{order.receiver_address.lng}}
                });
                map.addMarker({
                    lat: {{order.receiver_address.lat}},
                    lng: {{order.receiver_address.lng}},
                    title: '{{order.receiver_address.name}}',
                    infoWindow: {
                        content: '<p>{{"Go to"|__}} <a href="{{order.receiver_address.url}}" target="_blank">{{order.receiver_address.name}}</a></p>'
                    }
                });
            } catch (e) {
                console.log(e);
            }
        {% endif %}
    }
    return {
        // public functions
        init: function () {
            orderStatistics();
            latestTrendsMap();
        },
    };
}();

KTUtil.ready(function () {
    KTDashboard.init();

    $('.notes_scroll').on('click', function(e){
        $([document.documentElement, document.body]).animate({
            scrollTop: $("#notes_continer").offset().top-60
        }, 2000);
    });
    $('#assign_employee').on('click', '.btn-primary', function(e){
        var parent = $('#assign_employee');
        var validation = 1;
        parent.find('input,select').each(function(){
            if($(this).is(':hidden')){
                return;
            }
            if($(this).valid() == false){
                validation = 0;
            }
        });
        if(validation){
            $('#assign_employee').modal('toggle');
            KTApp.blockPage({
                overlayColor: '#000000',
                type: 'v2',
                state: 'success',
                message: '{{"Please wait"|__}}...'
            });
        }
    });
    $('#assign_manifest').on('click', '.btn-primary', function(e){
        var parent = $('#assign_manifest');
        var validation = 1;
        parent.find('input,select').each(function(){
            if($(this).is(':hidden')){
                return;
            }
            if($(this).valid() == false){
                validation = 0;
            }
        });
        if(validation){
            $('#assign_manifest').modal('toggle');
            KTApp.blockPage({
                overlayColor: '#000000',
                type: 'v2',
                state: 'success',
                message: '{{"Please wait"|__}}...'
            });
        }
    });
    $('#transfer_office').on('click', '.btn-primary', function(e){
        var parent = $('#assign_employee');
        var validation = 1;
        parent.find('input,select').each(function(){
            if($(this).is(':hidden')){
                return;
            }
            if($(this).valid() == false){
                validation = 0;
            }
        });
        if(validation){
            $('#transfer_office').modal('toggle');
            KTApp.blockPage({
                overlayColor: '#000000',
                type: 'v2',
                state: 'success',
                message: '{{"Please wait"|__}}...'
            });
        }
    });
    $('#refuse').on('click', '.btn-primary', function(e){
        var parent = $('#refuse');
        var validation = 1;
        parent.find('input,select').each(function(){
            if($(this).is(':hidden')){
                return;
            }
            if($(this).valid() == false){
                validation = 0;
            }
        });
        if(validation){
            $('#refuse').modal('toggle');
            KTApp.blockPage({
                overlayColor: '#000000',
                type: 'v2',
                state: 'success',
                message: '{{"Please wait"|__}}...'
            });
        }
    });
    $('#discards').on('click', '.btn-primary', function(e){
        var parent = $('#discards');
        var validation = 1;
        parent.find('input,select').each(function(){
            if($(this).is(':hidden')){
                return;
            }
            if($(this).valid() == false){
                validation = 0;
            }
        });
        if(validation){
            $('#discards').modal('toggle');
            KTApp.blockPage({
                overlayColor: '#000000',
                type: 'v2',
                state: 'success',
                message: '{{"Please wait"|__}}...'
            });
        }
    });
    $('#return_discards').on('click', function(e){
        e.preventDefault();
        KTApp.blockPage({
            overlayColor: '#000000',
            type: 'v2',
            state: 'success',
            message: '{{"Please wait"|__}}...'
        });
        $.request('onDiscards', {
            success: function(data) {
                KTApp.unblockPage();
                window.location.href = "{{url('dashboard/shipments')}}/delivered";
            }
        });
    });
    $('#delivered_driver').on('click', function(e){
        e.preventDefault();
        KTApp.blockPage({
            overlayColor: '#000000',
            type: 'v2',
            state: 'success',
            message: '{{"Please wait"|__}}...'
        });
        $.request('onDeliver', {
            success: function(data) {
                KTApp.unblockPage();
                window.location.href = "{{url('dashboard/shipments')}}/{{this.param.id}}/view";
            }
        });
    });
    $('#deliveried').on('click', function(e){
        e.preventDefault();
        KTApp.blockPage({
            overlayColor: '#000000',
            type: 'v2',
            state: 'success',
            message: '{{"Please wait"|__}}...'
        });
        $.request('onDelivery', {
            success: function(data) {
                KTApp.unblockPage();
                window.location.href = "{{url('dashboard/shipments')}}/{{this.param.id}}/view";
            }
        });
    });
    $('#stock').on('click', function(e){
        e.preventDefault();
        KTApp.blockPage({
            overlayColor: '#000000',
            type: 'v2',
            state: 'success',
            message: '{{"Please wait"|__}}...'
        });
        $.request('onStock', {
            success: function(data) {
                KTApp.unblockPage();
                window.location.href = "{{url('dashboard/shipments')}}/stock";
            }
        });
    });
    $('#received').on('click', '.btn-primary', function(e){
        var parent = $('#received');
        var validation = 1;
        $.validator.setDefaults({
            ignore: ":hidden",
       });
        parent.find('input,select').each(function(){
            if($(this).is(':hidden')){
                return;
            }
            if($(this).valid() == false){
                validation = 0;
            }
        });
        if(validation){
            $('#received').modal('toggle');
            KTApp.blockPage({
                overlayColor: '#000000',
                type: 'v2',
                state: 'success',
                message: '{{"Please wait"|__}}...'
            });
        }
    });


    $('#received').find('input,select').each(function(){
        $(this).on('change', function(){
            $('#received .btn-info').removeClass('kt-hidden');
            $('#received .btn-primary').addClass('kt-hidden');
        });
    });

    $('#received .btn-info').removeClass('kt-hidden');
    $('#received .btn-primary').addClass('kt-hidden');


    $('#received').on('click', '.save', function(e){
        var parent = $('#received');
        var validation = 1;
        $.validator.setDefaults({
            ignore: ":hidden",
       });
        parent.find('input,select').each(function(){
            if($(this).is(':hidden')){
                return;
            }
            if($(this).valid() == false){
                validation = 0;
            }
        });
        if(validation){

            var receiver_address_id = $('#received #receiver_address_id').val();
            var package_fee = $('#received #package_fee').val();
            var return_courier_fee = $('#received #return_courier_fee').val();
            var return_defray = $('#received .return_defray:checked').val();
            var return_package_fee = $('#received .return_package_fee:checked').val();

             $.request('onConfirmfees', {
                  data: {return_courier_fee: return_courier_fee, package_fee: package_fee, receiver_address_id: receiver_address_id, return_defray: return_defray, return_package_fee: return_package_fee},
                  success: function(response, status, xhr, $form) {

                      swal.fire({
                          buttonsStyling: false,

                          html: "<strong>{{'The total cost of courier fees is'|__}}:</strong> "+response.delivery_cost+"<br /><strong>{{'The total requested from sender is'|__}}:</strong> "+response.sender_fees+"<br /><strong>{{'The total requested from receiver is'|__}}:</strong> "+response.receiver_fees,
                          type: "warning",

                          confirmButtonText: "{{'Yes, confirm!'|__}}",
                          confirmButtonClass: "btn btn-sm btn-bold btn-success",

                          showCancelButton: true,
                          cancelButtonText: '{{"No, change something"|__}}',
                          cancelButtonClass: "btn btn-sm btn-bold btn-danger"
                      }).then(function (result) {
                          if (result.value) {
                              $('#received .btn-info').addClass('kt-hidden');
                              $('#received .btn-primary').removeClass('kt-hidden');
                          }
                      });
                  }
             });
        }
    });
    $('#postpone').on('click', '.btn-primary', function(e){
        var parent = $('#postpone');
        var validation = 1;
        parent.find('input,select').each(function(){
            if($(this).is(':hidden')){
                return;
            }
            var css_class = $(this).attr('class');
            css_class = css_class.replace('form-control ','');
            if(css_class != 'date'){
                if($(this).valid() == false){
                    validation = 0;
                }
            }
        });
        if(validation){
            $('#postpone').modal('toggle');
            KTApp.blockPage({
                overlayColor: '#000000',
                type: 'v2',
                state: 'success',
                message: '{{"Please wait"|__}}...'
            });
        }
    });
    $('#accept').on('click', function(e){
        e.preventDefault();
        KTApp.blockPage({
            overlayColor: '#000000',
            type: 'v2',
            state: 'success',
            message: '{{"Please wait"|__}}...'
        });

        $.request('onAccept', {
            success: function(data) {
                KTApp.unblockPage();
                window.location.href = "{{url('dashboard/shipments')}}/{{this.param.id}}/view";
            }
        });
    });

    function formatRepo(repo) {
        if (repo.loading) return repo.text;
        var markup = "<div class='select2-result-repository clearfix'>" +
                        "<div class='select2-result-repository__meta'>" +
                        "<div class='select2-result-repository__title'>" + repo.text + "</div>";
                        if (repo.mobile) {
                            markup += "<div class='select2-result-repository__description'>" + repo.mobile + "</div>";
                        }
                    markup += "</div></div>";
        return markup;
    }

    function formatRepoSelection(repo) {
        return repo.text || repo.id;
    }


    $('body').on('change', '#discard_reason', function(e, clickedIndex, newValue, oldValue){
        var selected = $(e.currentTarget).val();
        $('.discard_reason_receiver').addClass('kt-hidden');
        if(selected != '' && selected != 2){
            $('.discard_reason_receiver').removeClass('kt-hidden');
        }
    });
    $('body').on('change', '#receiver_id', function(e, clickedIndex, newValue, oldValue){
        var selected = $(e.currentTarget).val();
        if(selected == 'new'){
            $('select.receiver_address_id').html('').val('').selectpicker('refresh');
            $('#addnewreceiver').removeClass('kt-hidden');
        }else if(selected != ''){
            $('#addnewreceiver').addClass('kt-hidden');
            $.request('onClientaddresses', {
                 data: {id: selected},
                 success: function(response, status, xhr, $form) {
                     $('select.receiver_address_id').html(response.html).selectpicker('refresh');
                     $('select.receiver_address_id').val(response.default).selectpicker('refresh');
                     if(response.default == 'new'){
                         $('#addnewreceiveraddress').removeClass('kt-hidden');
                     }else if(selected != ''){
                         $('#addnewreceiveraddress').addClass('kt-hidden');
                     }



                     var selected = response.default;
                     var type = $('.type:checked').val();
                     var sender_address_id = $('#sender_address_id').val();
                     var packaging_id = $('#packaging_id').val();
                     var return_defray = $('.return_defray:checked').val();
                     var return_package_fee = $('.return_package_fee:checked').val();
                     if(selected != '' && selected != 'new'){
                         $.request('onChangefees', {
                              data: {sender_address_id: sender_address_id, packaging_id: packaging_id, type: type, receiver_address_id: selected, return_defray: return_defray, return_package_fee: return_package_fee},
                              success: function(response, status, xhr, $form) {
                                   $('#delivery_cost').val(response.delivery_cost);
                                   $('#return_courier_fee').val(response.return_courier_fee);
                              }
                         });
                    }
                 }
            });
        }
    });
    $('body').on('click', '#addnewreceiver .save', function(e){
        e.preventDefault();
        var parent = $('#addnewreceiver');
        var validation = 1;
        parent.find('input,select').each(function(){
            if($(this).is(':hidden')){
                return;
            }
            if($(this).valid() == false){
                validation = 0;
            }
        });


        if(validation){
            KTApp.blockPage({
                overlayColor: '#000000',
                type: 'v2',
                state: 'primary',
                message: '{{"Processing, please wait"|__}}...'
            });
            $.request('onNewclient', {
                 data: {name: parent.find('.name').val(), mobile: parent.find('.mobile').val(), email: parent.find('.email').val(), gender: parent.find('.gender:checked').val(), street_addr: parent.find('.street_addr').val(), lat: parent.find('.lat').val(), lng: parent.find('.lng').val(), url: parent.find('.url').val(), area_id: parent.find('.area_id').find("option:selected").val(), city_id: parent.find('.city_id').find("option:selected").val(), postal_code: parent.find('.postal_code').val(), state_id: parent.find('.state_id').find("option:selected").val(), country_id: parent.find('.country_id').find("option:selected").val(), connect: parent.find('.connect:checked').val(), username: parent.find('.username').val(), password: parent.find('.password').val()},
                 error: function(response, status, xhr, $form) {
                     swal.fire({
                         title: '{{"Error!"|__}}',
                         text: response.responseText,
                         type: 'error',
                         buttonsStyling: false,
                         confirmButtonText: '{{"OK"|__}}',
                         confirmButtonClass: "btn btn-sm btn-bold btn-brand",
                     });
                     KTApp.unblockPage();
                 },
                 success: function(response, status, xhr, $form) {
                     var newOption = new Option(response.name, response.id, false, true);
                     $('#receiver_id').append(newOption).trigger('change');
                     $('select.receiver_address_id').html('<option value="'+response.address_id+'">'+response.address_name+'</option>').selectpicker('refresh');
                     $('select.receiver_address_id').val(response.address_id).selectpicker('refresh');


                      var selected = response.address_id;
                      var type = $('.type:checked').val();
                      var sender_address_id = $('#sender_address_id').val();
                      var packaging_id = $('#packaging_id').val();
                      var return_defray = $('.return_defray:checked').val();
                      var return_package_fee = $('.return_package_fee:checked').val();
                      if(selected != '' && selected != 'new'){
                          $.request('onChangefees', {
                               data: {sender_address_id: sender_address_id, packaging_id: packaging_id, type: type, receiver_address_id: selected, return_defray: return_defray, return_package_fee: return_package_fee},
                               success: function(response, status, xhr, $form) {
                                    $('#delivery_cost').val(response.delivery_cost);
                                    $('#return_courier_fee').val(response.return_courier_fee);
                               }
                          });
                     }

                     KTApp.unblockPage();
                     parent.find('input,select').each(function(){
                         $(this).val('');
                         $(this).selectpicker('refresh');
                     });
                     $('#addnewreceiver').addClass('kt-hidden');
                 }
            });
        }
    });
    $('body').on('click', '#addnewreceiver .cancel', function(e){
        e.preventDefault();
        var newOption = new Option('', '', false, true);
        $('#receiver_id').append(newOption).trigger('change');
        $('#addnewreceiver').addClass('kt-hidden');
    });

    $('body').on('changed.bs.select', '.receiver_address_id', function(e, clickedIndex, newValue, oldValue){
        var selected = $(e.currentTarget).val();
        if(selected == 'new'){
            $('#addnewreceiveraddress').removeClass('kt-hidden');
        }else if(selected != ''){
            $('#addnewreceiveraddress').addClass('kt-hidden');
        }
    });
    $('body').on('click', '#addnewreceiveraddress .save', function(e){
        e.preventDefault();
        var parent = $('#addnewreceiveraddress');
        var validation = 1;
        parent.find('input,select').each(function(){
            if($(this).is(':hidden')){
                return;
            }
            if($(this).valid() == false){
                validation = 0;
            }
        });

        if(validation){
            KTApp.blockPage({
                overlayColor: '#000000',
                type: 'v2',
                state: 'primary',
                message: '{{"Processing, please wait"|__}}...'
            });
            $.request('onNewclientaddress', {
                 data: {client_id: $('#receiver_id').val(), street_addr: parent.find('.street_addr').val(), lat: parent.find('.lat').val(), lng: parent.find('.lng').val(), url: parent.find('.url').val(), area_id: parent.find('.area_id').find("option:selected").val(), city_id: parent.find('.city_id').find("option:selected").val(), postal_code: parent.find('.postal_code').val(), state_id: parent.find('.state_id').find("option:selected").val(), country_id: parent.find('.country_id').find("option:selected").val()},
                 error: function(response, status, xhr, $form) {
                     swal.fire({
                         title: '{{"Error!"|__}}',
                         text: response.responseText,
                         type: 'error',
                         buttonsStyling: false,
                         confirmButtonText: '{{"OK"|__}}',
                         confirmButtonClass: "btn btn-sm btn-bold btn-brand",
                     });
                     KTApp.unblockPage();
                 },
                 success: function(response, status, xhr, $form) {
                     $('select.receiver_address_id').html(response.html).selectpicker('refresh');
                     $('select.receiver_address_id').val(response.default).selectpicker('refresh');




                       var selected = response.default;
                       var type = $('.type:checked').val();
                       var sender_address_id = $('#sender_address_id').val();
                       var packaging_id = $('#packaging_id').val();
                       var return_defray = $('.return_defray:checked').val();
                       var return_package_fee = $('.return_package_fee:checked').val();
                       if(selected != '' && selected != 'new'){
                           $.request('onChangefees', {
                                data: {sender_address_id: sender_address_id, packaging_id: packaging_id, type: type, receiver_address_id: selected, return_defray: return_defray, return_package_fee: return_package_fee},
                                success: function(response, status, xhr, $form) {
                                     $('#delivery_cost').val(response.delivery_cost);
                                     $('#return_courier_fee').val(response.return_courier_fee);
                                }
                           });
                      }



                     KTApp.unblockPage();
                     parent.find('input,select').each(function(){
                         $(this).val('');
                         $(this).selectpicker('refresh');
                     });
                     $('#addnewreceiveraddress').addClass('kt-hidden');
                 }
            });
        }
    });
    $('body').on('click', '#addnewreceiveraddress .cancel', function(e){
        e.preventDefault();
        $('select.receiver_address_id').val('').selectpicker('refresh');
        $('#addnewreceiveraddress').addClass('kt-hidden');
    });


    $('body').on('changed.bs.select', '.country_id', function(e, clickedIndex, newValue, oldValue){
        var selected = $(e.currentTarget).val();
        var parent = $(e.currentTarget).parent().parent().parent().parent();
        if(selected != ''){
            $.request('onListstates', {
                 data: {id: selected},
                 success: function(response, status, xhr, $form) {
                      parent.find('select.state_id').selectpicker({title: '{{'Select'|__}}'}).selectpicker('refresh');
                      parent.find('select.state_id').html(response.html).selectpicker('refresh');
                 }
            });
       }
    });
    $('body').on('changed.bs.select', '.state_id', function(e, clickedIndex, newValue, oldValue){
        var selected = $(e.currentTarget).val();
        var parent = $(e.currentTarget).parent().parent().parent().parent();
        if(selected != ''){
            $.request('onListcities', {
                 data: {id: selected},
                 success: function(response, status, xhr, $form) {
                      parent.find('select.city_id').selectpicker({title: '{{'Select'|__}}'}).selectpicker('refresh');
                      parent.find('select.city_id').html(response.html).selectpicker('refresh');
                 }
            });
       }
    });
    $('body').on('changed.bs.select', '.city_id', function(e, clickedIndex, newValue, oldValue){
        var selected = $(e.currentTarget).val();
        var parent = $(e.currentTarget).parent().parent().parent().parent();
        if(selected != ''){
            $.request('onListareas', {
                 data: {id: selected},
                 success: function(response, status, xhr, $form) {
                      parent.find('select.area_id').selectpicker({title: '{{'Select'|__}}'}).selectpicker('refresh');
                      parent.find('select.area_id').html(response.html).selectpicker('refresh');
                 }
            });
       }
    });

    $('body').on('change', '#receiver_address_id', function(e, clickedIndex, newValue, oldValue){
        var selected = $(e.currentTarget).val();
         var type = $('.type:checked').val();
         var sender_address_id = $('#sender_address_id').val();
         var packaging_id = $('#packaging_id').val();
         var return_defray = $('.return_defray:checked').val();
         var return_package_fee = $('.return_package_fee:checked').val();
         if(selected != '' && selected != 'new'){
             $.request('onChangefees', {
                  data: {sender_address_id: sender_address_id, type: type, packaging_id:packaging_id, receiver_address_id: selected, return_defray: return_defray, return_package_fee: return_package_fee},
                  success: function(response, status, xhr, $form) {
                       $('#delivery_cost').val(response.delivery_cost);
                       $('#return_courier_fee').val(response.return_courier_fee);
                  }
             });
        }
    });


    $(".clients").select2({
        {% if currentLang == 'ar'%}
            dir: "rtl",
        {% endif %}
        language: {
            errorLoading: function () {
                return "{{'There is an error while searching'|__}}...";
            },
            inputTooLong: function (args) {
                return "{{'You must enter less characters'|__}}...";
            },
            inputTooShort: function (args) {
                return "{{'You must enter more characters'|__}}...";
            },
            loadingMore: function () {
                return "{{'Loading More'|__}}...";
            },
            maximumSelected: function (args) {
                return "{{'Maximum element has been selected'|__}}...";
            },
            noResults: function () {
                return "{{'No result found'|__}}...";
            },
            searching: function () {
                return "{{'Searching'|__}}...";
            }
        },
        placeholder: "{{'Search for client'|__}}",
        allowClear: true,
        ajax: {
            transport: function(params, success, failure) {
                var $request = $.request('onGetclients', {
                    data: params.data,
                })
                $request.done(success)
                $request.fail(failure)

                return $request
            },
            dataType: 'json',
            processResults: function (response) {
                return {
                    results: response
                };
            },
            cache: true
        },
        escapeMarkup: function(markup) {
            return markup;
        },
        minimumInputLength: 0,
        templateResult: formatRepo,
        templateSelection: formatRepoSelection
    });
    $('.bootstrap-touchspin-vertical-btn').TouchSpin({
        buttondown_class: 'btn btn-secondary',
        buttonup_class: 'btn btn-secondary',
        verticalbuttons: true,
        verticalup: '<i class="la la-plus"></i>',
        verticaldown: '<i class="la la-minus"></i>'
    });
    $('.address').each(function(){
        var address = $(this);
        address.geocomplete({
            map: ".map_canvas.map_"+address.attr('rel'),
            mapOptions: {
                zoom: 18
            },
            markerOptions: {
                draggable: true
            },
            details: ".location-"+$(this).attr('rel'),
            detailsAttribute: 'data-'+$(this).attr('rel'),
            autoselect: true,
        });
        address.bind("geocode:dragged", function(event, latLng){
            $("input[data-"+address.attr('rel')+"=lat]").val(latLng.lat());
            $("input[data-"+address.attr('rel')+"=lng]").val(latLng.lng());
        });

    });
    $('body').on('click', '.connect', function(){
        if($(this).is(":checked")){
            $('#connect_'+$(this).val()).removeClass('kt-hidden');
        }else{
            $('#connect_'+$(this).val()).addClass('kt-hidden');
        }
    });
    $('body').on('click', '.return_defray', function(){
        if($(this).val() == 1){
            $('.package_fee').removeClass('kt-hidden');


             var sender_address_id = $('#sender_address_id').val();
             var receiver_address_id = $('#receiver_address_id').val();
             var packaging_id = $('#packaging_id').val();
             var type = $('.type:checked').val();
             var return_defray = $('.return_defray:checked').val();
             var return_package_fee = $('.return_package_fee:checked').val();
             $.request('onChangefees', {
                  data: {sender_address_id: sender_address_id, type: type, packaging_id:packaging_id, receiver_address_id: receiver_address_id, return_defray: return_defray, return_package_fee: return_package_fee},
                  success: function(response, status, xhr, $form) {
                       $('#delivery_cost').val(response.delivery_cost);
                       $('#return_courier_fee').val(response.return_courier_fee);
                  }
             });
        }else{
            $('.package_fee').addClass('kt-hidden');
        }
    });
    $(".fees").inputmask('999{{primary_currency.thousand_separator}}999{{primary_currency.thousand_separator}}999{{primary_currency.decimal_point}}{% for i in '1'..primary_currency.initbiz_money_fraction_digits %}9{% endfor %}', {
        numericInput: true
    });

    $('#delete').on('click', function(e){
        e.preventDefault();

        swal.fire({
            buttonsStyling: false,

            text: "{{'Are you sure to delete'|__}}",
            type: "error",

            confirmButtonText: "{{'Yes, delete!'|__}}",
            confirmButtonClass: "btn btn-sm btn-bold btn-danger",

            showCancelButton: true,
            cancelButtonText: '{{"No, cancel"|__}}',
            cancelButtonClass: "btn btn-sm btn-bold btn-brand"
        }).then(function (result) {
            if (result.value) {
                KTApp.blockPage({
                    overlayColor: '#000000',
                    type: 'v2',
                    state: 'success',
                    message: '{{"Please wait"|__}}...'
                });
                $.request('onDelete', {
                    success: function(data) {
                        KTApp.unblockPage();
                        swal.fire({
                            title: '{{"Deleted!"|__}}',
                            text: '{{"Your selected records have been deleted! :("|__}}',
                            type: 'success',
                            buttonsStyling: false,
                            confirmButtonText: '{{"OK"|__}}',
                            confirmButtonClass: "btn btn-sm btn-bold btn-brand",
                        });
                        window.location.href = "{{url('dashboard/shipments')}}";
                    }
                });
                // result.dismiss can be 'cancel', 'overlay',
                // 'close', and 'timer'
            } else if (result.dismiss === 'cancel') {
                swal.fire({
                    title: '{{"Cancelled"|__}}',
                    text: '{{"You selected records have not been deleted! :)"|__}}',
                    type: 'error',
                    buttonsStyling: false,
                    confirmButtonText: '{{"OK"|__}}',
                    confirmButtonClass: "btn btn-sm btn-bold btn-brand",
                });
            }
        });
    });
    if($('.kt-widget__action ul.kt-nav li').length == 0){
        $('.kt-widget__action').hide();
    }
});
</script>
{% endput %}
